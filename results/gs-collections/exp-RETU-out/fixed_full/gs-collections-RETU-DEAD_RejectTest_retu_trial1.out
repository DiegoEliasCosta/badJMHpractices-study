# JMH version: 1.21
# VM version: JDK 10.0.1, Java HotSpot(TM) 64-Bit Server VM, 10.0.1+10
# VM invoker: /usr/lib/jvm/java-10-oracle/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gs.collections.impl.jmh.RejectTest.serial_eager_gsc

# Run progress: 0.00% complete, ETA 00:58:20
# Fork: 1 of 5
# Warmup Iteration   1: 68.055 ops/s
# Warmup Iteration   2: 70.756 ops/s
# Warmup Iteration   3: 68.800 ops/s
# Warmup Iteration   4: 68.982 ops/s
# Warmup Iteration   5: 71.590 ops/s
Iteration   1: 71.902 ops/s
Iteration   2: 71.656 ops/s
Iteration   3: 71.530 ops/s
Iteration   4: 72.073 ops/s
Iteration   5: 69.824 ops/s

# Run progress: 2.86% complete, ETA 00:57:04
# Fork: 2 of 5
# Warmup Iteration   1: 64.382 ops/s
# Warmup Iteration   2: 66.030 ops/s
# Warmup Iteration   3: 66.289 ops/s
# Warmup Iteration   4: 62.775 ops/s
# Warmup Iteration   5: 68.194 ops/s
Iteration   1: 70.908 ops/s
Iteration   2: 74.215 ops/s
Iteration   3: 73.730 ops/s
Iteration   4: 73.632 ops/s
Iteration   5: 74.577 ops/s

# Run progress: 5.71% complete, ETA 00:55:22
# Fork: 3 of 5
# Warmup Iteration   1: 67.708 ops/s
# Warmup Iteration   2: 70.366 ops/s
# Warmup Iteration   3: 69.305 ops/s
# Warmup Iteration   4: 68.781 ops/s
# Warmup Iteration   5: 71.612 ops/s
Iteration   1: 71.636 ops/s
Iteration   2: 71.572 ops/s
Iteration   3: 71.951 ops/s
Iteration   4: 72.414 ops/s
Iteration   5: 72.414 ops/s

# Run progress: 8.57% complete, ETA 00:53:40
# Fork: 4 of 5
# Warmup Iteration   1: 66.290 ops/s
# Warmup Iteration   2: 68.829 ops/s
# Warmup Iteration   3: 67.567 ops/s
# Warmup Iteration   4: 66.556 ops/s
# Warmup Iteration   5: 70.216 ops/s
Iteration   1: 69.453 ops/s
Iteration   2: 70.257 ops/s
Iteration   3: 69.917 ops/s
Iteration   4: 71.144 ops/s
Iteration   5: 70.989 ops/s

# Run progress: 11.43% complete, ETA 00:52:00
# Fork: 5 of 5
# Warmup Iteration   1: 67.438 ops/s
# Warmup Iteration   2: 69.961 ops/s
# Warmup Iteration   3: 68.926 ops/s
# Warmup Iteration   4: 68.269 ops/s
# Warmup Iteration   5: 70.351 ops/s
Iteration   1: 70.514 ops/s
Iteration   2: 70.788 ops/s
Iteration   3: 71.183 ops/s
Iteration   4: 71.872 ops/s
Iteration   5: 71.823 ops/s


Result "com.gs.collections.impl.jmh.RejectTest.serial_eager_gsc":
  71.679 ±(99.9%) 0.986 ops/s [Average]
  (min, avg, max) = (69.453, 71.679, 74.577), stdev = 1.316
  CI (99.9%): [70.693, 72.665] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 10.0.1, Java HotSpot(TM) 64-Bit Server VM, 10.0.1+10
# VM invoker: /usr/lib/jvm/java-10-oracle/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gs.collections.impl.jmh.RejectTest.serial_eager_gsc_select_predicates_not

# Run progress: 14.29% complete, ETA 00:50:19
# Fork: 1 of 5
# Warmup Iteration   1: 58.241 ops/s
# Warmup Iteration   2: 59.702 ops/s
# Warmup Iteration   3: 60.725 ops/s
# Warmup Iteration   4: 59.053 ops/s
# Warmup Iteration   5: 61.714 ops/s
Iteration   1: 64.229 ops/s
Iteration   2: 64.298 ops/s
Iteration   3: 64.281 ops/s
Iteration   4: 63.443 ops/s
Iteration   5: 60.693 ops/s

# Run progress: 17.14% complete, ETA 00:48:38
# Fork: 2 of 5
# Warmup Iteration   1: 54.504 ops/s
# Warmup Iteration   2: 56.768 ops/s
# Warmup Iteration   3: 56.536 ops/s
# Warmup Iteration   4: 55.526 ops/s
# Warmup Iteration   5: 55.783 ops/s
Iteration   1: 58.198 ops/s
Iteration   2: 59.726 ops/s
Iteration   3: 59.318 ops/s
Iteration   4: 59.562 ops/s
Iteration   5: 57.391 ops/s

# Run progress: 20.00% complete, ETA 00:46:58
# Fork: 3 of 5
# Warmup Iteration   1: 57.731 ops/s
# Warmup Iteration   2: 60.300 ops/s
# Warmup Iteration   3: 59.851 ops/s
# Warmup Iteration   4: 58.158 ops/s
# Warmup Iteration   5: 60.885 ops/s
Iteration   1: 63.355 ops/s
Iteration   2: 63.271 ops/s
Iteration   3: 63.112 ops/s
Iteration   4: 62.792 ops/s
Iteration   5: 59.814 ops/s

# Run progress: 22.86% complete, ETA 00:45:17
# Fork: 4 of 5
# Warmup Iteration   1: 55.851 ops/s
# Warmup Iteration   2: 58.320 ops/s
# Warmup Iteration   3: 58.072 ops/s
# Warmup Iteration   4: 57.042 ops/s
# Warmup Iteration   5: 57.792 ops/s
Iteration   1: 61.146 ops/s
Iteration   2: 61.154 ops/s
Iteration   3: 61.165 ops/s
Iteration   4: 61.104 ops/s
Iteration   5: 60.439 ops/s

# Run progress: 25.71% complete, ETA 00:43:36
# Fork: 5 of 5
# Warmup Iteration   1: 54.719 ops/s
# Warmup Iteration   2: 58.551 ops/s
# Warmup Iteration   3: 59.260 ops/s
# Warmup Iteration   4: 56.552 ops/s
# Warmup Iteration   5: 59.020 ops/s
Iteration   1: 62.390 ops/s
Iteration   2: 62.547 ops/s
Iteration   3: 64.090 ops/s
Iteration   4: 62.528 ops/s
Iteration   5: 59.278 ops/s


Result "com.gs.collections.impl.jmh.RejectTest.serial_eager_gsc_select_predicates_not":
  61.573 ±(99.9%) 1.503 ops/s [Average]
  (min, avg, max) = (57.391, 61.573, 64.298), stdev = 2.007
  CI (99.9%): [60.070, 63.076] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 10.0.1, Java HotSpot(TM) 64-Bit Server VM, 10.0.1+10
# VM invoker: /usr/lib/jvm/java-10-oracle/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gs.collections.impl.jmh.RejectTest.serial_lazy_gsc

# Run progress: 28.57% complete, ETA 00:41:56
# Fork: 1 of 5
# Warmup Iteration   1: 51.947 ops/s
# Warmup Iteration   2: 54.379 ops/s
# Warmup Iteration   3: 54.155 ops/s
# Warmup Iteration   4: 53.232 ops/s
# Warmup Iteration   5: 53.114 ops/s
Iteration   1: 53.648 ops/s
Iteration   2: 59.074 ops/s
Iteration   3: 60.080 ops/s
Iteration   4: 59.829 ops/s
Iteration   5: 59.468 ops/s

# Run progress: 31.43% complete, ETA 00:40:15
# Fork: 2 of 5
# Warmup Iteration   1: 51.847 ops/s
# Warmup Iteration   2: 53.779 ops/s
# Warmup Iteration   3: 54.049 ops/s
# Warmup Iteration   4: 52.636 ops/s
# Warmup Iteration   5: 53.517 ops/s
Iteration   1: 57.463 ops/s
Iteration   2: 58.157 ops/s
Iteration   3: 59.878 ops/s
Iteration   4: 59.869 ops/s
Iteration   5: 59.401 ops/s

# Run progress: 34.29% complete, ETA 00:38:34
# Fork: 3 of 5
# Warmup Iteration   1: 52.873 ops/s
# Warmup Iteration   2: 55.135 ops/s
# Warmup Iteration   3: 55.003 ops/s
# Warmup Iteration   4: 53.616 ops/s
# Warmup Iteration   5: 54.317 ops/s
Iteration   1: 54.609 ops/s
Iteration   2: 60.966 ops/s
Iteration   3: 60.084 ops/s
Iteration   4: 61.024 ops/s
Iteration   5: 59.610 ops/s

# Run progress: 37.14% complete, ETA 00:36:54
# Fork: 4 of 5
# Warmup Iteration   1: 52.027 ops/s
# Warmup Iteration   2: 54.814 ops/s
# Warmup Iteration   3: 54.449 ops/s
# Warmup Iteration   4: 52.344 ops/s
# Warmup Iteration   5: 53.989 ops/s
Iteration   1: 53.979 ops/s
Iteration   2: 59.795 ops/s
Iteration   3: 60.309 ops/s
Iteration   4: 60.169 ops/s
Iteration   5: 59.650 ops/s

# Run progress: 40.00% complete, ETA 00:35:13
# Fork: 5 of 5
# Warmup Iteration   1: 48.903 ops/s
# Warmup Iteration   2: 51.736 ops/s
# Warmup Iteration   3: 51.620 ops/s
# Warmup Iteration   4: 50.670 ops/s
# Warmup Iteration   5: 49.861 ops/s
Iteration   1: 51.146 ops/s
Iteration   2: 54.696 ops/s
Iteration   3: 57.267 ops/s
Iteration   4: 57.279 ops/s
Iteration   5: 57.442 ops/s


Result "com.gs.collections.impl.jmh.RejectTest.serial_lazy_gsc":
  58.196 ±(99.9%) 1.970 ops/s [Average]
  (min, avg, max) = (51.146, 58.196, 61.024), stdev = 2.630
  CI (99.9%): [56.225, 60.166] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 10.0.1, Java HotSpot(TM) 64-Bit Server VM, 10.0.1+10
# VM invoker: /usr/lib/jvm/java-10-oracle/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gs.collections.impl.jmh.RejectTest.serial_lazy_jdk_lambda_negate

# Run progress: 42.86% complete, ETA 00:33:32
# Fork: 1 of 5
# Warmup Iteration   1: 45.942 ops/s
# Warmup Iteration   2: 49.223 ops/s
# Warmup Iteration   3: 48.889 ops/s
# Warmup Iteration   4: 49.159 ops/s
# Warmup Iteration   5: 48.979 ops/s
Iteration   1: 48.690 ops/s
Iteration   2: 47.395 ops/s
Iteration   3: 48.195 ops/s
Iteration   4: 48.483 ops/s
Iteration   5: 48.200 ops/s

# Run progress: 45.71% complete, ETA 00:31:52
# Fork: 2 of 5
# Warmup Iteration   1: 46.770 ops/s
# Warmup Iteration   2: 49.104 ops/s
# Warmup Iteration   3: 49.015 ops/s
# Warmup Iteration   4: 49.001 ops/s
# Warmup Iteration   5: 48.804 ops/s
Iteration   1: 48.502 ops/s
Iteration   2: 48.052 ops/s
Iteration   3: 47.079 ops/s
Iteration   4: 48.422 ops/s
Iteration   5: 48.532 ops/s

# Run progress: 48.57% complete, ETA 00:30:11
# Fork: 3 of 5
# Warmup Iteration   1: 46.190 ops/s
# Warmup Iteration   2: 46.632 ops/s
# Warmup Iteration   3: 48.411 ops/s
# Warmup Iteration   4: 48.194 ops/s
# Warmup Iteration   5: 48.112 ops/s
Iteration   1: 47.878 ops/s
Iteration   2: 45.510 ops/s
Iteration   3: 47.838 ops/s
Iteration   4: 47.852 ops/s
Iteration   5: 47.860 ops/s

# Run progress: 51.43% complete, ETA 00:28:30
# Fork: 4 of 5
# Warmup Iteration   1: 46.091 ops/s
# Warmup Iteration   2: 49.119 ops/s
# Warmup Iteration   3: 49.131 ops/s
# Warmup Iteration   4: 47.583 ops/s
# Warmup Iteration   5: 48.994 ops/s
Iteration   1: 48.129 ops/s
Iteration   2: 48.235 ops/s
Iteration   3: 48.254 ops/s
Iteration   4: 47.727 ops/s
Iteration   5: 46.934 ops/s

# Run progress: 54.29% complete, ETA 00:26:50
# Fork: 5 of 5
# Warmup Iteration   1: 45.824 ops/s
# Warmup Iteration   2: 47.875 ops/s
# Warmup Iteration   3: 48.092 ops/s
# Warmup Iteration   4: 48.050 ops/s
# Warmup Iteration   5: 47.860 ops/s
Iteration   1: 47.825 ops/s
Iteration   2: 47.446 ops/s
Iteration   3: 47.685 ops/s
Iteration   4: 47.529 ops/s
Iteration   5: 47.672 ops/s


Result "com.gs.collections.impl.jmh.RejectTest.serial_lazy_jdk_lambda_negate":
  47.837 ±(99.9%) 0.494 ops/s [Average]
  (min, avg, max) = (45.510, 47.837, 48.690), stdev = 0.660
  CI (99.9%): [47.343, 48.331] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 10.0.1, Java HotSpot(TM) 64-Bit Server VM, 10.0.1+10
# VM invoker: /usr/lib/jvm/java-10-oracle/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gs.collections.impl.jmh.RejectTest.serial_lazy_jdk_lambda_not

# Run progress: 57.14% complete, ETA 00:25:09
# Fork: 1 of 5
# Warmup Iteration   1: 66.933 ops/s
# Warmup Iteration   2: 70.097 ops/s
# Warmup Iteration   3: 69.976 ops/s
# Warmup Iteration   4: 68.973 ops/s
# Warmup Iteration   5: 69.658 ops/s
Iteration   1: 68.957 ops/s
Iteration   2: 69.860 ops/s
Iteration   3: 69.557 ops/s
Iteration   4: 69.904 ops/s
Iteration   5: 65.677 ops/s

# Run progress: 60.00% complete, ETA 00:23:29
# Fork: 2 of 5
# Warmup Iteration   1: 66.181 ops/s
# Warmup Iteration   2: 69.266 ops/s
# Warmup Iteration   3: 69.152 ops/s
# Warmup Iteration   4: 68.096 ops/s
# Warmup Iteration   5: 68.894 ops/s
Iteration   1: 68.183 ops/s
Iteration   2: 68.831 ops/s
Iteration   3: 68.793 ops/s
Iteration   4: 69.103 ops/s
Iteration   5: 68.796 ops/s

# Run progress: 62.86% complete, ETA 00:21:48
# Fork: 3 of 5
# Warmup Iteration   1: 66.640 ops/s
# Warmup Iteration   2: 70.615 ops/s
# Warmup Iteration   3: 68.872 ops/s
# Warmup Iteration   4: 66.171 ops/s
# Warmup Iteration   5: 70.118 ops/s
Iteration   1: 69.312 ops/s
Iteration   2: 70.060 ops/s
Iteration   3: 69.144 ops/s
Iteration   4: 70.310 ops/s
Iteration   5: 69.988 ops/s

# Run progress: 65.71% complete, ETA 00:20:07
# Fork: 4 of 5
# Warmup Iteration   1: 65.417 ops/s
# Warmup Iteration   2: 68.729 ops/s
# Warmup Iteration   3: 68.267 ops/s
# Warmup Iteration   4: 65.846 ops/s
# Warmup Iteration   5: 67.960 ops/s
Iteration   1: 67.457 ops/s
Iteration   2: 68.285 ops/s
Iteration   3: 68.044 ops/s
Iteration   4: 68.326 ops/s
Iteration   5: 68.053 ops/s

# Run progress: 68.57% complete, ETA 00:18:27
# Fork: 5 of 5
# Warmup Iteration   1: 66.212 ops/s
# Warmup Iteration   2: 67.579 ops/s
# Warmup Iteration   3: 69.126 ops/s
# Warmup Iteration   4: 68.162 ops/s
# Warmup Iteration   5: 68.719 ops/s
Iteration   1: 64.316 ops/s
Iteration   2: 68.666 ops/s
Iteration   3: 69.055 ops/s
Iteration   4: 65.168 ops/s
Iteration   5: 66.192 ops/s


Result "com.gs.collections.impl.jmh.RejectTest.serial_lazy_jdk_lambda_not":
  68.401 ±(99.9%) 1.169 ops/s [Average]
  (min, avg, max) = (64.316, 68.401, 70.310), stdev = 1.561
  CI (99.9%): [67.232, 69.571] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 10.0.1, Java HotSpot(TM) 64-Bit Server VM, 10.0.1+10
# VM invoker: /usr/lib/jvm/java-10-oracle/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gs.collections.impl.jmh.RejectTest.serial_lazy_streams_gsc_lambda_negate

# Run progress: 71.43% complete, ETA 00:16:46
# Fork: 1 of 5
# Warmup Iteration   1: 45.666 ops/s
# Warmup Iteration   2: 46.875 ops/s
# Warmup Iteration   3: 48.363 ops/s
# Warmup Iteration   4: 47.750 ops/s
# Warmup Iteration   5: 48.345 ops/s
Iteration   1: 47.757 ops/s
Iteration   2: 48.295 ops/s
Iteration   3: 48.316 ops/s
Iteration   4: 48.149 ops/s
Iteration   5: 48.327 ops/s

# Run progress: 74.29% complete, ETA 00:15:05
# Fork: 2 of 5
# Warmup Iteration   1: 46.512 ops/s
# Warmup Iteration   2: 48.651 ops/s
# Warmup Iteration   3: 46.825 ops/s
# Warmup Iteration   4: 47.059 ops/s
# Warmup Iteration   5: 47.261 ops/s
Iteration   1: 47.804 ops/s
Iteration   2: 47.338 ops/s
Iteration   3: 48.201 ops/s
Iteration   4: 46.521 ops/s
Iteration   5: 46.328 ops/s

# Run progress: 77.14% complete, ETA 00:13:25
# Fork: 3 of 5
# Warmup Iteration   1: 46.745 ops/s
# Warmup Iteration   2: 49.245 ops/s
# Warmup Iteration   3: 49.128 ops/s
# Warmup Iteration   4: 47.470 ops/s
# Warmup Iteration   5: 48.834 ops/s
Iteration   1: 48.507 ops/s
Iteration   2: 48.744 ops/s
Iteration   3: 47.817 ops/s
Iteration   4: 48.979 ops/s
Iteration   5: 48.393 ops/s

# Run progress: 80.00% complete, ETA 00:11:44
# Fork: 4 of 5
# Warmup Iteration   1: 45.560 ops/s
# Warmup Iteration   2: 46.744 ops/s
# Warmup Iteration   3: 45.336 ops/s
# Warmup Iteration   4: 46.204 ops/s
# Warmup Iteration   5: 47.816 ops/s
Iteration   1: 46.909 ops/s
Iteration   2: 47.637 ops/s
Iteration   3: 47.464 ops/s
Iteration   4: 47.443 ops/s
Iteration   5: 47.737 ops/s

# Run progress: 82.86% complete, ETA 00:10:03
# Fork: 5 of 5
# Warmup Iteration   1: 45.884 ops/s
# Warmup Iteration   2: 47.790 ops/s
# Warmup Iteration   3: 44.547 ops/s
# Warmup Iteration   4: 47.605 ops/s
# Warmup Iteration   5: 47.442 ops/s
Iteration   1: 47.273 ops/s
Iteration   2: 47.447 ops/s
Iteration   3: 47.619 ops/s
Iteration   4: 47.573 ops/s
Iteration   5: 47.583 ops/s


Result "com.gs.collections.impl.jmh.RejectTest.serial_lazy_streams_gsc_lambda_negate":
  47.766 ±(99.9%) 0.478 ops/s [Average]
  (min, avg, max) = (46.328, 47.766, 48.979), stdev = 0.639
  CI (99.9%): [47.288, 48.245] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 10.0.1, Java HotSpot(TM) 64-Bit Server VM, 10.0.1+10
# VM invoker: /usr/lib/jvm/java-10-oracle/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gs.collections.impl.jmh.RejectTest.serial_lazy_streams_gsc_lambda_not

# Run progress: 85.71% complete, ETA 00:08:23
# Fork: 1 of 5
# Warmup Iteration   1: 51.048 ops/s
# Warmup Iteration   2: 53.461 ops/s
# Warmup Iteration   3: 52.617 ops/s
# Warmup Iteration   4: 53.219 ops/s
# Warmup Iteration   5: 52.593 ops/s
Iteration   1: 53.056 ops/s
Iteration   2: 53.054 ops/s
Iteration   3: 51.979 ops/s
Iteration   4: 53.088 ops/s
Iteration   5: 51.571 ops/s

# Run progress: 88.57% complete, ETA 00:06:42
# Fork: 2 of 5
# Warmup Iteration   1: 51.251 ops/s
# Warmup Iteration   2: 55.220 ops/s
# Warmup Iteration   3: 55.145 ops/s
# Warmup Iteration   4: 54.978 ops/s
# Warmup Iteration   5: 54.480 ops/s
Iteration   1: 54.872 ops/s
Iteration   2: 53.378 ops/s
Iteration   3: 54.861 ops/s
Iteration   4: 53.808 ops/s
Iteration   5: 54.815 ops/s

# Run progress: 91.43% complete, ETA 00:05:01
# Fork: 3 of 5
# Warmup Iteration   1: 51.432 ops/s
# Warmup Iteration   2: 55.040 ops/s
# Warmup Iteration   3: 54.876 ops/s
# Warmup Iteration   4: 54.509 ops/s
# Warmup Iteration   5: 54.109 ops/s
Iteration   1: 54.148 ops/s
Iteration   2: 54.797 ops/s
Iteration   3: 54.609 ops/s
Iteration   4: 54.614 ops/s
Iteration   5: 54.498 ops/s

# Run progress: 94.29% complete, ETA 00:03:21
# Fork: 4 of 5
# Warmup Iteration   1: 52.946 ops/s
# Warmup Iteration   2: 55.840 ops/s
# Warmup Iteration   3: 54.586 ops/s
# Warmup Iteration   4: 54.609 ops/s
# Warmup Iteration   5: 55.107 ops/s
Iteration   1: 55.329 ops/s
Iteration   2: 55.005 ops/s
Iteration   3: 55.516 ops/s
Iteration   4: 55.512 ops/s
Iteration   5: 55.446 ops/s

# Run progress: 97.14% complete, ETA 00:01:40
# Fork: 5 of 5
# Warmup Iteration   1: 52.187 ops/s
# Warmup Iteration   2: 53.598 ops/s
# Warmup Iteration   3: 53.616 ops/s
# Warmup Iteration   4: 52.638 ops/s
# Warmup Iteration   5: 52.595 ops/s
Iteration   1: 53.358 ops/s
Iteration   2: 51.064 ops/s
Iteration   3: 52.567 ops/s
Iteration   4: 52.904 ops/s
Iteration   5: 53.253 ops/s


Result "com.gs.collections.impl.jmh.RejectTest.serial_lazy_streams_gsc_lambda_not":
  53.884 ±(99.9%) 0.952 ops/s [Average]
  (min, avg, max) = (51.064, 53.884, 55.516), stdev = 1.271
  CI (99.9%): [52.932, 54.836] (assumes normal distribution)


# Run complete. Total time: 00:58:42

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                           Mode  Cnt   Score   Error  Units
RejectTest.serial_eager_gsc                        thrpt   25  71.679 ± 0.986  ops/s
RejectTest.serial_eager_gsc_select_predicates_not  thrpt   25  61.573 ± 1.503  ops/s
RejectTest.serial_lazy_gsc                         thrpt   25  58.196 ± 1.970  ops/s
RejectTest.serial_lazy_jdk_lambda_negate           thrpt   25  47.837 ± 0.494  ops/s
RejectTest.serial_lazy_jdk_lambda_not              thrpt   25  68.401 ± 1.169  ops/s
RejectTest.serial_lazy_streams_gsc_lambda_negate   thrpt   25  47.766 ± 0.478  ops/s
RejectTest.serial_lazy_streams_gsc_lambda_not      thrpt   25  53.884 ± 0.952  ops/s

Benchmark result is saved to gs-collections/exp-RETU-DEAD-out/gs-collections-RETU-DEAD_RejectTest_retu_trial1.csv
