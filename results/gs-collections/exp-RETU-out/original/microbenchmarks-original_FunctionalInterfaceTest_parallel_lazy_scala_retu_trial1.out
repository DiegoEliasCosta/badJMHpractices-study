# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 2 s each
# Measurement: 10 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gs.collections.impl.jmh.FunctionalInterfaceTest.parallel_lazy_scala
# Parameters: (megamorphicWarmupLevel = 0)

# Run progress: 0.00% complete, ETA 00:16:00
# Fork: 1 of 2
# Warmup Iteration   1: 24.927 ops/s
# Warmup Iteration   2: 35.124 ops/s
# Warmup Iteration   3: 36.858 ops/s
# Warmup Iteration   4: 38.359 ops/s
# Warmup Iteration   5: 37.554 ops/s
# Warmup Iteration   6: 38.412 ops/s
# Warmup Iteration   7: 38.548 ops/s
# Warmup Iteration   8: 38.229 ops/s
# Warmup Iteration   9: 38.156 ops/s
# Warmup Iteration  10: 38.344 ops/s
# Warmup Iteration  11: 38.280 ops/s
# Warmup Iteration  12: 37.669 ops/s
# Warmup Iteration  13: 38.414 ops/s
# Warmup Iteration  14: 38.146 ops/s
# Warmup Iteration  15: 38.195 ops/s
# Warmup Iteration  16: 38.801 ops/s
# Warmup Iteration  17: 37.799 ops/s
# Warmup Iteration  18: 38.203 ops/s
# Warmup Iteration  19: 38.256 ops/s
# Warmup Iteration  20: 38.081 ops/s
Iteration   1: 38.063 ops/s
Iteration   2: 38.782 ops/s
Iteration   3: 38.121 ops/s
Iteration   4: 38.194 ops/s
Iteration   5: 38.580 ops/s
Iteration   6: 38.125 ops/s
Iteration   7: 38.118 ops/s
Iteration   8: 38.453 ops/s
Iteration   9: 38.291 ops/s
Iteration  10: 38.405 ops/s

# Run progress: 6.25% complete, ETA 00:15:17
# Fork: 2 of 2
# Warmup Iteration   1: 24.969 ops/s
# Warmup Iteration   2: 35.182 ops/s
# Warmup Iteration   3: 37.048 ops/s
# Warmup Iteration   4: 38.531 ops/s
# Warmup Iteration   5: 37.979 ops/s
# Warmup Iteration   6: 38.102 ops/s
# Warmup Iteration   7: 38.755 ops/s
# Warmup Iteration   8: 38.042 ops/s
# Warmup Iteration   9: 38.655 ops/s
# Warmup Iteration  10: 38.451 ops/s
# Warmup Iteration  11: 38.054 ops/s
# Warmup Iteration  12: 38.284 ops/s
# Warmup Iteration  13: 38.670 ops/s
# Warmup Iteration  14: 38.096 ops/s
# Warmup Iteration  15: 38.355 ops/s
# Warmup Iteration  16: 38.514 ops/s
# Warmup Iteration  17: 38.302 ops/s
# Warmup Iteration  18: 38.267 ops/s
# Warmup Iteration  19: 38.534 ops/s
# Warmup Iteration  20: 38.054 ops/s
Iteration   1: 38.122 ops/s
Iteration   2: 38.438 ops/s
Iteration   3: 37.965 ops/s
Iteration   4: 37.937 ops/s
Iteration   5: 38.716 ops/s
Iteration   6: 38.490 ops/s
Iteration   7: 37.941 ops/s
Iteration   8: 38.497 ops/s
Iteration   9: 38.225 ops/s
Iteration  10: 37.830 ops/s


Result "com.gs.collections.impl.jmh.FunctionalInterfaceTest.parallel_lazy_scala":
  38.265 ±(99.9%) 0.234 ops/s [Average]
  (min, avg, max) = (37.830, 38.265, 38.782), stdev = 0.270
  CI (99.9%): [38.031, 38.499] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 2 s each
# Measurement: 10 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gs.collections.impl.jmh.FunctionalInterfaceTest.parallel_lazy_scala
# Parameters: (megamorphicWarmupLevel = 1)

# Run progress: 12.50% complete, ETA 00:14:15
# Fork: 1 of 2
# Warmup Iteration   1: 32.144 ops/s
# Warmup Iteration   2: 35.328 ops/s
# Warmup Iteration   3: 35.601 ops/s
# Warmup Iteration   4: 37.407 ops/s
# Warmup Iteration   5: 37.544 ops/s
# Warmup Iteration   6: 37.143 ops/s
# Warmup Iteration   7: 37.664 ops/s
# Warmup Iteration   8: 37.328 ops/s
# Warmup Iteration   9: 37.495 ops/s
# Warmup Iteration  10: 37.319 ops/s
# Warmup Iteration  11: 37.155 ops/s
# Warmup Iteration  12: 38.122 ops/s
# Warmup Iteration  13: 37.580 ops/s
# Warmup Iteration  14: 37.318 ops/s
# Warmup Iteration  15: 37.752 ops/s
# Warmup Iteration  16: 37.246 ops/s
# Warmup Iteration  17: 37.533 ops/s
# Warmup Iteration  18: 37.147 ops/s
# Warmup Iteration  19: 37.440 ops/s
# Warmup Iteration  20: 37.676 ops/s
Iteration   1: 37.180 ops/s
Iteration   2: 37.576 ops/s
Iteration   3: 38.029 ops/s
Iteration   4: 37.165 ops/s
Iteration   5: 37.109 ops/s
Iteration   6: 37.539 ops/s
Iteration   7: 37.366 ops/s
Iteration   8: 37.078 ops/s
Iteration   9: 37.450 ops/s
Iteration  10: 37.722 ops/s

# Run progress: 18.75% complete, ETA 00:13:32
# Fork: 2 of 2
# Warmup Iteration   1: 32.669 ops/s
# Warmup Iteration   2: 36.066 ops/s
# Warmup Iteration   3: 36.386 ops/s
# Warmup Iteration   4: 38.193 ops/s
# Warmup Iteration   5: 38.015 ops/s
# Warmup Iteration   6: 38.401 ops/s
# Warmup Iteration   7: 38.260 ops/s
# Warmup Iteration   8: 37.831 ops/s
# Warmup Iteration   9: 38.288 ops/s
# Warmup Iteration  10: 38.612 ops/s
# Warmup Iteration  11: 38.212 ops/s
# Warmup Iteration  12: 38.249 ops/s
# Warmup Iteration  13: 38.100 ops/s
# Warmup Iteration  14: 37.844 ops/s
# Warmup Iteration  15: 37.982 ops/s
# Warmup Iteration  16: 38.703 ops/s
# Warmup Iteration  17: 37.628 ops/s
# Warmup Iteration  18: 38.664 ops/s
# Warmup Iteration  19: 38.205 ops/s
# Warmup Iteration  20: 38.084 ops/s
Iteration   1: 37.646 ops/s
Iteration   2: 38.393 ops/s
Iteration   3: 38.369 ops/s
Iteration   4: 38.343 ops/s
Iteration   5: 38.672 ops/s
Iteration   6: 38.040 ops/s
Iteration   7: 37.988 ops/s
Iteration   8: 38.294 ops/s
Iteration   9: 38.361 ops/s
Iteration  10: 38.431 ops/s


Result "com.gs.collections.impl.jmh.FunctionalInterfaceTest.parallel_lazy_scala":
  37.838 ±(99.9%) 0.448 ops/s [Average]
  (min, avg, max) = (37.078, 37.838, 38.672), stdev = 0.516
  CI (99.9%): [37.390, 38.285] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 2 s each
# Measurement: 10 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gs.collections.impl.jmh.FunctionalInterfaceTest.parallel_lazy_scala
# Parameters: (megamorphicWarmupLevel = 2)

# Run progress: 25.00% complete, ETA 00:12:37
# Fork: 1 of 2
# Warmup Iteration   1: 31.861 ops/s
# Warmup Iteration   2: 36.476 ops/s
# Warmup Iteration   3: 36.061 ops/s
# Warmup Iteration   4: 37.486 ops/s
# Warmup Iteration   5: 37.964 ops/s
# Warmup Iteration   6: 37.740 ops/s
# Warmup Iteration   7: 38.369 ops/s
# Warmup Iteration   8: 37.704 ops/s
# Warmup Iteration   9: 37.395 ops/s
# Warmup Iteration  10: 38.455 ops/s
# Warmup Iteration  11: 38.190 ops/s
# Warmup Iteration  12: 38.272 ops/s
# Warmup Iteration  13: 38.267 ops/s
# Warmup Iteration  14: 37.958 ops/s
# Warmup Iteration  15: 38.255 ops/s
# Warmup Iteration  16: 38.029 ops/s
# Warmup Iteration  17: 38.192 ops/s
# Warmup Iteration  18: 37.697 ops/s
# Warmup Iteration  19: 38.193 ops/s
# Warmup Iteration  20: 37.783 ops/s
Iteration   1: 37.717 ops/s
Iteration   2: 38.449 ops/s
Iteration   3: 37.415 ops/s
Iteration   4: 38.376 ops/s
Iteration   5: 37.760 ops/s
Iteration   6: 37.563 ops/s
Iteration   7: 38.369 ops/s
Iteration   8: 37.837 ops/s
Iteration   9: 37.712 ops/s
Iteration  10: 38.411 ops/s

# Run progress: 31.25% complete, ETA 00:11:41
# Fork: 2 of 2
# Warmup Iteration   1: 32.087 ops/s
# Warmup Iteration   2: 37.010 ops/s
# Warmup Iteration   3: 35.906 ops/s
# Warmup Iteration   4: 37.783 ops/s
# Warmup Iteration   5: 38.088 ops/s
# Warmup Iteration   6: 37.964 ops/s
# Warmup Iteration   7: 38.125 ops/s
# Warmup Iteration   8: 37.559 ops/s
# Warmup Iteration   9: 37.568 ops/s
# Warmup Iteration  10: 38.285 ops/s
# Warmup Iteration  11: 38.276 ops/s
# Warmup Iteration  12: 37.629 ops/s
# Warmup Iteration  13: 38.285 ops/s
# Warmup Iteration  14: 38.079 ops/s
# Warmup Iteration  15: 37.272 ops/s
# Warmup Iteration  16: 38.129 ops/s
# Warmup Iteration  17: 37.555 ops/s
# Warmup Iteration  18: 38.219 ops/s
# Warmup Iteration  19: 38.416 ops/s
# Warmup Iteration  20: 37.568 ops/s
Iteration   1: 37.705 ops/s
Iteration   2: 38.721 ops/s
Iteration   3: 37.769 ops/s
Iteration   4: 37.745 ops/s
Iteration   5: 38.128 ops/s
Iteration   6: 37.919 ops/s
Iteration   7: 37.739 ops/s
Iteration   8: 37.982 ops/s
Iteration   9: 37.831 ops/s
Iteration  10: 38.420 ops/s


Result "com.gs.collections.impl.jmh.FunctionalInterfaceTest.parallel_lazy_scala":
  37.978 ±(99.9%) 0.311 ops/s [Average]
  (min, avg, max) = (37.415, 37.978, 38.721), stdev = 0.358
  CI (99.9%): [37.667, 38.290] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 2 s each
# Measurement: 10 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gs.collections.impl.jmh.FunctionalInterfaceTest.parallel_lazy_scala
# Parameters: (megamorphicWarmupLevel = 3)

# Run progress: 37.50% complete, ETA 00:10:41
# Fork: 1 of 2
# Warmup Iteration   1: 31.421 ops/s
# Warmup Iteration   2: 37.381 ops/s
# Warmup Iteration   3: 35.763 ops/s
# Warmup Iteration   4: 36.975 ops/s
# Warmup Iteration   5: 37.469 ops/s
# Warmup Iteration   6: 37.612 ops/s
# Warmup Iteration   7: 37.791 ops/s
# Warmup Iteration   8: 37.293 ops/s
# Warmup Iteration   9: 37.988 ops/s
# Warmup Iteration  10: 38.227 ops/s
# Warmup Iteration  11: 37.214 ops/s
# Warmup Iteration  12: 37.522 ops/s
# Warmup Iteration  13: 37.992 ops/s
# Warmup Iteration  14: 37.191 ops/s
# Warmup Iteration  15: 37.639 ops/s
# Warmup Iteration  16: 37.861 ops/s
# Warmup Iteration  17: 37.942 ops/s
# Warmup Iteration  18: 37.552 ops/s
# Warmup Iteration  19: 37.302 ops/s
# Warmup Iteration  20: 37.770 ops/s
Iteration   1: 37.850 ops/s
Iteration   2: 37.391 ops/s
Iteration   3: 37.298 ops/s
Iteration   4: 37.440 ops/s
Iteration   5: 37.365 ops/s
Iteration   6: 37.893 ops/s
Iteration   7: 37.732 ops/s
Iteration   8: 37.047 ops/s
Iteration   9: 37.786 ops/s
Iteration  10: 37.255 ops/s

# Run progress: 43.75% complete, ETA 00:09:39
# Fork: 2 of 2
# Warmup Iteration   1: 31.106 ops/s
# Warmup Iteration   2: 36.366 ops/s
# Warmup Iteration   3: 35.063 ops/s
# Warmup Iteration   4: 36.701 ops/s
# Warmup Iteration   5: 37.434 ops/s
# Warmup Iteration   6: 37.069 ops/s
# Warmup Iteration   7: 37.316 ops/s
# Warmup Iteration   8: 36.576 ops/s
# Warmup Iteration   9: 36.861 ops/s
# Warmup Iteration  10: 37.452 ops/s
# Warmup Iteration  11: 36.914 ops/s
# Warmup Iteration  12: 37.618 ops/s
# Warmup Iteration  13: 37.298 ops/s
# Warmup Iteration  14: 36.425 ops/s
# Warmup Iteration  15: 37.223 ops/s
# Warmup Iteration  16: 37.220 ops/s
# Warmup Iteration  17: 36.723 ops/s
# Warmup Iteration  18: 36.981 ops/s
# Warmup Iteration  19: 36.842 ops/s
# Warmup Iteration  20: 37.524 ops/s
Iteration   1: 36.951 ops/s
Iteration   2: 36.603 ops/s
Iteration   3: 37.527 ops/s
Iteration   4: 36.894 ops/s
Iteration   5: 37.201 ops/s
Iteration   6: 36.646 ops/s
Iteration   7: 37.458 ops/s
Iteration   8: 37.247 ops/s
Iteration   9: 36.619 ops/s
Iteration  10: 37.069 ops/s


Result "com.gs.collections.impl.jmh.FunctionalInterfaceTest.parallel_lazy_scala":
  37.264 ±(99.9%) 0.342 ops/s [Average]
  (min, avg, max) = (36.603, 37.264, 37.893), stdev = 0.394
  CI (99.9%): [36.921, 37.606] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 2 s each
# Measurement: 10 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gs.collections.impl.jmh.FunctionalInterfaceTest.parallel_lazy_scala_hand_coded
# Parameters: (megamorphicWarmupLevel = 0)

# Run progress: 50.00% complete, ETA 00:08:37
# Fork: 1 of 2
# Warmup Iteration   1: 47.171 ops/s
# Warmup Iteration   2: 54.874 ops/s
# Warmup Iteration   3: 58.246 ops/s
# Warmup Iteration   4: 60.569 ops/s
# Warmup Iteration   5: 60.400 ops/s
# Warmup Iteration   6: 60.361 ops/s
# Warmup Iteration   7: 60.394 ops/s
# Warmup Iteration   8: 60.350 ops/s
# Warmup Iteration   9: 60.675 ops/s
# Warmup Iteration  10: 60.736 ops/s
# Warmup Iteration  11: 60.114 ops/s
# Warmup Iteration  12: 61.071 ops/s
# Warmup Iteration  13: 59.899 ops/s
# Warmup Iteration  14: 60.308 ops/s
# Warmup Iteration  15: 60.217 ops/s
# Warmup Iteration  16: 59.822 ops/s
# Warmup Iteration  17: 60.488 ops/s
# Warmup Iteration  18: 60.672 ops/s
# Warmup Iteration  19: 60.816 ops/s
# Warmup Iteration  20: 60.317 ops/s
Iteration   1: 59.760 ops/s
Iteration   2: 60.267 ops/s
Iteration   3: 61.065 ops/s
Iteration   4: 61.116 ops/s
Iteration   5: 60.937 ops/s
Iteration   6: 60.824 ops/s
Iteration   7: 61.995 ops/s
Iteration   8: 61.859 ops/s
Iteration   9: 61.619 ops/s
Iteration  10: 60.801 ops/s

# Run progress: 56.25% complete, ETA 00:07:29
# Fork: 2 of 2
# Warmup Iteration   1: 47.588 ops/s
# Warmup Iteration   2: 55.753 ops/s
# Warmup Iteration   3: 58.011 ops/s
# Warmup Iteration   4: 60.258 ops/s
# Warmup Iteration   5: 60.633 ops/s
# Warmup Iteration   6: 60.641 ops/s
# Warmup Iteration   7: 60.718 ops/s
# Warmup Iteration   8: 60.814 ops/s
# Warmup Iteration   9: 60.336 ops/s
# Warmup Iteration  10: 60.383 ops/s
# Warmup Iteration  11: 60.019 ops/s
# Warmup Iteration  12: 60.378 ops/s
# Warmup Iteration  13: 59.947 ops/s
# Warmup Iteration  14: 60.623 ops/s
# Warmup Iteration  15: 60.294 ops/s
# Warmup Iteration  16: 61.102 ops/s
# Warmup Iteration  17: 61.406 ops/s
# Warmup Iteration  18: 61.149 ops/s
# Warmup Iteration  19: 60.749 ops/s
# Warmup Iteration  20: 62.020 ops/s
Iteration   1: 61.462 ops/s
Iteration   2: 61.415 ops/s
Iteration   3: 61.495 ops/s
Iteration   4: 61.774 ops/s
Iteration   5: 61.294 ops/s
Iteration   6: 61.993 ops/s
Iteration   7: 61.290 ops/s
Iteration   8: 61.873 ops/s
Iteration   9: 62.040 ops/s
Iteration  10: 62.011 ops/s


Result "com.gs.collections.impl.jmh.FunctionalInterfaceTest.parallel_lazy_scala_hand_coded":
  61.345 ±(99.9%) 0.533 ops/s [Average]
  (min, avg, max) = (59.760, 61.345, 62.040), stdev = 0.614
  CI (99.9%): [60.812, 61.878] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 2 s each
# Measurement: 10 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gs.collections.impl.jmh.FunctionalInterfaceTest.parallel_lazy_scala_hand_coded
# Parameters: (megamorphicWarmupLevel = 1)

# Run progress: 62.50% complete, ETA 00:06:23
# Fork: 1 of 2
# Warmup Iteration   1: 49.394 ops/s
# Warmup Iteration   2: 57.820 ops/s
# Warmup Iteration   3: 59.156 ops/s
# Warmup Iteration   4: 59.649 ops/s
# Warmup Iteration   5: 59.196 ops/s
# Warmup Iteration   6: 59.510 ops/s
# Warmup Iteration   7: 59.178 ops/s
# Warmup Iteration   8: 59.933 ops/s
# Warmup Iteration   9: 59.724 ops/s
# Warmup Iteration  10: 59.602 ops/s
# Warmup Iteration  11: 59.441 ops/s
# Warmup Iteration  12: 59.427 ops/s
# Warmup Iteration  13: 59.258 ops/s
# Warmup Iteration  14: 59.853 ops/s
# Warmup Iteration  15: 60.056 ops/s
# Warmup Iteration  16: 58.898 ops/s
# Warmup Iteration  17: 59.855 ops/s
# Warmup Iteration  18: 58.839 ops/s
# Warmup Iteration  19: 59.658 ops/s
# Warmup Iteration  20: 59.267 ops/s
Iteration   1: 59.743 ops/s
Iteration   2: 59.557 ops/s
Iteration   3: 59.582 ops/s
Iteration   4: 59.686 ops/s
Iteration   5: 58.974 ops/s
Iteration   6: 59.174 ops/s
Iteration   7: 59.776 ops/s
Iteration   8: 58.816 ops/s
Iteration   9: 59.674 ops/s
Iteration  10: 60.325 ops/s

# Run progress: 68.75% complete, ETA 00:05:20
# Fork: 2 of 2
# Warmup Iteration   1: 49.616 ops/s
# Warmup Iteration   2: 56.966 ops/s
# Warmup Iteration   3: 59.186 ops/s
# Warmup Iteration   4: 60.064 ops/s
# Warmup Iteration   5: 60.828 ops/s
# Warmup Iteration   6: 60.306 ops/s
# Warmup Iteration   7: 59.968 ops/s
# Warmup Iteration   8: 60.256 ops/s
# Warmup Iteration   9: 59.820 ops/s
# Warmup Iteration  10: 60.624 ops/s
# Warmup Iteration  11: 61.205 ops/s
# Warmup Iteration  12: 60.892 ops/s
# Warmup Iteration  13: 61.765 ops/s
# Warmup Iteration  14: 60.833 ops/s
# Warmup Iteration  15: 61.406 ops/s
# Warmup Iteration  16: 61.397 ops/s
# Warmup Iteration  17: 60.816 ops/s
# Warmup Iteration  18: 60.863 ops/s
# Warmup Iteration  19: 60.968 ops/s
# Warmup Iteration  20: 60.694 ops/s
Iteration   1: 60.206 ops/s
Iteration   2: 60.944 ops/s
Iteration   3: 61.569 ops/s
Iteration   4: 60.994 ops/s
Iteration   5: 60.730 ops/s
Iteration   6: 61.459 ops/s
Iteration   7: 60.201 ops/s
Iteration   8: 60.946 ops/s
Iteration   9: 60.255 ops/s
Iteration  10: 61.403 ops/s


Result "com.gs.collections.impl.jmh.FunctionalInterfaceTest.parallel_lazy_scala_hand_coded":
  60.201 ±(99.9%) 0.722 ops/s [Average]
  (min, avg, max) = (58.816, 60.201, 61.569), stdev = 0.832
  CI (99.9%): [59.478, 60.923] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 2 s each
# Measurement: 10 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gs.collections.impl.jmh.FunctionalInterfaceTest.parallel_lazy_scala_hand_coded
# Parameters: (megamorphicWarmupLevel = 2)

# Run progress: 75.00% complete, ETA 00:04:16
# Fork: 1 of 2
# Warmup Iteration   1: 51.592 ops/s
# Warmup Iteration   2: 57.202 ops/s
# Warmup Iteration   3: 59.363 ops/s
# Warmup Iteration   4: 59.562 ops/s
# Warmup Iteration   5: 59.853 ops/s
# Warmup Iteration   6: 60.394 ops/s
# Warmup Iteration   7: 60.569 ops/s
# Warmup Iteration   8: 60.222 ops/s
# Warmup Iteration   9: 60.211 ops/s
# Warmup Iteration  10: 59.103 ops/s
# Warmup Iteration  11: 59.473 ops/s
# Warmup Iteration  12: 59.872 ops/s
# Warmup Iteration  13: 60.167 ops/s
# Warmup Iteration  14: 59.746 ops/s
# Warmup Iteration  15: 59.321 ops/s
# Warmup Iteration  16: 59.141 ops/s
# Warmup Iteration  17: 59.978 ops/s
# Warmup Iteration  18: 60.359 ops/s
# Warmup Iteration  19: 59.961 ops/s
# Warmup Iteration  20: 60.084 ops/s
Iteration   1: 59.435 ops/s
Iteration   2: 59.700 ops/s
Iteration   3: 59.624 ops/s
Iteration   4: 59.225 ops/s
Iteration   5: 59.902 ops/s
Iteration   6: 59.853 ops/s
Iteration   7: 59.533 ops/s
Iteration   8: 59.642 ops/s
Iteration   9: 60.192 ops/s
Iteration  10: 59.940 ops/s

# Run progress: 81.25% complete, ETA 00:03:12
# Fork: 2 of 2
# Warmup Iteration   1: 51.264 ops/s
# Warmup Iteration   2: 58.150 ops/s
# Warmup Iteration   3: 60.150 ops/s
# Warmup Iteration   4: 59.912 ops/s
# Warmup Iteration   5: 60.100 ops/s
# Warmup Iteration   6: 61.369 ops/s
# Warmup Iteration   7: 60.592 ops/s
# Warmup Iteration   8: 60.396 ops/s
# Warmup Iteration   9: 60.320 ops/s
# Warmup Iteration  10: 59.825 ops/s
# Warmup Iteration  11: 60.497 ops/s
# Warmup Iteration  12: 60.653 ops/s
# Warmup Iteration  13: 60.214 ops/s
# Warmup Iteration  14: 60.787 ops/s
# Warmup Iteration  15: 60.553 ops/s
# Warmup Iteration  16: 61.087 ops/s
# Warmup Iteration  17: 60.110 ops/s
# Warmup Iteration  18: 60.214 ops/s
# Warmup Iteration  19: 59.828 ops/s
# Warmup Iteration  20: 61.244 ops/s
Iteration   1: 60.706 ops/s
Iteration   2: 60.335 ops/s
Iteration   3: 60.263 ops/s
Iteration   4: 60.167 ops/s
Iteration   5: 60.772 ops/s
Iteration   6: 60.991 ops/s
Iteration   7: 60.655 ops/s
Iteration   8: 60.571 ops/s
Iteration   9: 61.284 ops/s
Iteration  10: 60.362 ops/s


Result "com.gs.collections.impl.jmh.FunctionalInterfaceTest.parallel_lazy_scala_hand_coded":
  60.158 ±(99.9%) 0.484 ops/s [Average]
  (min, avg, max) = (59.225, 60.158, 61.284), stdev = 0.557
  CI (99.9%): [59.674, 60.641] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 2 s each
# Measurement: 10 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gs.collections.impl.jmh.FunctionalInterfaceTest.parallel_lazy_scala_hand_coded
# Parameters: (megamorphicWarmupLevel = 3)

# Run progress: 87.50% complete, ETA 00:02:08
# Fork: 1 of 2
# Warmup Iteration   1: 51.823 ops/s
# Warmup Iteration   2: 58.310 ops/s
# Warmup Iteration   3: 60.367 ops/s
# Warmup Iteration   4: 60.125 ops/s
# Warmup Iteration   5: 60.729 ops/s
# Warmup Iteration   6: 61.158 ops/s
# Warmup Iteration   7: 60.565 ops/s
# Warmup Iteration   8: 60.825 ops/s
# Warmup Iteration   9: 60.383 ops/s
# Warmup Iteration  10: 60.753 ops/s
# Warmup Iteration  11: 60.953 ops/s
# Warmup Iteration  12: 60.218 ops/s
# Warmup Iteration  13: 61.166 ops/s
# Warmup Iteration  14: 60.429 ops/s
# Warmup Iteration  15: 61.549 ops/s
# Warmup Iteration  16: 61.387 ops/s
# Warmup Iteration  17: 61.419 ops/s
# Warmup Iteration  18: 61.813 ops/s
# Warmup Iteration  19: 61.095 ops/s
# Warmup Iteration  20: 61.125 ops/s
Iteration   1: 62.267 ops/s
Iteration   2: 61.906 ops/s
Iteration   3: 61.251 ops/s
Iteration   4: 60.766 ops/s
Iteration   5: 61.363 ops/s
Iteration   6: 61.597 ops/s
Iteration   7: 61.187 ops/s
Iteration   8: 61.304 ops/s
Iteration   9: 60.355 ops/s
Iteration  10: 61.720 ops/s

# Run progress: 93.75% complete, ETA 00:01:04
# Fork: 2 of 2
# Warmup Iteration   1: 50.241 ops/s
# Warmup Iteration   2: 56.882 ops/s
# Warmup Iteration   3: 59.222 ops/s
# Warmup Iteration   4: 59.466 ops/s
# Warmup Iteration   5: 59.217 ops/s
# Warmup Iteration   6: 59.516 ops/s
# Warmup Iteration   7: 60.181 ops/s
# Warmup Iteration   8: 60.127 ops/s
# Warmup Iteration   9: 59.394 ops/s
# Warmup Iteration  10: 59.585 ops/s
# Warmup Iteration  11: 59.732 ops/s
# Warmup Iteration  12: 59.989 ops/s
# Warmup Iteration  13: 60.095 ops/s
# Warmup Iteration  14: 59.380 ops/s
# Warmup Iteration  15: 59.257 ops/s
# Warmup Iteration  16: 59.304 ops/s
# Warmup Iteration  17: 59.844 ops/s
# Warmup Iteration  18: 59.410 ops/s
# Warmup Iteration  19: 59.425 ops/s
# Warmup Iteration  20: 59.374 ops/s
Iteration   1: 59.265 ops/s
Iteration   2: 58.642 ops/s
Iteration   3: 59.404 ops/s
Iteration   4: 59.589 ops/s
Iteration   5: 59.300 ops/s
Iteration   6: 59.557 ops/s
Iteration   7: 59.388 ops/s
Iteration   8: 59.961 ops/s
Iteration   9: 59.593 ops/s
Iteration  10: 58.718 ops/s


Result "com.gs.collections.impl.jmh.FunctionalInterfaceTest.parallel_lazy_scala_hand_coded":
  60.357 ±(99.9%) 0.991 ops/s [Average]
  (min, avg, max) = (58.642, 60.357, 62.267), stdev = 1.141
  CI (99.9%): [59.365, 61.348] (assumes normal distribution)


# Run complete. Total time: 00:17:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                               (megamorphicWarmupLevel)   Mode  Cnt   Score   Error  Units
FunctionalInterfaceTest.parallel_lazy_scala                                    0  thrpt   20  38.265 ± 0.234  ops/s
FunctionalInterfaceTest.parallel_lazy_scala                                    1  thrpt   20  37.838 ± 0.448  ops/s
FunctionalInterfaceTest.parallel_lazy_scala                                    2  thrpt   20  37.978 ± 0.311  ops/s
FunctionalInterfaceTest.parallel_lazy_scala                                    3  thrpt   20  37.264 ± 0.342  ops/s
FunctionalInterfaceTest.parallel_lazy_scala_hand_coded                         0  thrpt   20  61.345 ± 0.533  ops/s
FunctionalInterfaceTest.parallel_lazy_scala_hand_coded                         1  thrpt   20  60.201 ± 0.722  ops/s
FunctionalInterfaceTest.parallel_lazy_scala_hand_coded                         2  thrpt   20  60.158 ± 0.484  ops/s
FunctionalInterfaceTest.parallel_lazy_scala_hand_coded                         3  thrpt   20  60.357 ± 0.991  ops/s

Benchmark result is saved to gs-collections/exp-RETU-STATIC-out/microbenchmarks-original_FunctionalInterfaceTest_parallel_lazy_scala_retu_trial1.csv
