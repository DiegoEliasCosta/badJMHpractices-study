# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FilterPartitionBenchmark.timeFilterNone
# Parameters: (rowsPerSegment = 750000, schema = basic)

# Run progress: 0.00% complete, ETA 00:06:25
# Fork: 1 of 1
# Warmup Iteration   1: 120998.430 us/op
# Warmup Iteration   2: 115347.127 us/op
# Warmup Iteration   3: 149370.821 us/op
# Warmup Iteration   4: 133730.105 us/op
# Warmup Iteration   5: 115307.323 us/op
# Warmup Iteration   6: 115278.385 us/op
# Warmup Iteration   7: 180318.677 us/op
# Warmup Iteration   8: 115268.118 us/op
# Warmup Iteration   9: 115192.681 us/op
# Warmup Iteration  10: 115231.312 us/op
Iteration   1: 144637.022 us/op
Iteration   2: 127834.706 us/op
Iteration   3: 115160.575 us/op
Iteration   4: 115244.701 us/op
Iteration   5: 166343.628 us/op
Iteration   6: 130648.656 us/op
Iteration   7: 115553.275 us/op
Iteration   8: 115553.419 us/op
Iteration   9: 115649.387 us/op
Iteration  10: 143178.089 us/op
Iteration  11: 133055.958 us/op
Iteration  12: 115605.962 us/op
Iteration  13: 115651.074 us/op
Iteration  14: 115612.296 us/op
Iteration  15: 166095.844 us/op
Iteration  16: 130619.861 us/op
Iteration  17: 115619.853 us/op
Iteration  18: 115609.602 us/op
Iteration  19: 115634.551 us/op
Iteration  20: 115602.411 us/op
Iteration  21: 141028.298 us/op
Iteration  22: 135375.418 us/op
Iteration  23: 115239.510 us/op
Iteration  24: 115208.139 us/op
Iteration  25: 115179.830 us/op


Result "io.druid.benchmark.FilterPartitionBenchmark.timeFilterNone":
  126037.683 ±(99.9%) 11794.268 us/op [Average]
  (min, avg, max) = (115160.575, 126037.683, 166343.628), stdev = 15745.010
  CI (99.9%): [114243.415, 137831.950] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readSkipping
# Parameters: (dirPath = floatCompress/, file = enumerate, strategy = lz4)

# Run progress: 9.09% complete, ETA 00:09:26
# Fork: 1 of 1
# Warmup Iteration   1: 5.134 ms/op
# Warmup Iteration   2: 3.108 ms/op
# Warmup Iteration   3: 3.105 ms/op
# Warmup Iteration   4: 3.106 ms/op
# Warmup Iteration   5: 3.105 ms/op
# Warmup Iteration   6: 3.121 ms/op
# Warmup Iteration   7: 3.104 ms/op
# Warmup Iteration   8: 3.105 ms/op
# Warmup Iteration   9: 3.105 ms/op
# Warmup Iteration  10: 3.105 ms/op
Iteration   1: 3.104 ms/op
Iteration   2: 3.106 ms/op
Iteration   3: 3.104 ms/op
Iteration   4: 3.105 ms/op
Iteration   5: 3.105 ms/op
Iteration   6: 3.130 ms/op
Iteration   7: 3.101 ms/op
Iteration   8: 3.102 ms/op
Iteration   9: 3.100 ms/op
Iteration  10: 3.100 ms/op
Iteration  11: 3.099 ms/op
Iteration  12: 3.100 ms/op
Iteration  13: 3.100 ms/op
Iteration  14: 3.100 ms/op
Iteration  15: 3.099 ms/op
Iteration  16: 3.099 ms/op
Iteration  17: 3.099 ms/op
Iteration  18: 3.099 ms/op
Iteration  19: 3.099 ms/op
Iteration  20: 3.100 ms/op
Iteration  21: 3.099 ms/op
Iteration  22: 3.099 ms/op
Iteration  23: 3.130 ms/op
Iteration  24: 3.099 ms/op
Iteration  25: 3.099 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readSkipping":
  3.103 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (3.099, 3.103, 3.130), stdev = 0.008
  CI (99.9%): [3.097, 3.109] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readSkipping
# Parameters: (dirPath = floatCompress/, file = enumerate, strategy = none)

# Run progress: 18.18% complete, ETA 00:06:54
# Fork: 1 of 1
# Warmup Iteration   1: 0.179 ms/op
# Warmup Iteration   2: 0.159 ms/op
# Warmup Iteration   3: 0.158 ms/op
# Warmup Iteration   4: 0.159 ms/op
# Warmup Iteration   5: 0.158 ms/op
# Warmup Iteration   6: 0.158 ms/op
# Warmup Iteration   7: 0.159 ms/op
# Warmup Iteration   8: 0.158 ms/op
# Warmup Iteration   9: 0.158 ms/op
# Warmup Iteration  10: 0.159 ms/op
Iteration   1: 0.158 ms/op
Iteration   2: 0.159 ms/op
Iteration   3: 0.158 ms/op
Iteration   4: 0.158 ms/op
Iteration   5: 0.158 ms/op
Iteration   6: 0.159 ms/op
Iteration   7: 0.159 ms/op
Iteration   8: 0.159 ms/op
Iteration   9: 0.158 ms/op
Iteration  10: 0.158 ms/op
Iteration  11: 0.158 ms/op
Iteration  12: 0.159 ms/op
Iteration  13: 0.158 ms/op
Iteration  14: 0.158 ms/op
Iteration  15: 0.158 ms/op
Iteration  16: 0.158 ms/op
Iteration  17: 0.158 ms/op
Iteration  18: 0.158 ms/op
Iteration  19: 0.158 ms/op
Iteration  20: 0.158 ms/op
Iteration  21: 0.158 ms/op
Iteration  22: 0.158 ms/op
Iteration  23: 0.158 ms/op
Iteration  24: 0.159 ms/op
Iteration  25: 0.158 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readSkipping":
  0.158 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.158, 0.158, 0.159), stdev = 0.001
  CI (99.9%): [0.158, 0.159] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readSkipping
# Parameters: (dirPath = floatCompress/, file = zipfLow, strategy = lz4)

# Run progress: 27.27% complete, ETA 00:05:40
# Fork: 1 of 1
# Warmup Iteration   1: 15.401 ms/op
# Warmup Iteration   2: 9.851 ms/op
# Warmup Iteration   3: 9.841 ms/op
# Warmup Iteration   4: 9.837 ms/op
# Warmup Iteration   5: 9.838 ms/op
# Warmup Iteration   6: 9.839 ms/op
# Warmup Iteration   7: 9.835 ms/op
# Warmup Iteration   8: 9.833 ms/op
# Warmup Iteration   9: 9.834 ms/op
# Warmup Iteration  10: 9.833 ms/op
Iteration   1: 9.831 ms/op
Iteration   2: 9.830 ms/op
Iteration   3: 9.838 ms/op
Iteration   4: 9.835 ms/op
Iteration   5: 9.834 ms/op
Iteration   6: 9.830 ms/op
Iteration   7: 9.840 ms/op
Iteration   8: 9.832 ms/op
Iteration   9: 9.835 ms/op
Iteration  10: 9.831 ms/op
Iteration  11: 9.836 ms/op
Iteration  12: 9.833 ms/op
Iteration  13: 9.834 ms/op
Iteration  14: 9.832 ms/op
Iteration  15: 9.836 ms/op
Iteration  16: 9.839 ms/op
Iteration  17: 9.833 ms/op
Iteration  18: 9.835 ms/op
Iteration  19: 9.839 ms/op
Iteration  20: 9.832 ms/op
Iteration  21: 9.840 ms/op
Iteration  22: 9.831 ms/op
Iteration  23: 9.836 ms/op
Iteration  24: 9.832 ms/op
Iteration  25: 9.832 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readSkipping":
  9.834 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (9.830, 9.834, 9.840), stdev = 0.003
  CI (99.9%): [9.832, 9.837] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readSkipping
# Parameters: (dirPath = floatCompress/, file = zipfLow, strategy = none)

# Run progress: 36.36% complete, ETA 00:04:45
# Fork: 1 of 1
# Warmup Iteration   1: 0.179 ms/op
# Warmup Iteration   2: 0.158 ms/op
# Warmup Iteration   3: 0.157 ms/op
# Warmup Iteration   4: 0.157 ms/op
# Warmup Iteration   5: 0.180 ms/op
# Warmup Iteration   6: 0.190 ms/op
# Warmup Iteration   7: 0.158 ms/op
# Warmup Iteration   8: 0.158 ms/op
# Warmup Iteration   9: 0.158 ms/op
# Warmup Iteration  10: 0.158 ms/op
Iteration   1: 0.168 ms/op
Iteration   2: 0.192 ms/op
Iteration   3: 0.158 ms/op
Iteration   4: 0.158 ms/op
Iteration   5: 0.158 ms/op
Iteration   6: 0.158 ms/op
Iteration   7: 0.159 ms/op
Iteration   8: 0.159 ms/op
Iteration   9: 0.158 ms/op
Iteration  10: 0.158 ms/op
Iteration  11: 0.158 ms/op
Iteration  12: 0.158 ms/op
Iteration  13: 0.158 ms/op
Iteration  14: 0.158 ms/op
Iteration  15: 0.158 ms/op
Iteration  16: 0.158 ms/op
Iteration  17: 0.158 ms/op
Iteration  18: 0.158 ms/op
Iteration  19: 0.158 ms/op
Iteration  20: 0.158 ms/op
Iteration  21: 0.159 ms/op
Iteration  22: 0.158 ms/op
Iteration  23: 0.158 ms/op
Iteration  24: 0.158 ms/op
Iteration  25: 0.158 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readSkipping":
  0.160 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (0.158, 0.160, 0.192), stdev = 0.007
  CI (99.9%): [0.155, 0.165] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readSkipping
# Parameters: (dirPath = floatCompress/, file = zipfHigh, strategy = lz4)

# Run progress: 45.45% complete, ETA 00:03:58
# Fork: 1 of 1
# Warmup Iteration   1: 8.069 ms/op
# Warmup Iteration   2: 5.356 ms/op
# Warmup Iteration   3: 5.355 ms/op
# Warmup Iteration   4: 5.351 ms/op
# Warmup Iteration   5: 5.349 ms/op
# Warmup Iteration   6: 5.349 ms/op
# Warmup Iteration   7: 5.350 ms/op
# Warmup Iteration   8: 5.350 ms/op
# Warmup Iteration   9: 5.348 ms/op
# Warmup Iteration  10: 5.348 ms/op
Iteration   1: 5.350 ms/op
Iteration   2: 5.349 ms/op
Iteration   3: 5.348 ms/op
Iteration   4: 5.350 ms/op
Iteration   5: 5.350 ms/op
Iteration   6: 5.348 ms/op
Iteration   7: 5.348 ms/op
Iteration   8: 5.350 ms/op
Iteration   9: 5.348 ms/op
Iteration  10: 5.350 ms/op
Iteration  11: 5.349 ms/op
Iteration  12: 5.347 ms/op
Iteration  13: 5.349 ms/op
Iteration  14: 5.348 ms/op
Iteration  15: 5.348 ms/op
Iteration  16: 5.349 ms/op
Iteration  17: 5.405 ms/op
Iteration  18: 5.346 ms/op
Iteration  19: 5.343 ms/op
Iteration  20: 5.350 ms/op
Iteration  21: 5.340 ms/op
Iteration  22: 5.342 ms/op
Iteration  23: 5.342 ms/op
Iteration  24: 5.342 ms/op
Iteration  25: 5.345 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readSkipping":
  5.350 ±(99.9%) 0.009 ms/op [Average]
  (min, avg, max) = (5.340, 5.350, 5.405), stdev = 0.012
  CI (99.9%): [5.341, 5.358] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readSkipping
# Parameters: (dirPath = floatCompress/, file = zipfHigh, strategy = none)

# Run progress: 54.55% complete, ETA 00:03:14
# Fork: 1 of 1
# Warmup Iteration   1: 0.162 ms/op
# Warmup Iteration   2: 0.159 ms/op
# Warmup Iteration   3: 0.159 ms/op
# Warmup Iteration   4: 0.159 ms/op
# Warmup Iteration   5: 0.158 ms/op
# Warmup Iteration   6: 0.159 ms/op
# Warmup Iteration   7: 0.158 ms/op
# Warmup Iteration   8: 0.159 ms/op
# Warmup Iteration   9: 0.159 ms/op
# Warmup Iteration  10: 0.159 ms/op
Iteration   1: 0.159 ms/op
Iteration   2: 0.159 ms/op
Iteration   3: 0.159 ms/op
Iteration   4: 0.159 ms/op
Iteration   5: 0.158 ms/op
Iteration   6: 0.159 ms/op
Iteration   7: 0.159 ms/op
Iteration   8: 0.159 ms/op
Iteration   9: 0.159 ms/op
Iteration  10: 0.159 ms/op
Iteration  11: 0.158 ms/op
Iteration  12: 0.158 ms/op
Iteration  13: 0.159 ms/op
Iteration  14: 0.159 ms/op
Iteration  15: 0.158 ms/op
Iteration  16: 0.159 ms/op
Iteration  17: 0.159 ms/op
Iteration  18: 0.159 ms/op
Iteration  19: 0.159 ms/op
Iteration  20: 0.159 ms/op
Iteration  21: 0.158 ms/op
Iteration  22: 0.158 ms/op
Iteration  23: 0.159 ms/op
Iteration  24: 0.159 ms/op
Iteration  25: 0.158 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readSkipping":
  0.159 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.158, 0.159, 0.159), stdev = 0.001
  CI (99.9%): [0.158, 0.159] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readSkipping
# Parameters: (dirPath = floatCompress/, file = sequential, strategy = lz4)

# Run progress: 63.64% complete, ETA 00:02:33
# Fork: 1 of 1
# Warmup Iteration   1: 6.104 ms/op
# Warmup Iteration   2: 3.926 ms/op
# Warmup Iteration   3: 3.918 ms/op
# Warmup Iteration   4: 3.921 ms/op
# Warmup Iteration   5: 3.917 ms/op
# Warmup Iteration   6: 3.916 ms/op
# Warmup Iteration   7: 3.917 ms/op
# Warmup Iteration   8: 3.916 ms/op
# Warmup Iteration   9: 3.918 ms/op
# Warmup Iteration  10: 3.918 ms/op
Iteration   1: 3.917 ms/op
Iteration   2: 3.916 ms/op
Iteration   3: 3.918 ms/op
Iteration   4: 3.916 ms/op
Iteration   5: 3.918 ms/op
Iteration   6: 3.917 ms/op
Iteration   7: 3.917 ms/op
Iteration   8: 3.917 ms/op
Iteration   9: 3.918 ms/op
Iteration  10: 3.951 ms/op
Iteration  11: 3.917 ms/op
Iteration  12: 3.917 ms/op
Iteration  13: 3.914 ms/op
Iteration  14: 3.911 ms/op
Iteration  15: 3.914 ms/op
Iteration  16: 3.913 ms/op
Iteration  17: 3.912 ms/op
Iteration  18: 3.911 ms/op
Iteration  19: 3.912 ms/op
Iteration  20: 3.912 ms/op
Iteration  21: 3.912 ms/op
Iteration  22: 3.914 ms/op
Iteration  23: 3.913 ms/op
Iteration  24: 3.913 ms/op
Iteration  25: 3.912 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readSkipping":
  3.916 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (3.911, 3.916, 3.951), stdev = 0.008
  CI (99.9%): [3.910, 3.922] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readSkipping
# Parameters: (dirPath = floatCompress/, file = sequential, strategy = none)

# Run progress: 72.73% complete, ETA 00:01:54
# Fork: 1 of 1
# Warmup Iteration   1: 0.173 ms/op
# Warmup Iteration   2: 0.158 ms/op
# Warmup Iteration   3: 0.157 ms/op
# Warmup Iteration   4: 0.157 ms/op
# Warmup Iteration   5: 0.157 ms/op
# Warmup Iteration   6: 0.157 ms/op
# Warmup Iteration   7: 0.157 ms/op
# Warmup Iteration   8: 0.157 ms/op
# Warmup Iteration   9: 0.157 ms/op
# Warmup Iteration  10: 0.157 ms/op
Iteration   1: 0.157 ms/op
Iteration   2: 0.157 ms/op
Iteration   3: 0.156 ms/op
Iteration   4: 0.156 ms/op
Iteration   5: 0.157 ms/op
Iteration   6: 0.157 ms/op
Iteration   7: 0.157 ms/op
Iteration   8: 0.158 ms/op
Iteration   9: 0.157 ms/op
Iteration  10: 0.157 ms/op
Iteration  11: 0.157 ms/op
Iteration  12: 0.156 ms/op
Iteration  13: 0.157 ms/op
Iteration  14: 0.156 ms/op
Iteration  15: 0.157 ms/op
Iteration  16: 0.157 ms/op
Iteration  17: 0.157 ms/op
Iteration  18: 0.156 ms/op
Iteration  19: 0.157 ms/op
Iteration  20: 0.157 ms/op
Iteration  21: 0.157 ms/op
Iteration  22: 0.157 ms/op
Iteration  23: 0.156 ms/op
Iteration  24: 0.158 ms/op
Iteration  25: 0.172 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readSkipping":
  0.157 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.156, 0.157, 0.172), stdev = 0.003
  CI (99.9%): [0.155, 0.160] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readSkipping
# Parameters: (dirPath = floatCompress/, file = uniform, strategy = lz4)

# Run progress: 81.82% complete, ETA 00:01:15
# Fork: 1 of 1
# Warmup Iteration   1: 3.411 ms/op
# Warmup Iteration   2: 2.179 ms/op
# Warmup Iteration   3: 2.178 ms/op
# Warmup Iteration   4: 2.177 ms/op
# Warmup Iteration   5: 2.177 ms/op
# Warmup Iteration   6: 2.176 ms/op
# Warmup Iteration   7: 2.177 ms/op
# Warmup Iteration   8: 2.175 ms/op
# Warmup Iteration   9: 2.177 ms/op
# Warmup Iteration  10: 2.177 ms/op
Iteration   1: 2.248 ms/op
Iteration   2: 2.177 ms/op
Iteration   3: 2.176 ms/op
Iteration   4: 2.175 ms/op
Iteration   5: 2.173 ms/op
Iteration   6: 2.172 ms/op
Iteration   7: 2.610 ms/op
Iteration   8: 2.165 ms/op
Iteration   9: 2.167 ms/op
Iteration  10: 2.167 ms/op
Iteration  11: 2.167 ms/op
Iteration  12: 2.167 ms/op
Iteration  13: 2.167 ms/op
Iteration  14: 2.630 ms/op
Iteration  15: 2.171 ms/op
Iteration  16: 2.171 ms/op
Iteration  17: 2.171 ms/op
Iteration  18: 2.170 ms/op
Iteration  19: 2.170 ms/op
Iteration  20: 2.171 ms/op
Iteration  21: 2.170 ms/op
Iteration  22: 2.171 ms/op
Iteration  23: 2.171 ms/op
Iteration  24: 2.172 ms/op
Iteration  25: 2.171 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readSkipping":
  2.210 ±(99.9%) 0.093 ms/op [Average]
  (min, avg, max) = (2.165, 2.210, 2.630), stdev = 0.124
  CI (99.9%): [2.116, 2.303] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readSkipping
# Parameters: (dirPath = floatCompress/, file = uniform, strategy = none)

# Run progress: 90.91% complete, ETA 00:00:37
# Fork: 1 of 1
# Warmup Iteration   1: 0.176 ms/op
# Warmup Iteration   2: 0.158 ms/op
# Warmup Iteration   3: 0.157 ms/op
# Warmup Iteration   4: 0.158 ms/op
# Warmup Iteration   5: 0.158 ms/op
# Warmup Iteration   6: 0.158 ms/op
# Warmup Iteration   7: 0.157 ms/op
# Warmup Iteration   8: 0.158 ms/op
# Warmup Iteration   9: 0.158 ms/op
# Warmup Iteration  10: 0.160 ms/op
Iteration   1: 0.157 ms/op
Iteration   2: 0.158 ms/op
Iteration   3: 0.157 ms/op
Iteration   4: 0.157 ms/op
Iteration   5: 0.158 ms/op
Iteration   6: 0.158 ms/op
Iteration   7: 0.158 ms/op
Iteration   8: 0.159 ms/op
Iteration   9: 0.157 ms/op
Iteration  10: 0.157 ms/op
Iteration  11: 0.158 ms/op
Iteration  12: 0.157 ms/op
Iteration  13: 0.158 ms/op
Iteration  14: 0.158 ms/op
Iteration  15: 0.157 ms/op
Iteration  16: 0.157 ms/op
Iteration  17: 0.158 ms/op
Iteration  18: 0.158 ms/op
Iteration  19: 0.157 ms/op
Iteration  20: 0.157 ms/op
Iteration  21: 0.158 ms/op
Iteration  22: 0.157 ms/op
Iteration  23: 0.158 ms/op
Iteration  24: 0.158 ms/op
Iteration  25: 0.158 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readSkipping":
  0.158 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.157, 0.158, 0.159), stdev = 0.001
  CI (99.9%): [0.157, 0.158] (assumes normal distribution)


# Run complete. Total time: 00:06:50

Benchmark                                     (dirPath)      (file)  (rowsPerSegment)  (schema)  (strategy)  Mode  Cnt       Score       Error  Units
FilterPartitionBenchmark.timeFilterNone             N/A         N/A            750000     basic         N/A  avgt   25  126037.683 ± 11794.268  us/op
FloatCompressionBenchmark.readSkipping   floatCompress/   enumerate               N/A       N/A         lz4  avgt   25       3.103 ±     0.006  ms/op
FloatCompressionBenchmark.readSkipping   floatCompress/   enumerate               N/A       N/A        none  avgt   25       0.158 ±     0.001  ms/op
FloatCompressionBenchmark.readSkipping   floatCompress/     zipfLow               N/A       N/A         lz4  avgt   25       9.834 ±     0.002  ms/op
FloatCompressionBenchmark.readSkipping   floatCompress/     zipfLow               N/A       N/A        none  avgt   25       0.160 ±     0.005  ms/op
FloatCompressionBenchmark.readSkipping   floatCompress/    zipfHigh               N/A       N/A         lz4  avgt   25       5.350 ±     0.009  ms/op
FloatCompressionBenchmark.readSkipping   floatCompress/    zipfHigh               N/A       N/A        none  avgt   25       0.159 ±     0.001  ms/op
FloatCompressionBenchmark.readSkipping   floatCompress/  sequential               N/A       N/A         lz4  avgt   25       3.916 ±     0.006  ms/op
FloatCompressionBenchmark.readSkipping   floatCompress/  sequential               N/A       N/A        none  avgt   25       0.157 ±     0.002  ms/op
FloatCompressionBenchmark.readSkipping   floatCompress/     uniform               N/A       N/A         lz4  avgt   25       2.210 ±     0.093  ms/op
FloatCompressionBenchmark.readSkipping   floatCompress/     uniform               N/A       N/A        none  avgt   25       0.158 ±     0.001  ms/op

Benchmark result is saved to exp-LOOP-out/druid_benchmarks_fixed_full_benchmark_FloatCompressionBenchmark_readSkipping_loop_trial2.csv
