# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FilterPartitionBenchmark.timeFilterNone
# Parameters: (rowsPerSegment = 750000, schema = basic)

# Run progress: 0.00% complete, ETA 00:06:25
# Fork: 1 of 1
# Warmup Iteration   1: 122980.638 us/op
# Warmup Iteration   2: 116258.904 us/op
# Warmup Iteration   3: 151030.877 us/op
# Warmup Iteration   4: 116029.014 us/op
# Warmup Iteration   5: 116153.198 us/op
# Warmup Iteration   6: 116192.690 us/op
# Warmup Iteration   7: 183191.326 us/op
# Warmup Iteration   8: 116002.008 us/op
# Warmup Iteration   9: 115947.898 us/op
# Warmup Iteration  10: 115939.903 us/op
Iteration   1: 157476.284 us/op
Iteration   2: 122569.368 us/op
Iteration   3: 115905.373 us/op
Iteration   4: 116020.070 us/op
Iteration   5: 201694.296 us/op
Iteration   6: 129788.279 us/op
Iteration   7: 115792.313 us/op
Iteration   8: 115813.111 us/op
Iteration   9: 115731.912 us/op
Iteration  10: 135432.584 us/op
Iteration  11: 115969.362 us/op
Iteration  12: 115963.585 us/op
Iteration  13: 116058.184 us/op
Iteration  14: 116009.759 us/op
Iteration  15: 164532.060 us/op
Iteration  16: 116083.457 us/op
Iteration  17: 115983.062 us/op
Iteration  18: 115983.018 us/op
Iteration  19: 115963.381 us/op
Iteration  20: 115942.190 us/op
Iteration  21: 153137.949 us/op
Iteration  22: 132080.349 us/op
Iteration  23: 115891.263 us/op
Iteration  24: 115934.219 us/op
Iteration  25: 116105.958 us/op


Result "io.druid.benchmark.FilterPartitionBenchmark.timeFilterNone":
  126714.455 ±(99.9%) 15888.964 us/op [Average]
  (min, avg, max) = (115731.912, 126714.455, 201694.296), stdev = 21211.312
  CI (99.9%): [110825.491, 142603.419] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = enumerate, strategy = lz4)

# Run progress: 9.09% complete, ETA 00:09:26
# Fork: 1 of 1
# Warmup Iteration   1: 37.715 ms/op
# Warmup Iteration   2: 24.676 ms/op
# Warmup Iteration   3: 24.836 ms/op
# Warmup Iteration   4: 24.654 ms/op
# Warmup Iteration   5: 24.825 ms/op
# Warmup Iteration   6: 24.706 ms/op
# Warmup Iteration   7: 24.833 ms/op
# Warmup Iteration   8: 24.651 ms/op
# Warmup Iteration   9: 25.072 ms/op
# Warmup Iteration  10: 24.831 ms/op
Iteration   1: 24.646 ms/op
Iteration   2: 25.036 ms/op
Iteration   3: 24.821 ms/op
Iteration   4: 24.646 ms/op
Iteration   5: 24.826 ms/op
Iteration   6: 24.715 ms/op
Iteration   7: 24.709 ms/op
Iteration   8: 24.709 ms/op
Iteration   9: 25.319 ms/op
Iteration  10: 24.642 ms/op
Iteration  11: 24.649 ms/op
Iteration  12: 24.820 ms/op
Iteration  13: 24.653 ms/op
Iteration  14: 24.714 ms/op
Iteration  15: 24.869 ms/op
Iteration  16: 24.701 ms/op
Iteration  17: 24.708 ms/op
Iteration  18: 24.720 ms/op
Iteration  19: 24.651 ms/op
Iteration  20: 25.464 ms/op
Iteration  21: 24.645 ms/op
Iteration  22: 24.710 ms/op
Iteration  23: 24.866 ms/op
Iteration  24: 24.698 ms/op
Iteration  25: 24.712 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  24.786 ±(99.9%) 0.154 ms/op [Average]
  (min, avg, max) = (24.642, 24.786, 25.464), stdev = 0.206
  CI (99.9%): [24.632, 24.940] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = enumerate, strategy = none)

# Run progress: 18.18% complete, ETA 00:06:56
# Fork: 1 of 1
# Warmup Iteration   1: 23.994 ms/op
# Warmup Iteration   2: 21.360 ms/op
# Warmup Iteration   3: 21.249 ms/op
# Warmup Iteration   4: 21.250 ms/op
# Warmup Iteration   5: 21.352 ms/op
# Warmup Iteration   6: 21.249 ms/op
# Warmup Iteration   7: 21.243 ms/op
# Warmup Iteration   8: 21.349 ms/op
# Warmup Iteration   9: 21.243 ms/op
# Warmup Iteration  10: 21.243 ms/op
Iteration   1: 21.275 ms/op
Iteration   2: 21.241 ms/op
Iteration   3: 21.245 ms/op
Iteration   4: 21.250 ms/op
Iteration   5: 21.357 ms/op
Iteration   6: 21.240 ms/op
Iteration   7: 21.218 ms/op
Iteration   8: 21.217 ms/op
Iteration   9: 21.214 ms/op
Iteration  10: 21.217 ms/op
Iteration  11: 21.215 ms/op
Iteration  12: 21.215 ms/op
Iteration  13: 21.313 ms/op
Iteration  14: 21.215 ms/op
Iteration  15: 21.218 ms/op
Iteration  16: 21.307 ms/op
Iteration  17: 21.227 ms/op
Iteration  18: 21.227 ms/op
Iteration  19: 21.221 ms/op
Iteration  20: 21.307 ms/op
Iteration  21: 21.217 ms/op
Iteration  22: 21.213 ms/op
Iteration  23: 21.321 ms/op
Iteration  24: 21.223 ms/op
Iteration  25: 21.218 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  21.245 ±(99.9%) 0.032 ms/op [Average]
  (min, avg, max) = (21.213, 21.245, 21.357), stdev = 0.042
  CI (99.9%): [21.214, 21.277] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = zipfLow, strategy = lz4)

# Run progress: 27.27% complete, ETA 00:05:42
# Fork: 1 of 1
# Warmup Iteration   1: 46.870 ms/op
# Warmup Iteration   2: 31.595 ms/op
# Warmup Iteration   3: 31.437 ms/op
# Warmup Iteration   4: 31.529 ms/op
# Warmup Iteration   5: 31.385 ms/op
# Warmup Iteration   6: 31.558 ms/op
# Warmup Iteration   7: 31.370 ms/op
# Warmup Iteration   8: 31.627 ms/op
# Warmup Iteration   9: 31.449 ms/op
# Warmup Iteration  10: 31.428 ms/op
Iteration   1: 31.444 ms/op
Iteration   2: 31.436 ms/op
Iteration   3: 31.437 ms/op
Iteration   4: 31.444 ms/op
Iteration   5: 31.476 ms/op
Iteration   6: 32.571 ms/op
Iteration   7: 31.404 ms/op
Iteration   8: 32.221 ms/op
Iteration   9: 31.369 ms/op
Iteration  10: 31.552 ms/op
Iteration  11: 31.480 ms/op
Iteration  12: 31.522 ms/op
Iteration  13: 31.381 ms/op
Iteration  14: 31.391 ms/op
Iteration  15: 31.384 ms/op
Iteration  16: 31.538 ms/op
Iteration  17: 31.382 ms/op
Iteration  18: 32.204 ms/op
Iteration  19: 31.551 ms/op
Iteration  20: 31.440 ms/op
Iteration  21: 31.387 ms/op
Iteration  22: 31.463 ms/op
Iteration  23: 31.491 ms/op
Iteration  24: 31.656 ms/op
Iteration  25: 31.440 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  31.563 ±(99.9%) 0.228 ms/op [Average]
  (min, avg, max) = (31.369, 31.563, 32.571), stdev = 0.304
  CI (99.9%): [31.335, 31.790] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = zipfLow, strategy = none)

# Run progress: 36.36% complete, ETA 00:04:47
# Fork: 1 of 1
# Warmup Iteration   1: 23.705 ms/op
# Warmup Iteration   2: 21.292 ms/op
# Warmup Iteration   3: 21.184 ms/op
# Warmup Iteration   4: 21.189 ms/op
# Warmup Iteration   5: 21.268 ms/op
# Warmup Iteration   6: 21.218 ms/op
# Warmup Iteration   7: 21.178 ms/op
# Warmup Iteration   8: 21.179 ms/op
# Warmup Iteration   9: 21.185 ms/op
# Warmup Iteration  10: 21.180 ms/op
Iteration   1: 21.180 ms/op
Iteration   2: 21.260 ms/op
Iteration   3: 21.211 ms/op
Iteration   4: 21.180 ms/op
Iteration   5: 21.266 ms/op
Iteration   6: 21.208 ms/op
Iteration   7: 21.661 ms/op
Iteration   8: 21.663 ms/op
Iteration   9: 21.665 ms/op
Iteration  10: 21.738 ms/op
Iteration  11: 21.660 ms/op
Iteration  12: 21.671 ms/op
Iteration  13: 21.775 ms/op
Iteration  14: 21.658 ms/op
Iteration  15: 21.663 ms/op
Iteration  16: 21.692 ms/op
Iteration  17: 21.751 ms/op
Iteration  18: 21.703 ms/op
Iteration  19: 21.661 ms/op
Iteration  20: 21.740 ms/op
Iteration  21: 21.663 ms/op
Iteration  22: 21.663 ms/op
Iteration  23: 21.693 ms/op
Iteration  24: 21.662 ms/op
Iteration  25: 21.664 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  21.574 ±(99.9%) 0.156 ms/op [Average]
  (min, avg, max) = (21.180, 21.574, 21.775), stdev = 0.208
  CI (99.9%): [21.418, 21.730] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = zipfHigh, strategy = lz4)

# Run progress: 45.45% complete, ETA 00:04:00
# Fork: 1 of 1
# Warmup Iteration   1: 44.495 ms/op
# Warmup Iteration   2: 28.307 ms/op
# Warmup Iteration   3: 27.176 ms/op
# Warmup Iteration   4: 27.267 ms/op
# Warmup Iteration   5: 27.187 ms/op
# Warmup Iteration   6: 27.186 ms/op
# Warmup Iteration   7: 27.434 ms/op
# Warmup Iteration   8: 27.189 ms/op
# Warmup Iteration   9: 27.781 ms/op
# Warmup Iteration  10: 27.463 ms/op
Iteration   1: 27.228 ms/op
Iteration   2: 27.792 ms/op
Iteration   3: 27.191 ms/op
Iteration   4: 27.171 ms/op
Iteration   5: 27.179 ms/op
Iteration   6: 27.350 ms/op
Iteration   7: 32.287 ms/op
Iteration   8: 28.127 ms/op
Iteration   9: 27.203 ms/op
Iteration  10: 27.748 ms/op
Iteration  11: 27.189 ms/op
Iteration  12: 27.363 ms/op
Iteration  13: 27.213 ms/op
Iteration  14: 27.222 ms/op
Iteration  15: 27.348 ms/op
Iteration  16: 27.328 ms/op
Iteration  17: 27.192 ms/op
Iteration  18: 27.768 ms/op
Iteration  19: 27.221 ms/op
Iteration  20: 27.180 ms/op
Iteration  21: 27.205 ms/op
Iteration  22: 27.197 ms/op
Iteration  23: 27.394 ms/op
Iteration  24: 27.245 ms/op
Iteration  25: 27.581 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  27.557 ±(99.9%) 0.762 ms/op [Average]
  (min, avg, max) = (27.171, 27.557, 32.287), stdev = 1.017
  CI (99.9%): [26.795, 28.318] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = zipfHigh, strategy = none)

# Run progress: 54.55% complete, ETA 00:03:16
# Fork: 1 of 1
# Warmup Iteration   1: 21.580 ms/op
# Warmup Iteration   2: 21.356 ms/op
# Warmup Iteration   3: 21.248 ms/op
# Warmup Iteration   4: 21.254 ms/op
# Warmup Iteration   5: 21.345 ms/op
# Warmup Iteration   6: 21.263 ms/op
# Warmup Iteration   7: 21.240 ms/op
# Warmup Iteration   8: 21.245 ms/op
# Warmup Iteration   9: 21.241 ms/op
# Warmup Iteration  10: 21.255 ms/op
Iteration   1: 21.242 ms/op
Iteration   2: 21.348 ms/op
Iteration   3: 21.245 ms/op
Iteration   4: 21.248 ms/op
Iteration   5: 21.238 ms/op
Iteration   6: 21.262 ms/op
Iteration   7: 21.217 ms/op
Iteration   8: 21.221 ms/op
Iteration   9: 21.220 ms/op
Iteration  10: 21.313 ms/op
Iteration  11: 21.219 ms/op
Iteration  12: 21.222 ms/op
Iteration  13: 21.309 ms/op
Iteration  14: 21.223 ms/op
Iteration  15: 21.216 ms/op
Iteration  16: 21.227 ms/op
Iteration  17: 21.322 ms/op
Iteration  18: 21.230 ms/op
Iteration  19: 25.175 ms/op
Iteration  20: 22.088 ms/op
Iteration  21: 21.238 ms/op
Iteration  22: 21.246 ms/op
Iteration  23: 21.233 ms/op
Iteration  24: 21.229 ms/op
Iteration  25: 21.234 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  21.439 ±(99.9%) 0.597 ms/op [Average]
  (min, avg, max) = (21.216, 21.439, 25.175), stdev = 0.797
  CI (99.9%): [20.842, 22.036] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = sequential, strategy = lz4)

# Run progress: 63.64% complete, ETA 00:02:35
# Fork: 1 of 1
# Warmup Iteration   1: 38.490 ms/op
# Warmup Iteration   2: 26.119 ms/op
# Warmup Iteration   3: 25.435 ms/op
# Warmup Iteration   4: 26.160 ms/op
# Warmup Iteration   5: 25.498 ms/op
# Warmup Iteration   6: 25.627 ms/op
# Warmup Iteration   7: 25.643 ms/op
# Warmup Iteration   8: 25.458 ms/op
# Warmup Iteration   9: 26.067 ms/op
# Warmup Iteration  10: 26.254 ms/op
Iteration   1: 25.438 ms/op
Iteration   2: 25.626 ms/op
Iteration   3: 25.619 ms/op
Iteration   4: 25.446 ms/op
Iteration   5: 25.844 ms/op
Iteration   6: 25.632 ms/op
Iteration   7: 25.446 ms/op
Iteration   8: 25.492 ms/op
Iteration   9: 25.517 ms/op
Iteration  10: 25.686 ms/op
Iteration  11: 25.509 ms/op
Iteration  12: 26.249 ms/op
Iteration  13: 25.446 ms/op
Iteration  14: 25.468 ms/op
Iteration  15: 25.661 ms/op
Iteration  16: 25.520 ms/op
Iteration  17: 25.460 ms/op
Iteration  18: 25.524 ms/op
Iteration  19: 25.695 ms/op
Iteration  20: 25.438 ms/op
Iteration  21: 26.128 ms/op
Iteration  22: 25.449 ms/op
Iteration  23: 26.136 ms/op
Iteration  24: 25.448 ms/op
Iteration  25: 25.658 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  25.621 ±(99.9%) 0.175 ms/op [Average]
  (min, avg, max) = (25.438, 25.621, 26.249), stdev = 0.233
  CI (99.9%): [25.447, 25.796] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = sequential, strategy = none)

# Run progress: 72.73% complete, ETA 00:01:55
# Fork: 1 of 1
# Warmup Iteration   1: 23.186 ms/op
# Warmup Iteration   2: 26.059 ms/op
# Warmup Iteration   3: 21.221 ms/op
# Warmup Iteration   4: 21.213 ms/op
# Warmup Iteration   5: 21.273 ms/op
# Warmup Iteration   6: 21.228 ms/op
# Warmup Iteration   7: 21.182 ms/op
# Warmup Iteration   8: 21.188 ms/op
# Warmup Iteration   9: 21.184 ms/op
# Warmup Iteration  10: 21.188 ms/op
Iteration   1: 21.182 ms/op
Iteration   2: 21.270 ms/op
Iteration   3: 21.214 ms/op
Iteration   4: 21.193 ms/op
Iteration   5: 21.267 ms/op
Iteration   6: 21.219 ms/op
Iteration   7: 21.183 ms/op
Iteration   8: 21.187 ms/op
Iteration   9: 21.225 ms/op
Iteration  10: 21.272 ms/op
Iteration  11: 21.183 ms/op
Iteration  12: 21.186 ms/op
Iteration  13: 21.265 ms/op
Iteration  14: 21.186 ms/op
Iteration  15: 21.183 ms/op
Iteration  16: 21.220 ms/op
Iteration  17: 21.187 ms/op
Iteration  18: 21.187 ms/op
Iteration  19: 21.181 ms/op
Iteration  20: 21.284 ms/op
Iteration  21: 21.186 ms/op
Iteration  22: 21.184 ms/op
Iteration  23: 21.220 ms/op
Iteration  24: 21.183 ms/op
Iteration  25: 21.186 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  21.209 ±(99.9%) 0.026 ms/op [Average]
  (min, avg, max) = (21.181, 21.209, 21.284), stdev = 0.035
  CI (99.9%): [21.183, 21.235] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = uniform, strategy = lz4)

# Run progress: 81.82% complete, ETA 00:01:16
# Fork: 1 of 1
# Warmup Iteration   1: 37.292 ms/op
# Warmup Iteration   2: 24.139 ms/op
# Warmup Iteration   3: 24.284 ms/op
# Warmup Iteration   4: 24.147 ms/op
# Warmup Iteration   5: 24.283 ms/op
# Warmup Iteration   6: 24.246 ms/op
# Warmup Iteration   7: 24.133 ms/op
# Warmup Iteration   8: 24.200 ms/op
# Warmup Iteration   9: 24.122 ms/op
# Warmup Iteration  10: 24.290 ms/op
Iteration   1: 24.217 ms/op
Iteration   2: 24.155 ms/op
Iteration   3: 24.274 ms/op
Iteration   4: 24.246 ms/op
Iteration   5: 24.147 ms/op
Iteration   6: 24.131 ms/op
Iteration   7: 24.189 ms/op
Iteration   8: 24.164 ms/op
Iteration   9: 24.130 ms/op
Iteration  10: 24.319 ms/op
Iteration  11: 24.214 ms/op
Iteration  12: 24.665 ms/op
Iteration  13: 24.184 ms/op
Iteration  14: 24.366 ms/op
Iteration  15: 24.190 ms/op
Iteration  16: 24.795 ms/op
Iteration  17: 24.121 ms/op
Iteration  18: 24.320 ms/op
Iteration  19: 24.351 ms/op
Iteration  20: 24.201 ms/op
Iteration  21: 24.191 ms/op
Iteration  22: 24.149 ms/op
Iteration  23: 24.120 ms/op
Iteration  24: 24.335 ms/op
Iteration  25: 24.198 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  24.255 ±(99.9%) 0.122 ms/op [Average]
  (min, avg, max) = (24.120, 24.255, 24.795), stdev = 0.162
  CI (99.9%): [24.133, 24.376] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = uniform, strategy = none)

# Run progress: 90.91% complete, ETA 00:00:37
# Fork: 1 of 1
# Warmup Iteration   1: 22.935 ms/op
# Warmup Iteration   2: 21.275 ms/op
# Warmup Iteration   3: 21.222 ms/op
# Warmup Iteration   4: 21.190 ms/op
# Warmup Iteration   5: 21.268 ms/op
# Warmup Iteration   6: 21.222 ms/op
# Warmup Iteration   7: 21.192 ms/op
# Warmup Iteration   8: 21.183 ms/op
# Warmup Iteration   9: 21.182 ms/op
# Warmup Iteration  10: 21.185 ms/op
Iteration   1: 21.180 ms/op
Iteration   2: 21.268 ms/op
Iteration   3: 21.214 ms/op
Iteration   4: 21.178 ms/op
Iteration   5: 21.179 ms/op
Iteration   6: 21.213 ms/op
Iteration   7: 21.669 ms/op
Iteration   8: 21.665 ms/op
Iteration   9: 21.661 ms/op
Iteration  10: 21.747 ms/op
Iteration  11: 21.785 ms/op
Iteration  12: 21.697 ms/op
Iteration  13: 21.737 ms/op
Iteration  14: 21.672 ms/op
Iteration  15: 21.662 ms/op
Iteration  16: 21.695 ms/op
Iteration  17: 21.753 ms/op
Iteration  18: 21.664 ms/op
Iteration  19: 21.662 ms/op
Iteration  20: 21.772 ms/op
Iteration  21: 21.662 ms/op
Iteration  22: 21.661 ms/op
Iteration  23: 21.697 ms/op
Iteration  24: 21.740 ms/op
Iteration  25: 21.665 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  21.580 ±(99.9%) 0.164 ms/op [Average]
  (min, avg, max) = (21.178, 21.580, 21.785), stdev = 0.219
  CI (99.9%): [21.416, 21.744] (assumes normal distribution)


# Run complete. Total time: 00:06:55

Benchmark                                      (dirPath)      (file)  (rowsPerSegment)  (schema)  (strategy)  Mode  Cnt       Score       Error  Units
FilterPartitionBenchmark.timeFilterNone              N/A         N/A            750000     basic         N/A  avgt   25  126714.455 ± 15888.964  us/op
FloatCompressionBenchmark.readContinuous  floatCompress/   enumerate               N/A       N/A         lz4  avgt   25      24.786 ±     0.154  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/   enumerate               N/A       N/A        none  avgt   25      21.245 ±     0.032  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/     zipfLow               N/A       N/A         lz4  avgt   25      31.563 ±     0.228  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/     zipfLow               N/A       N/A        none  avgt   25      21.574 ±     0.156  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/    zipfHigh               N/A       N/A         lz4  avgt   25      27.557 ±     0.762  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/    zipfHigh               N/A       N/A        none  avgt   25      21.439 ±     0.597  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/  sequential               N/A       N/A         lz4  avgt   25      25.621 ±     0.175  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/  sequential               N/A       N/A        none  avgt   25      21.209 ±     0.026  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/     uniform               N/A       N/A         lz4  avgt   25      24.255 ±     0.122  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/     uniform               N/A       N/A        none  avgt   25      21.580 ±     0.164  ms/op

Benchmark result is saved to exp-LOOP-out/druid_benchmarks_fixed_full_benchmark_FloatCompressionBenchmark_readContinuous_loop_trial2.csv
