# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FilterPartitionBenchmark.timeFilterNone
# Parameters: (rowsPerSegment = 750000, schema = basic)

# Run progress: 0.00% complete, ETA 00:06:25
# Fork: 1 of 1
# Warmup Iteration   1: 121553.281 us/op
# Warmup Iteration   2: 115977.525 us/op
# Warmup Iteration   3: 156270.665 us/op
# Warmup Iteration   4: 127054.434 us/op
# Warmup Iteration   5: 115433.468 us/op
# Warmup Iteration   6: 167139.057 us/op
# Warmup Iteration   7: 133029.755 us/op
# Warmup Iteration   8: 115397.160 us/op
# Warmup Iteration   9: 115425.475 us/op
# Warmup Iteration  10: 131562.712 us/op
Iteration   1: 118076.584 us/op
Iteration   2: 115391.674 us/op
Iteration   3: 115404.349 us/op
Iteration   4: 170950.965 us/op
Iteration   5: 125128.627 us/op
Iteration   6: 114627.939 us/op
Iteration   7: 115599.448 us/op
Iteration   8: 115611.589 us/op
Iteration   9: 139165.135 us/op
Iteration  10: 115318.921 us/op
Iteration  11: 115321.933 us/op
Iteration  12: 115492.582 us/op
Iteration  13: 115449.362 us/op
Iteration  14: 211953.177 us/op
Iteration  15: 127041.075 us/op
Iteration  16: 115545.918 us/op
Iteration  17: 115574.976 us/op
Iteration  18: 115543.930 us/op
Iteration  19: 115520.192 us/op
Iteration  20: 168883.957 us/op
Iteration  21: 125101.877 us/op
Iteration  22: 115345.145 us/op
Iteration  23: 115412.020 us/op
Iteration  24: 115477.727 us/op
Iteration  25: 115390.422 us/op


Result "io.druid.benchmark.FilterPartitionBenchmark.timeFilterNone":
  125933.181 ±(99.9%) 17694.974 us/op [Average]
  (min, avg, max) = (114627.939, 125933.181, 211953.177), stdev = 23622.284
  CI (99.9%): [108238.207, 143628.155] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = enumerate, strategy = lz4)

# Run progress: 9.09% complete, ETA 00:09:30
# Fork: 1 of 1
# Warmup Iteration   1: 33.428 ms/op
# Warmup Iteration   2: 25.487 ms/op
# Warmup Iteration   3: 24.697 ms/op
# Warmup Iteration   4: 25.360 ms/op
# Warmup Iteration   5: 24.745 ms/op
# Warmup Iteration   6: 24.854 ms/op
# Warmup Iteration   7: 24.846 ms/op
# Warmup Iteration   8: 24.689 ms/op
# Warmup Iteration   9: 25.092 ms/op
# Warmup Iteration  10: 25.397 ms/op
Iteration   1: 24.759 ms/op
Iteration   2: 24.831 ms/op
Iteration   3: 24.881 ms/op
Iteration   4: 24.686 ms/op
Iteration   5: 24.793 ms/op
Iteration   6: 24.744 ms/op
Iteration   7: 24.791 ms/op
Iteration   8: 24.915 ms/op
Iteration   9: 24.728 ms/op
Iteration  10: 25.158 ms/op
Iteration  11: 25.468 ms/op
Iteration  12: 24.700 ms/op
Iteration  13: 24.891 ms/op
Iteration  14: 24.759 ms/op
Iteration  15: 24.701 ms/op
Iteration  16: 24.683 ms/op
Iteration  17: 24.860 ms/op
Iteration  18: 24.805 ms/op
Iteration  19: 24.729 ms/op
Iteration  20: 24.742 ms/op
Iteration  21: 24.786 ms/op
Iteration  22: 25.450 ms/op
Iteration  23: 24.689 ms/op
Iteration  24: 24.771 ms/op
Iteration  25: 25.322 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  24.866 ±(99.9%) 0.173 ms/op [Average]
  (min, avg, max) = (24.683, 24.866, 25.468), stdev = 0.230
  CI (99.9%): [24.693, 25.038] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = enumerate, strategy = none)

# Run progress: 18.18% complete, ETA 00:06:58
# Fork: 1 of 1
# Warmup Iteration   1: 21.561 ms/op
# Warmup Iteration   2: 21.359 ms/op
# Warmup Iteration   3: 21.251 ms/op
# Warmup Iteration   4: 21.267 ms/op
# Warmup Iteration   5: 21.251 ms/op
# Warmup Iteration   6: 21.254 ms/op
# Warmup Iteration   7: 21.258 ms/op
# Warmup Iteration   8: 21.256 ms/op
# Warmup Iteration   9: 21.370 ms/op
# Warmup Iteration  10: 21.264 ms/op
Iteration   1: 21.248 ms/op
Iteration   2: 21.356 ms/op
Iteration   3: 21.263 ms/op
Iteration   4: 21.250 ms/op
Iteration   5: 21.247 ms/op
Iteration   6: 21.250 ms/op
Iteration   7: 21.241 ms/op
Iteration   8: 21.225 ms/op
Iteration   9: 21.228 ms/op
Iteration  10: 21.320 ms/op
Iteration  11: 21.222 ms/op
Iteration  12: 21.227 ms/op
Iteration  13: 21.223 ms/op
Iteration  14: 21.283 ms/op
Iteration  15: 21.223 ms/op
Iteration  16: 21.225 ms/op
Iteration  17: 21.320 ms/op
Iteration  18: 21.226 ms/op
Iteration  19: 21.222 ms/op
Iteration  20: 21.326 ms/op
Iteration  21: 21.229 ms/op
Iteration  22: 21.226 ms/op
Iteration  23: 21.224 ms/op
Iteration  24: 21.316 ms/op
Iteration  25: 21.225 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  21.254 ±(99.9%) 0.031 ms/op [Average]
  (min, avg, max) = (21.222, 21.254, 21.356), stdev = 0.041
  CI (99.9%): [21.223, 21.285] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = zipfLow, strategy = lz4)

# Run progress: 27.27% complete, ETA 00:05:43
# Fork: 1 of 1
# Warmup Iteration   1: 47.911 ms/op
# Warmup Iteration   2: 32.132 ms/op
# Warmup Iteration   3: 31.438 ms/op
# Warmup Iteration   4: 31.569 ms/op
# Warmup Iteration   5: 31.471 ms/op
# Warmup Iteration   6: 31.397 ms/op
# Warmup Iteration   7: 31.469 ms/op
# Warmup Iteration   8: 31.492 ms/op
# Warmup Iteration   9: 32.105 ms/op
# Warmup Iteration  10: 31.393 ms/op
Iteration   1: 31.550 ms/op
Iteration   2: 32.142 ms/op
Iteration   3: 31.416 ms/op
Iteration   4: 31.552 ms/op
Iteration   5: 31.477 ms/op
Iteration   6: 31.423 ms/op
Iteration   7: 31.376 ms/op
Iteration   8: 31.478 ms/op
Iteration   9: 31.409 ms/op
Iteration  10: 31.643 ms/op
Iteration  11: 31.482 ms/op
Iteration  12: 31.856 ms/op
Iteration  13: 32.079 ms/op
Iteration  14: 31.445 ms/op
Iteration  15: 31.631 ms/op
Iteration  16: 31.505 ms/op
Iteration  17: 31.619 ms/op
Iteration  18: 31.759 ms/op
Iteration  19: 31.613 ms/op
Iteration  20: 31.380 ms/op
Iteration  21: 31.464 ms/op
Iteration  22: 31.490 ms/op
Iteration  23: 31.431 ms/op
Iteration  24: 31.713 ms/op
Iteration  25: 31.472 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  31.576 ±(99.9%) 0.151 ms/op [Average]
  (min, avg, max) = (31.376, 31.576, 32.142), stdev = 0.201
  CI (99.9%): [31.425, 31.727] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = zipfLow, strategy = none)

# Run progress: 36.36% complete, ETA 00:04:47
# Fork: 1 of 1
# Warmup Iteration   1: 23.922 ms/op
# Warmup Iteration   2: 21.277 ms/op
# Warmup Iteration   3: 21.222 ms/op
# Warmup Iteration   4: 21.189 ms/op
# Warmup Iteration   5: 21.188 ms/op
# Warmup Iteration   6: 21.223 ms/op
# Warmup Iteration   7: 21.182 ms/op
# Warmup Iteration   8: 21.184 ms/op
# Warmup Iteration   9: 21.267 ms/op
# Warmup Iteration  10: 21.179 ms/op
Iteration   1: 21.179 ms/op
Iteration   2: 21.266 ms/op
Iteration   3: 21.216 ms/op
Iteration   4: 21.180 ms/op
Iteration   5: 21.182 ms/op
Iteration   6: 21.213 ms/op
Iteration   7: 21.661 ms/op
Iteration   8: 21.663 ms/op
Iteration   9: 21.668 ms/op
Iteration  10: 21.742 ms/op
Iteration  11: 21.660 ms/op
Iteration  12: 21.661 ms/op
Iteration  13: 21.693 ms/op
Iteration  14: 21.663 ms/op
Iteration  15: 23.901 ms/op
Iteration  16: 21.665 ms/op
Iteration  17: 21.743 ms/op
Iteration  18: 21.664 ms/op
Iteration  19: 21.660 ms/op
Iteration  20: 21.693 ms/op
Iteration  21: 21.662 ms/op
Iteration  22: 21.661 ms/op
Iteration  23: 21.664 ms/op
Iteration  24: 21.742 ms/op
Iteration  25: 21.674 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  21.655 ±(99.9%) 0.383 ms/op [Average]
  (min, avg, max) = (21.179, 21.655, 23.901), stdev = 0.512
  CI (99.9%): [21.272, 22.039] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = zipfHigh, strategy = lz4)

# Run progress: 45.45% complete, ETA 00:04:00
# Fork: 1 of 1
# Warmup Iteration   1: 42.490 ms/op
# Warmup Iteration   2: 27.082 ms/op
# Warmup Iteration   3: 27.028 ms/op
# Warmup Iteration   4: 27.154 ms/op
# Warmup Iteration   5: 27.016 ms/op
# Warmup Iteration   6: 27.765 ms/op
# Warmup Iteration   7: 27.168 ms/op
# Warmup Iteration   8: 27.109 ms/op
# Warmup Iteration   9: 27.077 ms/op
# Warmup Iteration  10: 33.416 ms/op
Iteration   1: 27.004 ms/op
Iteration   2: 27.069 ms/op
Iteration   3: 27.027 ms/op
Iteration   4: 27.053 ms/op
Iteration   5: 27.034 ms/op
Iteration   6: 27.447 ms/op
Iteration   7: 26.941 ms/op
Iteration   8: 27.597 ms/op
Iteration   9: 27.259 ms/op
Iteration  10: 26.942 ms/op
Iteration  11: 28.576 ms/op
Iteration  12: 29.008 ms/op
Iteration  13: 26.940 ms/op
Iteration  14: 27.119 ms/op
Iteration  15: 26.991 ms/op
Iteration  16: 26.949 ms/op
Iteration  17: 27.599 ms/op
Iteration  18: 27.014 ms/op
Iteration  19: 26.946 ms/op
Iteration  20: 27.180 ms/op
Iteration  21: 26.944 ms/op
Iteration  22: 27.731 ms/op
Iteration  23: 26.941 ms/op
Iteration  24: 27.143 ms/op
Iteration  25: 26.939 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  27.256 ±(99.9%) 0.390 ms/op [Average]
  (min, avg, max) = (26.939, 27.256, 29.008), stdev = 0.520
  CI (99.9%): [26.866, 27.646] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = zipfHigh, strategy = none)

# Run progress: 54.55% complete, ETA 00:03:16
# Fork: 1 of 1
# Warmup Iteration   1: 23.490 ms/op
# Warmup Iteration   2: 21.352 ms/op
# Warmup Iteration   3: 21.250 ms/op
# Warmup Iteration   4: 21.254 ms/op
# Warmup Iteration   5: 21.349 ms/op
# Warmup Iteration   6: 21.253 ms/op
# Warmup Iteration   7: 21.254 ms/op
# Warmup Iteration   8: 21.243 ms/op
# Warmup Iteration   9: 21.247 ms/op
# Warmup Iteration  10: 21.243 ms/op
Iteration   1: 21.245 ms/op
Iteration   2: 21.346 ms/op
Iteration   3: 21.245 ms/op
Iteration   4: 21.245 ms/op
Iteration   5: 21.257 ms/op
Iteration   6: 21.252 ms/op
Iteration   7: 21.230 ms/op
Iteration   8: 21.231 ms/op
Iteration   9: 21.227 ms/op
Iteration  10: 21.320 ms/op
Iteration  11: 21.234 ms/op
Iteration  12: 21.230 ms/op
Iteration  13: 21.324 ms/op
Iteration  14: 21.232 ms/op
Iteration  15: 21.232 ms/op
Iteration  16: 21.232 ms/op
Iteration  17: 21.336 ms/op
Iteration  18: 21.233 ms/op
Iteration  19: 21.226 ms/op
Iteration  20: 21.328 ms/op
Iteration  21: 21.230 ms/op
Iteration  22: 21.232 ms/op
Iteration  23: 21.233 ms/op
Iteration  24: 21.232 ms/op
Iteration  25: 21.234 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  21.255 ±(99.9%) 0.030 ms/op [Average]
  (min, avg, max) = (21.226, 21.255, 21.346), stdev = 0.040
  CI (99.9%): [21.225, 21.285] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = sequential, strategy = lz4)

# Run progress: 63.64% complete, ETA 00:02:35
# Fork: 1 of 1
# Warmup Iteration   1: 39.161 ms/op
# Warmup Iteration   2: 26.171 ms/op
# Warmup Iteration   3: 26.114 ms/op
# Warmup Iteration   4: 26.466 ms/op
# Warmup Iteration   5: 26.073 ms/op
# Warmup Iteration   6: 26.208 ms/op
# Warmup Iteration   7: 26.085 ms/op
# Warmup Iteration   8: 25.958 ms/op
# Warmup Iteration   9: 26.156 ms/op
# Warmup Iteration  10: 26.192 ms/op
Iteration   1: 26.139 ms/op
Iteration   2: 26.093 ms/op
Iteration   3: 26.192 ms/op
Iteration   4: 26.061 ms/op
Iteration   5: 26.160 ms/op
Iteration   6: 26.049 ms/op
Iteration   7: 26.407 ms/op
Iteration   8: 26.300 ms/op
Iteration   9: 26.424 ms/op
Iteration  10: 26.243 ms/op
Iteration  11: 26.717 ms/op
Iteration  12: 26.453 ms/op
Iteration  13: 26.285 ms/op
Iteration  14: 26.208 ms/op
Iteration  15: 26.281 ms/op
Iteration  16: 26.205 ms/op
Iteration  17: 26.354 ms/op
Iteration  18: 26.452 ms/op
Iteration  19: 26.328 ms/op
Iteration  20: 26.247 ms/op
Iteration  21: 26.255 ms/op
Iteration  22: 26.288 ms/op
Iteration  23: 26.392 ms/op
Iteration  24: 26.242 ms/op
Iteration  25: 26.830 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  26.304 ±(99.9%) 0.136 ms/op [Average]
  (min, avg, max) = (26.049, 26.304, 26.830), stdev = 0.181
  CI (99.9%): [26.168, 26.440] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = sequential, strategy = none)

# Run progress: 72.73% complete, ETA 00:01:55
# Fork: 1 of 1
# Warmup Iteration   1: 23.875 ms/op
# Warmup Iteration   2: 21.278 ms/op
# Warmup Iteration   3: 21.224 ms/op
# Warmup Iteration   4: 21.191 ms/op
# Warmup Iteration   5: 21.276 ms/op
# Warmup Iteration   6: 21.222 ms/op
# Warmup Iteration   7: 21.185 ms/op
# Warmup Iteration   8: 21.185 ms/op
# Warmup Iteration   9: 21.185 ms/op
# Warmup Iteration  10: 21.186 ms/op
Iteration   1: 21.186 ms/op
Iteration   2: 21.266 ms/op
Iteration   3: 21.218 ms/op
Iteration   4: 21.189 ms/op
Iteration   5: 21.195 ms/op
Iteration   6: 21.216 ms/op
Iteration   7: 21.185 ms/op
Iteration   8: 21.186 ms/op
Iteration   9: 21.185 ms/op
Iteration  10: 21.269 ms/op
Iteration  11: 21.195 ms/op
Iteration  12: 21.188 ms/op
Iteration  13: 21.318 ms/op
Iteration  14: 21.189 ms/op
Iteration  15: 21.186 ms/op
Iteration  16: 21.218 ms/op
Iteration  17: 21.187 ms/op
Iteration  18: 21.187 ms/op
Iteration  19: 21.181 ms/op
Iteration  20: 21.273 ms/op
Iteration  21: 21.183 ms/op
Iteration  22: 21.187 ms/op
Iteration  23: 21.218 ms/op
Iteration  24: 21.197 ms/op
Iteration  25: 21.183 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  21.207 ±(99.9%) 0.027 ms/op [Average]
  (min, avg, max) = (21.181, 21.207, 21.318), stdev = 0.036
  CI (99.9%): [21.180, 21.234] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = uniform, strategy = lz4)

# Run progress: 81.82% complete, ETA 00:01:16
# Fork: 1 of 1
# Warmup Iteration   1: 37.382 ms/op
# Warmup Iteration   2: 24.069 ms/op
# Warmup Iteration   3: 24.061 ms/op
# Warmup Iteration   4: 24.613 ms/op
# Warmup Iteration   5: 24.062 ms/op
# Warmup Iteration   6: 24.126 ms/op
# Warmup Iteration   7: 24.171 ms/op
# Warmup Iteration   8: 24.051 ms/op
# Warmup Iteration   9: 24.062 ms/op
# Warmup Iteration  10: 23.999 ms/op
Iteration   1: 24.028 ms/op
Iteration   2: 24.018 ms/op
Iteration   3: 23.979 ms/op
Iteration   4: 24.093 ms/op
Iteration   5: 24.060 ms/op
Iteration   6: 24.745 ms/op
Iteration   7: 24.060 ms/op
Iteration   8: 23.993 ms/op
Iteration   9: 24.020 ms/op
Iteration  10: 24.553 ms/op
Iteration  11: 24.028 ms/op
Iteration  12: 24.716 ms/op
Iteration  13: 24.220 ms/op
Iteration  14: 24.022 ms/op
Iteration  15: 24.100 ms/op
Iteration  16: 24.029 ms/op
Iteration  17: 24.007 ms/op
Iteration  18: 24.051 ms/op
Iteration  19: 24.052 ms/op
Iteration  20: 24.011 ms/op
Iteration  21: 24.017 ms/op
Iteration  22: 24.216 ms/op
Iteration  23: 24.063 ms/op
Iteration  24: 24.027 ms/op
Iteration  25: 23.976 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  24.123 ±(99.9%) 0.162 ms/op [Average]
  (min, avg, max) = (23.976, 24.123, 24.745), stdev = 0.217
  CI (99.9%): [23.961, 24.286] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = uniform, strategy = none)

# Run progress: 90.91% complete, ETA 00:00:38
# Fork: 1 of 1
# Warmup Iteration   1: 23.186 ms/op
# Warmup Iteration   2: 21.278 ms/op
# Warmup Iteration   3: 21.289 ms/op
# Warmup Iteration   4: 21.279 ms/op
# Warmup Iteration   5: 21.364 ms/op
# Warmup Iteration   6: 21.278 ms/op
# Warmup Iteration   7: 21.272 ms/op
# Warmup Iteration   8: 21.273 ms/op
# Warmup Iteration   9: 21.274 ms/op
# Warmup Iteration  10: 21.274 ms/op
Iteration   1: 21.274 ms/op
Iteration   2: 21.377 ms/op
Iteration   3: 21.270 ms/op
Iteration   4: 21.272 ms/op
Iteration   5: 21.357 ms/op
Iteration   6: 21.271 ms/op
Iteration   7: 21.254 ms/op
Iteration   8: 21.249 ms/op
Iteration   9: 21.252 ms/op
Iteration  10: 21.343 ms/op
Iteration  11: 21.257 ms/op
Iteration  12: 21.251 ms/op
Iteration  13: 21.357 ms/op
Iteration  14: 21.250 ms/op
Iteration  15: 21.270 ms/op
Iteration  16: 21.254 ms/op
Iteration  17: 21.256 ms/op
Iteration  18: 21.250 ms/op
Iteration  19: 21.254 ms/op
Iteration  20: 21.343 ms/op
Iteration  21: 21.254 ms/op
Iteration  22: 21.253 ms/op
Iteration  23: 21.254 ms/op
Iteration  24: 21.254 ms/op
Iteration  25: 21.253 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  21.277 ±(99.9%) 0.031 ms/op [Average]
  (min, avg, max) = (21.249, 21.277, 21.377), stdev = 0.041
  CI (99.9%): [21.246, 21.308] (assumes normal distribution)


# Run complete. Total time: 00:06:55

Benchmark                                      (dirPath)      (file)  (rowsPerSegment)  (schema)  (strategy)  Mode  Cnt       Score       Error  Units
FilterPartitionBenchmark.timeFilterNone              N/A         N/A            750000     basic         N/A  avgt   25  125933.181 ± 17694.974  us/op
FloatCompressionBenchmark.readContinuous  floatCompress/   enumerate               N/A       N/A         lz4  avgt   25      24.866 ±     0.173  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/   enumerate               N/A       N/A        none  avgt   25      21.254 ±     0.031  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/     zipfLow               N/A       N/A         lz4  avgt   25      31.576 ±     0.151  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/     zipfLow               N/A       N/A        none  avgt   25      21.655 ±     0.383  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/    zipfHigh               N/A       N/A         lz4  avgt   25      27.256 ±     0.390  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/    zipfHigh               N/A       N/A        none  avgt   25      21.255 ±     0.030  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/  sequential               N/A       N/A         lz4  avgt   25      26.304 ±     0.136  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/  sequential               N/A       N/A        none  avgt   25      21.207 ±     0.027  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/     uniform               N/A       N/A         lz4  avgt   25      24.123 ±     0.162  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/     uniform               N/A       N/A        none  avgt   25      21.277 ±     0.031  ms/op

Benchmark result is saved to exp-LOOP-out/druid_benchmarks_fixed_full_benchmark_FloatCompressionBenchmark_readContinuous_loop_trial4.csv
