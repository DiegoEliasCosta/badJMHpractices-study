# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FilterPartitionBenchmark.timeFilterNone
# Parameters: (rowsPerSegment = 750000, schema = basic)

# Run progress: 0.00% complete, ETA 00:06:25
# Fork: 1 of 1
# Warmup Iteration   1: 122382.177 us/op
# Warmup Iteration   2: 116076.719 us/op
# Warmup Iteration   3: 138220.761 us/op
# Warmup Iteration   4: 126211.971 us/op
# Warmup Iteration   5: 115901.905 us/op
# Warmup Iteration   6: 115813.717 us/op
# Warmup Iteration   7: 180255.253 us/op
# Warmup Iteration   8: 115810.897 us/op
# Warmup Iteration   9: 115804.342 us/op
# Warmup Iteration  10: 115820.668 us/op
Iteration   1: 138608.857 us/op
Iteration   2: 134679.009 us/op
Iteration   3: 115778.027 us/op
Iteration   4: 115812.860 us/op
Iteration   5: 115828.976 us/op
Iteration   6: 179280.629 us/op
Iteration   7: 115857.405 us/op
Iteration   8: 115967.826 us/op
Iteration   9: 115905.431 us/op
Iteration  10: 115869.559 us/op
Iteration  11: 148035.081 us/op
Iteration  12: 131788.103 us/op
Iteration  13: 115994.709 us/op
Iteration  14: 115871.612 us/op
Iteration  15: 115877.783 us/op
Iteration  16: 115909.373 us/op
Iteration  17: 216201.134 us/op
Iteration  18: 133103.655 us/op
Iteration  19: 115823.539 us/op
Iteration  20: 115882.074 us/op
Iteration  21: 115851.425 us/op
Iteration  22: 115759.852 us/op
Iteration  23: 153115.615 us/op
Iteration  24: 131909.694 us/op
Iteration  25: 115848.150 us/op


Result "io.druid.benchmark.FilterPartitionBenchmark.timeFilterNone":
  128822.415 ±(99.9%) 18087.790 us/op [Average]
  (min, avg, max) = (115759.852, 128822.415, 216201.134), stdev = 24146.682
  CI (99.9%): [110734.625, 146910.205] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = enumerate, strategy = lz4)

# Run progress: 9.09% complete, ETA 00:09:24
# Fork: 1 of 1
# Warmup Iteration   1: 20.259 ms/op
# Warmup Iteration   2: 12.951 ms/op
# Warmup Iteration   3: 12.799 ms/op
# Warmup Iteration   4: 12.815 ms/op
# Warmup Iteration   5: 12.802 ms/op
# Warmup Iteration   6: 12.804 ms/op
# Warmup Iteration   7: 12.801 ms/op
# Warmup Iteration   8: 12.799 ms/op
# Warmup Iteration   9: 12.806 ms/op
# Warmup Iteration  10: 12.798 ms/op
Iteration   1: 12.798 ms/op
Iteration   2: 12.822 ms/op
Iteration   3: 12.804 ms/op
Iteration   4: 12.796 ms/op
Iteration   5: 12.801 ms/op
Iteration   6: 12.795 ms/op
Iteration   7: 12.841 ms/op
Iteration   8: 12.973 ms/op
Iteration   9: 12.829 ms/op
Iteration  10: 12.800 ms/op
Iteration  11: 12.798 ms/op
Iteration  12: 12.847 ms/op
Iteration  13: 12.789 ms/op
Iteration  14: 12.792 ms/op
Iteration  15: 12.798 ms/op
Iteration  16: 12.833 ms/op
Iteration  17: 12.857 ms/op
Iteration  18: 12.927 ms/op
Iteration  19: 12.981 ms/op
Iteration  20: 12.789 ms/op
Iteration  21: 12.916 ms/op
Iteration  22: 12.790 ms/op
Iteration  23: 12.792 ms/op
Iteration  24: 12.793 ms/op
Iteration  25: 12.814 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  12.831 ±(99.9%) 0.043 ms/op [Average]
  (min, avg, max) = (12.789, 12.831, 12.981), stdev = 0.057
  CI (99.9%): [12.788, 12.874] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = enumerate, strategy = none)

# Run progress: 18.18% complete, ETA 00:06:55
# Fork: 1 of 1
# Warmup Iteration   1: 4.668 ms/op
# Warmup Iteration   2: 5.217 ms/op
# Warmup Iteration   3: 4.256 ms/op
# Warmup Iteration   4: 4.260 ms/op
# Warmup Iteration   5: 5.192 ms/op
# Warmup Iteration   6: 4.254 ms/op
# Warmup Iteration   7: 4.252 ms/op
# Warmup Iteration   8: 4.252 ms/op
# Warmup Iteration   9: 4.251 ms/op
# Warmup Iteration  10: 4.253 ms/op
Iteration   1: 4.252 ms/op
Iteration   2: 4.251 ms/op
Iteration   3: 4.250 ms/op
Iteration   4: 4.284 ms/op
Iteration   5: 4.614 ms/op
Iteration   6: 4.251 ms/op
Iteration   7: 4.252 ms/op
Iteration   8: 4.250 ms/op
Iteration   9: 4.251 ms/op
Iteration  10: 4.251 ms/op
Iteration  11: 4.251 ms/op
Iteration  12: 4.252 ms/op
Iteration  13: 4.250 ms/op
Iteration  14: 4.256 ms/op
Iteration  15: 4.250 ms/op
Iteration  16: 4.250 ms/op
Iteration  17: 4.251 ms/op
Iteration  18: 4.249 ms/op
Iteration  19: 4.250 ms/op
Iteration  20: 4.250 ms/op
Iteration  21: 4.250 ms/op
Iteration  22: 4.250 ms/op
Iteration  23: 4.251 ms/op
Iteration  24: 4.251 ms/op
Iteration  25: 4.249 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  4.267 ±(99.9%) 0.054 ms/op [Average]
  (min, avg, max) = (4.249, 4.267, 4.614), stdev = 0.073
  CI (99.9%): [4.212, 4.321] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = zipfLow, strategy = lz4)

# Run progress: 27.27% complete, ETA 00:05:40
# Fork: 1 of 1
# Warmup Iteration   1: 26.119 ms/op
# Warmup Iteration   2: 19.545 ms/op
# Warmup Iteration   3: 19.549 ms/op
# Warmup Iteration   4: 19.569 ms/op
# Warmup Iteration   5: 19.659 ms/op
# Warmup Iteration   6: 19.543 ms/op
# Warmup Iteration   7: 19.763 ms/op
# Warmup Iteration   8: 19.544 ms/op
# Warmup Iteration   9: 19.549 ms/op
# Warmup Iteration  10: 19.541 ms/op
Iteration   1: 19.533 ms/op
Iteration   2: 19.539 ms/op
Iteration   3: 19.559 ms/op
Iteration   4: 19.603 ms/op
Iteration   5: 19.538 ms/op
Iteration   6: 19.631 ms/op
Iteration   7: 19.532 ms/op
Iteration   8: 19.539 ms/op
Iteration   9: 19.532 ms/op
Iteration  10: 19.552 ms/op
Iteration  11: 19.537 ms/op
Iteration  12: 19.532 ms/op
Iteration  13: 19.711 ms/op
Iteration  14: 19.530 ms/op
Iteration  15: 19.657 ms/op
Iteration  16: 19.534 ms/op
Iteration  17: 19.690 ms/op
Iteration  18: 19.550 ms/op
Iteration  19: 19.538 ms/op
Iteration  20: 19.546 ms/op
Iteration  21: 19.560 ms/op
Iteration  22: 19.532 ms/op
Iteration  23: 19.539 ms/op
Iteration  24: 19.538 ms/op
Iteration  25: 19.534 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  19.563 ±(99.9%) 0.039 ms/op [Average]
  (min, avg, max) = (19.530, 19.563, 19.711), stdev = 0.052
  CI (99.9%): [19.524, 19.603] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = zipfLow, strategy = none)

# Run progress: 36.36% complete, ETA 00:04:46
# Fork: 1 of 1
# Warmup Iteration   1: 4.767 ms/op
# Warmup Iteration   2: 4.255 ms/op
# Warmup Iteration   3: 4.251 ms/op
# Warmup Iteration   4: 4.251 ms/op
# Warmup Iteration   5: 4.250 ms/op
# Warmup Iteration   6: 4.252 ms/op
# Warmup Iteration   7: 4.250 ms/op
# Warmup Iteration   8: 4.251 ms/op
# Warmup Iteration   9: 4.253 ms/op
# Warmup Iteration  10: 4.253 ms/op
Iteration   1: 4.254 ms/op
Iteration   2: 4.252 ms/op
Iteration   3: 4.254 ms/op
Iteration   4: 4.253 ms/op
Iteration   5: 4.252 ms/op
Iteration   6: 4.255 ms/op
Iteration   7: 4.251 ms/op
Iteration   8: 4.251 ms/op
Iteration   9: 4.252 ms/op
Iteration  10: 4.253 ms/op
Iteration  11: 4.253 ms/op
Iteration  12: 4.252 ms/op
Iteration  13: 4.253 ms/op
Iteration  14: 4.254 ms/op
Iteration  15: 4.251 ms/op
Iteration  16: 4.254 ms/op
Iteration  17: 4.251 ms/op
Iteration  18: 4.446 ms/op
Iteration  19: 4.414 ms/op
Iteration  20: 4.252 ms/op
Iteration  21: 4.252 ms/op
Iteration  22: 4.253 ms/op
Iteration  23: 4.251 ms/op
Iteration  24: 4.251 ms/op
Iteration  25: 4.251 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  4.267 ±(99.9%) 0.037 ms/op [Average]
  (min, avg, max) = (4.251, 4.267, 4.446), stdev = 0.049
  CI (99.9%): [4.230, 4.304] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = zipfHigh, strategy = lz4)

# Run progress: 45.45% complete, ETA 00:03:58
# Fork: 1 of 1
# Warmup Iteration   1: 24.064 ms/op
# Warmup Iteration   2: 15.020 ms/op
# Warmup Iteration   3: 15.026 ms/op
# Warmup Iteration   4: 15.047 ms/op
# Warmup Iteration   5: 15.034 ms/op
# Warmup Iteration   6: 15.037 ms/op
# Warmup Iteration   7: 15.031 ms/op
# Warmup Iteration   8: 15.029 ms/op
# Warmup Iteration   9: 15.031 ms/op
# Warmup Iteration  10: 15.028 ms/op
Iteration   1: 15.045 ms/op
Iteration   2: 15.051 ms/op
Iteration   3: 15.063 ms/op
Iteration   4: 15.050 ms/op
Iteration   5: 15.028 ms/op
Iteration   6: 15.043 ms/op
Iteration   7: 15.028 ms/op
Iteration   8: 15.035 ms/op
Iteration   9: 15.037 ms/op
Iteration  10: 15.032 ms/op
Iteration  11: 15.045 ms/op
Iteration  12: 15.060 ms/op
Iteration  13: 15.110 ms/op
Iteration  14: 15.201 ms/op
Iteration  15: 15.195 ms/op
Iteration  16: 15.026 ms/op
Iteration  17: 15.203 ms/op
Iteration  18: 15.028 ms/op
Iteration  19: 15.317 ms/op
Iteration  20: 15.026 ms/op
Iteration  21: 15.286 ms/op
Iteration  22: 15.204 ms/op
Iteration  23: 15.093 ms/op
Iteration  24: 15.014 ms/op
Iteration  25: 15.019 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  15.090 ±(99.9%) 0.067 ms/op [Average]
  (min, avg, max) = (15.014, 15.090, 15.317), stdev = 0.089
  CI (99.9%): [15.023, 15.156] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = zipfHigh, strategy = none)

# Run progress: 54.55% complete, ETA 00:03:15
# Fork: 1 of 1
# Warmup Iteration   1: 4.673 ms/op
# Warmup Iteration   2: 4.254 ms/op
# Warmup Iteration   3: 4.249 ms/op
# Warmup Iteration   4: 4.248 ms/op
# Warmup Iteration   5: 4.249 ms/op
# Warmup Iteration   6: 4.247 ms/op
# Warmup Iteration   7: 4.248 ms/op
# Warmup Iteration   8: 4.248 ms/op
# Warmup Iteration   9: 4.248 ms/op
# Warmup Iteration  10: 4.248 ms/op
Iteration   1: 4.251 ms/op
Iteration   2: 4.248 ms/op
Iteration   3: 4.248 ms/op
Iteration   4: 4.248 ms/op
Iteration   5: 4.254 ms/op
Iteration   6: 4.247 ms/op
Iteration   7: 4.248 ms/op
Iteration   8: 4.248 ms/op
Iteration   9: 4.248 ms/op
Iteration  10: 4.246 ms/op
Iteration  11: 4.249 ms/op
Iteration  12: 4.246 ms/op
Iteration  13: 4.249 ms/op
Iteration  14: 4.248 ms/op
Iteration  15: 4.248 ms/op
Iteration  16: 4.246 ms/op
Iteration  17: 4.247 ms/op
Iteration  18: 4.248 ms/op
Iteration  19: 4.245 ms/op
Iteration  20: 4.244 ms/op
Iteration  21: 4.245 ms/op
Iteration  22: 4.244 ms/op
Iteration  23: 4.245 ms/op
Iteration  24: 4.244 ms/op
Iteration  25: 4.250 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  4.247 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (4.244, 4.247, 4.254), stdev = 0.002
  CI (99.9%): [4.246, 4.249] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = sequential, strategy = lz4)

# Run progress: 63.64% complete, ETA 00:02:34
# Fork: 1 of 1
# Warmup Iteration   1: 18.290 ms/op
# Warmup Iteration   2: 13.687 ms/op
# Warmup Iteration   3: 13.660 ms/op
# Warmup Iteration   4: 13.657 ms/op
# Warmup Iteration   5: 13.670 ms/op
# Warmup Iteration   6: 13.657 ms/op
# Warmup Iteration   7: 13.648 ms/op
# Warmup Iteration   8: 13.658 ms/op
# Warmup Iteration   9: 13.670 ms/op
# Warmup Iteration  10: 13.845 ms/op
Iteration   1: 13.647 ms/op
Iteration   2: 13.614 ms/op
Iteration   3: 13.651 ms/op
Iteration   4: 13.757 ms/op
Iteration   5: 13.650 ms/op
Iteration   6: 13.730 ms/op
Iteration   7: 13.794 ms/op
Iteration   8: 13.624 ms/op
Iteration   9: 13.847 ms/op
Iteration  10: 13.797 ms/op
Iteration  11: 13.754 ms/op
Iteration  12: 13.654 ms/op
Iteration  13: 13.926 ms/op
Iteration  14: 13.649 ms/op
Iteration  15: 13.680 ms/op
Iteration  16: 13.643 ms/op
Iteration  17: 13.660 ms/op
Iteration  18: 13.659 ms/op
Iteration  19: 13.690 ms/op
Iteration  20: 13.866 ms/op
Iteration  21: 13.639 ms/op
Iteration  22: 14.807 ms/op
Iteration  23: 13.653 ms/op
Iteration  24: 13.656 ms/op
Iteration  25: 13.657 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  13.748 ±(99.9%) 0.177 ms/op [Average]
  (min, avg, max) = (13.614, 13.748, 14.807), stdev = 0.236
  CI (99.9%): [13.572, 13.925] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = sequential, strategy = none)

# Run progress: 72.73% complete, ETA 00:01:54
# Fork: 1 of 1
# Warmup Iteration   1: 4.615 ms/op
# Warmup Iteration   2: 4.257 ms/op
# Warmup Iteration   3: 4.254 ms/op
# Warmup Iteration   4: 4.257 ms/op
# Warmup Iteration   5: 4.253 ms/op
# Warmup Iteration   6: 4.254 ms/op
# Warmup Iteration   7: 4.254 ms/op
# Warmup Iteration   8: 4.254 ms/op
# Warmup Iteration   9: 4.255 ms/op
# Warmup Iteration  10: 4.256 ms/op
Iteration   1: 4.254 ms/op
Iteration   2: 4.253 ms/op
Iteration   3: 4.253 ms/op
Iteration   4: 4.254 ms/op
Iteration   5: 4.254 ms/op
Iteration   6: 4.253 ms/op
Iteration   7: 4.254 ms/op
Iteration   8: 4.254 ms/op
Iteration   9: 4.253 ms/op
Iteration  10: 4.252 ms/op
Iteration  11: 4.252 ms/op
Iteration  12: 4.252 ms/op
Iteration  13: 4.253 ms/op
Iteration  14: 4.255 ms/op
Iteration  15: 4.251 ms/op
Iteration  16: 5.202 ms/op
Iteration  17: 4.251 ms/op
Iteration  18: 4.252 ms/op
Iteration  19: 4.250 ms/op
Iteration  20: 4.255 ms/op
Iteration  21: 4.252 ms/op
Iteration  22: 4.251 ms/op
Iteration  23: 4.254 ms/op
Iteration  24: 4.251 ms/op
Iteration  25: 4.250 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  4.291 ±(99.9%) 0.142 ms/op [Average]
  (min, avg, max) = (4.250, 4.291, 5.202), stdev = 0.190
  CI (99.9%): [4.148, 4.433] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = uniform, strategy = lz4)

# Run progress: 81.82% complete, ETA 00:01:15
# Fork: 1 of 1
# Warmup Iteration   1: 21.462 ms/op
# Warmup Iteration   2: 11.889 ms/op
# Warmup Iteration   3: 12.179 ms/op
# Warmup Iteration   4: 12.028 ms/op
# Warmup Iteration   5: 11.867 ms/op
# Warmup Iteration   6: 12.109 ms/op
# Warmup Iteration   7: 12.159 ms/op
# Warmup Iteration   8: 11.864 ms/op
# Warmup Iteration   9: 12.003 ms/op
# Warmup Iteration  10: 11.864 ms/op
Iteration   1: 11.865 ms/op
Iteration   2: 11.994 ms/op
Iteration   3: 12.006 ms/op
Iteration   4: 11.880 ms/op
Iteration   5: 11.892 ms/op
Iteration   6: 11.862 ms/op
Iteration   7: 11.866 ms/op
Iteration   8: 11.882 ms/op
Iteration   9: 11.859 ms/op
Iteration  10: 11.863 ms/op
Iteration  11: 12.031 ms/op
Iteration  12: 11.866 ms/op
Iteration  13: 11.866 ms/op
Iteration  14: 11.868 ms/op
Iteration  15: 12.033 ms/op
Iteration  16: 11.866 ms/op
Iteration  17: 11.900 ms/op
Iteration  18: 11.908 ms/op
Iteration  19: 11.866 ms/op
Iteration  20: 11.866 ms/op
Iteration  21: 11.865 ms/op
Iteration  22: 11.863 ms/op
Iteration  23: 11.886 ms/op
Iteration  24: 11.869 ms/op
Iteration  25: 12.166 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  11.908 ±(99.9%) 0.058 ms/op [Average]
  (min, avg, max) = (11.859, 11.908, 12.166), stdev = 0.077
  CI (99.9%): [11.850, 11.965] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = uniform, strategy = none)

# Run progress: 90.91% complete, ETA 00:00:37
# Fork: 1 of 1
# Warmup Iteration   1: 4.686 ms/op
# Warmup Iteration   2: 4.256 ms/op
# Warmup Iteration   3: 4.250 ms/op
# Warmup Iteration   4: 4.251 ms/op
# Warmup Iteration   5: 4.252 ms/op
# Warmup Iteration   6: 4.251 ms/op
# Warmup Iteration   7: 4.252 ms/op
# Warmup Iteration   8: 4.252 ms/op
# Warmup Iteration   9: 4.252 ms/op
# Warmup Iteration  10: 4.252 ms/op
Iteration   1: 4.252 ms/op
Iteration   2: 4.252 ms/op
Iteration   3: 4.252 ms/op
Iteration   4: 4.252 ms/op
Iteration   5: 4.252 ms/op
Iteration   6: 4.251 ms/op
Iteration   7: 4.252 ms/op
Iteration   8: 4.328 ms/op
Iteration   9: 4.734 ms/op
Iteration  10: 4.252 ms/op
Iteration  11: 4.256 ms/op
Iteration  12: 4.252 ms/op
Iteration  13: 4.253 ms/op
Iteration  14: 4.254 ms/op
Iteration  15: 4.252 ms/op
Iteration  16: 4.252 ms/op
Iteration  17: 4.253 ms/op
Iteration  18: 4.252 ms/op
Iteration  19: 4.251 ms/op
Iteration  20: 4.251 ms/op
Iteration  21: 4.252 ms/op
Iteration  22: 4.251 ms/op
Iteration  23: 4.252 ms/op
Iteration  24: 4.251 ms/op
Iteration  25: 4.254 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  4.275 ±(99.9%) 0.073 ms/op [Average]
  (min, avg, max) = (4.251, 4.275, 4.734), stdev = 0.097
  CI (99.9%): [4.202, 4.347] (assumes normal distribution)


# Run complete. Total time: 00:06:52

Benchmark                                      (dirPath)      (file)  (rowsPerSegment)  (schema)  (strategy)  Mode  Cnt       Score       Error  Units
FilterPartitionBenchmark.timeFilterNone              N/A         N/A            750000     basic         N/A  avgt   25  128822.415 ± 18087.790  us/op
FloatCompressionBenchmark.readContinuous  floatCompress/   enumerate               N/A       N/A         lz4  avgt   25      12.831 ±     0.043  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/   enumerate               N/A       N/A        none  avgt   25       4.267 ±     0.054  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/     zipfLow               N/A       N/A         lz4  avgt   25      19.563 ±     0.039  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/     zipfLow               N/A       N/A        none  avgt   25       4.267 ±     0.037  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/    zipfHigh               N/A       N/A         lz4  avgt   25      15.090 ±     0.067  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/    zipfHigh               N/A       N/A        none  avgt   25       4.247 ±     0.002  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/  sequential               N/A       N/A         lz4  avgt   25      13.748 ±     0.177  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/  sequential               N/A       N/A        none  avgt   25       4.291 ±     0.142  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/     uniform               N/A       N/A         lz4  avgt   25      11.908 ±     0.058  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/     uniform               N/A       N/A        none  avgt   25       4.275 ±     0.073  ms/op

Benchmark result is saved to exp-LOOP-out/druid_benchmarks_original_benchmark_FloatCompressionBenchmark_readContinuous_loop_trial4.csv
