# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FilterPartitionBenchmark.timeFilterNone
# Parameters: (rowsPerSegment = 750000, schema = basic)

# Run progress: 0.00% complete, ETA 00:06:25
# Fork: 1 of 1
# Warmup Iteration   1: 121537.498 us/op
# Warmup Iteration   2: 115867.049 us/op
# Warmup Iteration   3: 144551.500 us/op
# Warmup Iteration   4: 116158.600 us/op
# Warmup Iteration   5: 115289.908 us/op
# Warmup Iteration   6: 115271.848 us/op
# Warmup Iteration   7: 182079.944 us/op
# Warmup Iteration   8: 115559.282 us/op
# Warmup Iteration   9: 115453.936 us/op
# Warmup Iteration  10: 115545.870 us/op
Iteration   1: 132426.156 us/op
Iteration   2: 115486.232 us/op
Iteration   3: 115549.650 us/op
Iteration   4: 115464.140 us/op
Iteration   5: 208544.849 us/op
Iteration   6: 129717.363 us/op
Iteration   7: 115996.652 us/op
Iteration   8: 115911.279 us/op
Iteration   9: 115925.964 us/op
Iteration  10: 144119.405 us/op
Iteration  11: 135294.525 us/op
Iteration  12: 115889.359 us/op
Iteration  13: 115929.965 us/op
Iteration  14: 115874.790 us/op
Iteration  15: 167177.969 us/op
Iteration  16: 131000.695 us/op
Iteration  17: 116087.515 us/op
Iteration  18: 116064.580 us/op
Iteration  19: 116093.000 us/op
Iteration  20: 116172.827 us/op
Iteration  21: 137753.987 us/op
Iteration  22: 128537.731 us/op
Iteration  23: 115559.020 us/op
Iteration  24: 115587.748 us/op
Iteration  25: 115617.635 us/op


Result "io.druid.benchmark.FilterPartitionBenchmark.timeFilterNone":
  126711.321 ±(99.9%) 15885.377 us/op [Average]
  (min, avg, max) = (115464.140, 126711.321, 208544.849), stdev = 21206.524
  CI (99.9%): [110825.944, 142596.699] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = enumerate, strategy = lz4)

# Run progress: 9.09% complete, ETA 00:09:28
# Fork: 1 of 1
# Warmup Iteration   1: 21.955 ms/op
# Warmup Iteration   2: 12.822 ms/op
# Warmup Iteration   3: 12.983 ms/op
# Warmup Iteration   4: 12.801 ms/op
# Warmup Iteration   5: 13.020 ms/op
# Warmup Iteration   6: 12.967 ms/op
# Warmup Iteration   7: 12.793 ms/op
# Warmup Iteration   8: 12.980 ms/op
# Warmup Iteration   9: 13.081 ms/op
# Warmup Iteration  10: 12.793 ms/op
Iteration   1: 12.818 ms/op
Iteration   2: 12.796 ms/op
Iteration   3: 12.796 ms/op
Iteration   4: 12.792 ms/op
Iteration   5: 12.798 ms/op
Iteration   6: 12.792 ms/op
Iteration   7: 12.793 ms/op
Iteration   8: 12.788 ms/op
Iteration   9: 12.836 ms/op
Iteration  10: 12.818 ms/op
Iteration  11: 12.791 ms/op
Iteration  12: 12.803 ms/op
Iteration  13: 12.798 ms/op
Iteration  14: 12.890 ms/op
Iteration  15: 12.789 ms/op
Iteration  16: 12.791 ms/op
Iteration  17: 12.888 ms/op
Iteration  18: 12.851 ms/op
Iteration  19: 12.791 ms/op
Iteration  20: 12.786 ms/op
Iteration  21: 12.790 ms/op
Iteration  22: 12.791 ms/op
Iteration  23: 12.801 ms/op
Iteration  24: 12.973 ms/op
Iteration  25: 12.972 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  12.821 ±(99.9%) 0.040 ms/op [Average]
  (min, avg, max) = (12.786, 12.821, 12.973), stdev = 0.054
  CI (99.9%): [12.781, 12.862] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = enumerate, strategy = none)

# Run progress: 18.18% complete, ETA 00:06:56
# Fork: 1 of 1
# Warmup Iteration   1: 5.828 ms/op
# Warmup Iteration   2: 4.257 ms/op
# Warmup Iteration   3: 4.251 ms/op
# Warmup Iteration   4: 4.252 ms/op
# Warmup Iteration   5: 4.250 ms/op
# Warmup Iteration   6: 4.253 ms/op
# Warmup Iteration   7: 4.252 ms/op
# Warmup Iteration   8: 4.252 ms/op
# Warmup Iteration   9: 4.251 ms/op
# Warmup Iteration  10: 4.256 ms/op
Iteration   1: 4.251 ms/op
Iteration   2: 4.250 ms/op
Iteration   3: 4.251 ms/op
Iteration   4: 4.255 ms/op
Iteration   5: 4.258 ms/op
Iteration   6: 4.250 ms/op
Iteration   7: 4.251 ms/op
Iteration   8: 4.252 ms/op
Iteration   9: 4.252 ms/op
Iteration  10: 4.250 ms/op
Iteration  11: 4.250 ms/op
Iteration  12: 4.250 ms/op
Iteration  13: 4.255 ms/op
Iteration  14: 4.254 ms/op
Iteration  15: 4.249 ms/op
Iteration  16: 4.251 ms/op
Iteration  17: 4.252 ms/op
Iteration  18: 4.250 ms/op
Iteration  19: 4.249 ms/op
Iteration  20: 4.249 ms/op
Iteration  21: 4.249 ms/op
Iteration  22: 4.249 ms/op
Iteration  23: 4.253 ms/op
Iteration  24: 4.250 ms/op
Iteration  25: 4.251 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  4.251 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (4.249, 4.251, 4.258), stdev = 0.002
  CI (99.9%): [4.250, 4.253] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = zipfLow, strategy = lz4)

# Run progress: 27.27% complete, ETA 00:05:41
# Fork: 1 of 1
# Warmup Iteration   1: 35.997 ms/op
# Warmup Iteration   2: 23.182 ms/op
# Warmup Iteration   3: 20.974 ms/op
# Warmup Iteration   4: 19.552 ms/op
# Warmup Iteration   5: 19.848 ms/op
# Warmup Iteration   6: 19.551 ms/op
# Warmup Iteration   7: 19.564 ms/op
# Warmup Iteration   8: 19.582 ms/op
# Warmup Iteration   9: 19.544 ms/op
# Warmup Iteration  10: 19.541 ms/op
Iteration   1: 19.847 ms/op
Iteration   2: 19.535 ms/op
Iteration   3: 19.825 ms/op
Iteration   4: 19.538 ms/op
Iteration   5: 19.546 ms/op
Iteration   6: 19.543 ms/op
Iteration   7: 19.540 ms/op
Iteration   8: 19.582 ms/op
Iteration   9: 19.594 ms/op
Iteration  10: 19.720 ms/op
Iteration  11: 19.652 ms/op
Iteration  12: 19.537 ms/op
Iteration  13: 19.553 ms/op
Iteration  14: 19.842 ms/op
Iteration  15: 19.542 ms/op
Iteration  16: 19.842 ms/op
Iteration  17: 19.556 ms/op
Iteration  18: 19.537 ms/op
Iteration  19: 19.547 ms/op
Iteration  20: 19.541 ms/op
Iteration  21: 19.562 ms/op
Iteration  22: 19.625 ms/op
Iteration  23: 19.836 ms/op
Iteration  24: 19.681 ms/op
Iteration  25: 19.535 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  19.626 ±(99.9%) 0.089 ms/op [Average]
  (min, avg, max) = (19.535, 19.626, 19.847), stdev = 0.119
  CI (99.9%): [19.537, 19.715] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = zipfLow, strategy = none)

# Run progress: 36.36% complete, ETA 00:04:46
# Fork: 1 of 1
# Warmup Iteration   1: 5.829 ms/op
# Warmup Iteration   2: 4.252 ms/op
# Warmup Iteration   3: 4.251 ms/op
# Warmup Iteration   4: 4.250 ms/op
# Warmup Iteration   5: 4.249 ms/op
# Warmup Iteration   6: 4.248 ms/op
# Warmup Iteration   7: 4.248 ms/op
# Warmup Iteration   8: 4.249 ms/op
# Warmup Iteration   9: 4.248 ms/op
# Warmup Iteration  10: 4.249 ms/op
Iteration   1: 4.248 ms/op
Iteration   2: 4.248 ms/op
Iteration   3: 4.248 ms/op
Iteration   4: 4.248 ms/op
Iteration   5: 4.249 ms/op
Iteration   6: 4.251 ms/op
Iteration   7: 4.248 ms/op
Iteration   8: 4.248 ms/op
Iteration   9: 4.248 ms/op
Iteration  10: 4.249 ms/op
Iteration  11: 4.247 ms/op
Iteration  12: 4.248 ms/op
Iteration  13: 4.248 ms/op
Iteration  14: 4.252 ms/op
Iteration  15: 4.247 ms/op
Iteration  16: 4.248 ms/op
Iteration  17: 4.247 ms/op
Iteration  18: 4.248 ms/op
Iteration  19: 4.421 ms/op
Iteration  20: 4.250 ms/op
Iteration  21: 4.249 ms/op
Iteration  22: 4.249 ms/op
Iteration  23: 4.249 ms/op
Iteration  24: 4.251 ms/op
Iteration  25: 4.267 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  4.256 ±(99.9%) 0.026 ms/op [Average]
  (min, avg, max) = (4.247, 4.256, 4.421), stdev = 0.035
  CI (99.9%): [4.230, 4.282] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = zipfHigh, strategy = lz4)

# Run progress: 45.45% complete, ETA 00:03:59
# Fork: 1 of 1
# Warmup Iteration   1: 26.557 ms/op
# Warmup Iteration   2: 15.211 ms/op
# Warmup Iteration   3: 15.046 ms/op
# Warmup Iteration   4: 15.089 ms/op
# Warmup Iteration   5: 15.067 ms/op
# Warmup Iteration   6: 15.038 ms/op
# Warmup Iteration   7: 15.049 ms/op
# Warmup Iteration   8: 15.040 ms/op
# Warmup Iteration   9: 15.034 ms/op
# Warmup Iteration  10: 15.344 ms/op
Iteration   1: 15.102 ms/op
Iteration   2: 15.037 ms/op
Iteration   3: 15.237 ms/op
Iteration   4: 15.041 ms/op
Iteration   5: 15.036 ms/op
Iteration   6: 15.042 ms/op
Iteration   7: 15.032 ms/op
Iteration   8: 15.039 ms/op
Iteration   9: 15.035 ms/op
Iteration  10: 15.067 ms/op
Iteration  11: 15.258 ms/op
Iteration  12: 15.039 ms/op
Iteration  13: 15.207 ms/op
Iteration  14: 15.213 ms/op
Iteration  15: 15.058 ms/op
Iteration  16: 15.198 ms/op
Iteration  17: 15.047 ms/op
Iteration  18: 15.214 ms/op
Iteration  19: 15.328 ms/op
Iteration  20: 15.059 ms/op
Iteration  21: 15.209 ms/op
Iteration  22: 15.035 ms/op
Iteration  23: 15.051 ms/op
Iteration  24: 15.063 ms/op
Iteration  25: 15.111 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  15.110 ±(99.9%) 0.068 ms/op [Average]
  (min, avg, max) = (15.032, 15.110, 15.328), stdev = 0.091
  CI (99.9%): [15.042, 15.178] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = zipfHigh, strategy = none)

# Run progress: 54.55% complete, ETA 00:03:15
# Fork: 1 of 1
# Warmup Iteration   1: 5.905 ms/op
# Warmup Iteration   2: 4.277 ms/op
# Warmup Iteration   3: 4.246 ms/op
# Warmup Iteration   4: 4.250 ms/op
# Warmup Iteration   5: 5.196 ms/op
# Warmup Iteration   6: 4.246 ms/op
# Warmup Iteration   7: 4.247 ms/op
# Warmup Iteration   8: 4.248 ms/op
# Warmup Iteration   9: 4.252 ms/op
# Warmup Iteration  10: 4.246 ms/op
Iteration   1: 4.247 ms/op
Iteration   2: 4.246 ms/op
Iteration   3: 4.246 ms/op
Iteration   4: 4.246 ms/op
Iteration   5: 4.250 ms/op
Iteration   6: 4.247 ms/op
Iteration   7: 4.246 ms/op
Iteration   8: 4.246 ms/op
Iteration   9: 4.248 ms/op
Iteration  10: 4.247 ms/op
Iteration  11: 4.247 ms/op
Iteration  12: 4.246 ms/op
Iteration  13: 4.247 ms/op
Iteration  14: 4.252 ms/op
Iteration  15: 4.246 ms/op
Iteration  16: 4.246 ms/op
Iteration  17: 4.253 ms/op
Iteration  18: 4.245 ms/op
Iteration  19: 4.246 ms/op
Iteration  20: 4.245 ms/op
Iteration  21: 4.246 ms/op
Iteration  22: 4.247 ms/op
Iteration  23: 4.248 ms/op
Iteration  24: 4.243 ms/op
Iteration  25: 4.244 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  4.247 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (4.243, 4.247, 4.253), stdev = 0.002
  CI (99.9%): [4.245, 4.248] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = sequential, strategy = lz4)

# Run progress: 63.64% complete, ETA 00:02:34
# Fork: 1 of 1
# Warmup Iteration   1: 22.276 ms/op
# Warmup Iteration   2: 13.768 ms/op
# Warmup Iteration   3: 13.774 ms/op
# Warmup Iteration   4: 13.723 ms/op
# Warmup Iteration   5: 13.640 ms/op
# Warmup Iteration   6: 13.638 ms/op
# Warmup Iteration   7: 13.796 ms/op
# Warmup Iteration   8: 13.658 ms/op
# Warmup Iteration   9: 13.658 ms/op
# Warmup Iteration  10: 13.634 ms/op
Iteration   1: 13.635 ms/op
Iteration   2: 13.668 ms/op
Iteration   3: 13.733 ms/op
Iteration   4: 13.600 ms/op
Iteration   5: 13.854 ms/op
Iteration   6: 13.670 ms/op
Iteration   7: 13.669 ms/op
Iteration   8: 13.669 ms/op
Iteration   9: 13.643 ms/op
Iteration  10: 13.670 ms/op
Iteration  11: 13.694 ms/op
Iteration  12: 13.645 ms/op
Iteration  13: 13.647 ms/op
Iteration  14: 13.757 ms/op
Iteration  15: 13.643 ms/op
Iteration  16: 13.600 ms/op
Iteration  17: 13.619 ms/op
Iteration  18: 13.601 ms/op
Iteration  19: 13.900 ms/op
Iteration  20: 13.603 ms/op
Iteration  21: 13.920 ms/op
Iteration  22: 13.645 ms/op
Iteration  23: 13.838 ms/op
Iteration  24: 13.784 ms/op
Iteration  25: 13.750 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  13.698 ±(99.9%) 0.071 ms/op [Average]
  (min, avg, max) = (13.600, 13.698, 13.920), stdev = 0.095
  CI (99.9%): [13.627, 13.769] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = sequential, strategy = none)

# Run progress: 72.73% complete, ETA 00:01:54
# Fork: 1 of 1
# Warmup Iteration   1: 5.569 ms/op
# Warmup Iteration   2: 4.254 ms/op
# Warmup Iteration   3: 4.249 ms/op
# Warmup Iteration   4: 4.250 ms/op
# Warmup Iteration   5: 4.249 ms/op
# Warmup Iteration   6: 4.249 ms/op
# Warmup Iteration   7: 4.249 ms/op
# Warmup Iteration   8: 4.249 ms/op
# Warmup Iteration   9: 4.248 ms/op
# Warmup Iteration  10: 4.249 ms/op
Iteration   1: 4.249 ms/op
Iteration   2: 4.250 ms/op
Iteration   3: 4.251 ms/op
Iteration   4: 4.249 ms/op
Iteration   5: 4.249 ms/op
Iteration   6: 4.249 ms/op
Iteration   7: 4.248 ms/op
Iteration   8: 4.249 ms/op
Iteration   9: 4.249 ms/op
Iteration  10: 4.249 ms/op
Iteration  11: 4.249 ms/op
Iteration  12: 4.249 ms/op
Iteration  13: 4.249 ms/op
Iteration  14: 4.252 ms/op
Iteration  15: 4.248 ms/op
Iteration  16: 4.250 ms/op
Iteration  17: 4.248 ms/op
Iteration  18: 4.249 ms/op
Iteration  19: 4.247 ms/op
Iteration  20: 4.247 ms/op
Iteration  21: 4.249 ms/op
Iteration  22: 4.249 ms/op
Iteration  23: 4.249 ms/op
Iteration  24: 4.248 ms/op
Iteration  25: 4.248 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  4.249 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (4.247, 4.249, 4.252), stdev = 0.001
  CI (99.9%): [4.248, 4.250] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = uniform, strategy = lz4)

# Run progress: 81.82% complete, ETA 00:01:15
# Fork: 1 of 1
# Warmup Iteration   1: 24.748 ms/op
# Warmup Iteration   2: 12.293 ms/op
# Warmup Iteration   3: 11.874 ms/op
# Warmup Iteration   4: 11.885 ms/op
# Warmup Iteration   5: 12.013 ms/op
# Warmup Iteration   6: 11.864 ms/op
# Warmup Iteration   7: 12.148 ms/op
# Warmup Iteration   8: 11.862 ms/op
# Warmup Iteration   9: 12.041 ms/op
# Warmup Iteration  10: 12.010 ms/op
Iteration   1: 11.860 ms/op
Iteration   2: 11.913 ms/op
Iteration   3: 11.873 ms/op
Iteration   4: 11.892 ms/op
Iteration   5: 11.858 ms/op
Iteration   6: 11.883 ms/op
Iteration   7: 11.980 ms/op
Iteration   8: 11.862 ms/op
Iteration   9: 12.159 ms/op
Iteration  10: 11.864 ms/op
Iteration  11: 12.077 ms/op
Iteration  12: 12.042 ms/op
Iteration  13: 11.857 ms/op
Iteration  14: 11.984 ms/op
Iteration  15: 11.869 ms/op
Iteration  16: 12.040 ms/op
Iteration  17: 12.031 ms/op
Iteration  18: 11.972 ms/op
Iteration  19: 11.865 ms/op
Iteration  20: 12.034 ms/op
Iteration  21: 11.898 ms/op
Iteration  22: 11.934 ms/op
Iteration  23: 11.859 ms/op
Iteration  24: 11.857 ms/op
Iteration  25: 11.867 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  11.933 ±(99.9%) 0.065 ms/op [Average]
  (min, avg, max) = (11.857, 11.933, 12.159), stdev = 0.087
  CI (99.9%): [11.868, 11.998] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = uniform, strategy = none)

# Run progress: 90.91% complete, ETA 00:00:37
# Fork: 1 of 1
# Warmup Iteration   1: 6.191 ms/op
# Warmup Iteration   2: 4.259 ms/op
# Warmup Iteration   3: 4.252 ms/op
# Warmup Iteration   4: 4.253 ms/op
# Warmup Iteration   5: 4.252 ms/op
# Warmup Iteration   6: 4.253 ms/op
# Warmup Iteration   7: 4.252 ms/op
# Warmup Iteration   8: 4.251 ms/op
# Warmup Iteration   9: 4.251 ms/op
# Warmup Iteration  10: 4.252 ms/op
Iteration   1: 4.252 ms/op
Iteration   2: 4.251 ms/op
Iteration   3: 4.252 ms/op
Iteration   4: 4.251 ms/op
Iteration   5: 4.252 ms/op
Iteration   6: 4.250 ms/op
Iteration   7: 4.252 ms/op
Iteration   8: 4.251 ms/op
Iteration   9: 4.250 ms/op
Iteration  10: 4.252 ms/op
Iteration  11: 4.252 ms/op
Iteration  12: 4.254 ms/op
Iteration  13: 4.251 ms/op
Iteration  14: 4.255 ms/op
Iteration  15: 4.251 ms/op
Iteration  16: 4.252 ms/op
Iteration  17: 4.252 ms/op
Iteration  18: 4.251 ms/op
Iteration  19: 4.254 ms/op
Iteration  20: 4.251 ms/op
Iteration  21: 4.251 ms/op
Iteration  22: 4.251 ms/op
Iteration  23: 4.251 ms/op
Iteration  24: 4.252 ms/op
Iteration  25: 4.251 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  4.252 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (4.250, 4.252, 4.255), stdev = 0.001
  CI (99.9%): [4.251, 4.253] (assumes normal distribution)


# Run complete. Total time: 00:06:53

Benchmark                                      (dirPath)      (file)  (rowsPerSegment)  (schema)  (strategy)  Mode  Cnt       Score       Error  Units
FilterPartitionBenchmark.timeFilterNone              N/A         N/A            750000     basic         N/A  avgt   25  126711.321 ± 15885.377  us/op
FloatCompressionBenchmark.readContinuous  floatCompress/   enumerate               N/A       N/A         lz4  avgt   25      12.821 ±     0.040  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/   enumerate               N/A       N/A        none  avgt   25       4.251 ±     0.002  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/     zipfLow               N/A       N/A         lz4  avgt   25      19.626 ±     0.089  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/     zipfLow               N/A       N/A        none  avgt   25       4.256 ±     0.026  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/    zipfHigh               N/A       N/A         lz4  avgt   25      15.110 ±     0.068  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/    zipfHigh               N/A       N/A        none  avgt   25       4.247 ±     0.002  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/  sequential               N/A       N/A         lz4  avgt   25      13.698 ±     0.071  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/  sequential               N/A       N/A        none  avgt   25       4.249 ±     0.001  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/     uniform               N/A       N/A         lz4  avgt   25      11.933 ±     0.065  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/     uniform               N/A       N/A        none  avgt   25       4.252 ±     0.001  ms/op

Benchmark result is saved to exp-LOOP-out/druid_benchmarks_original_benchmark_FloatCompressionBenchmark_readContinuous_loop_trial1.csv
