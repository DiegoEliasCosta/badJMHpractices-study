# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.charArray
# Parameters: (nanos = 1000)

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 78.611 ns/op
# Warmup Iteration   2: 65.850 ns/op
# Warmup Iteration   3: 66.905 ns/op
# Warmup Iteration   4: 63.901 ns/op
# Warmup Iteration   5: 63.998 ns/op
Iteration   1: 63.930 ns/op
Iteration   2: 63.888 ns/op
Iteration   3: 63.879 ns/op
Iteration   4: 63.905 ns/op
Iteration   5: 63.820 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.charArray":
  63.884 ±(99.9%) 0.158 ns/op [Average]
  (min, avg, max) = (63.820, 63.884, 63.930), stdev = 0.041
  CI (99.9%): [63.727, 64.042] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.charArray
# Parameters: (nanos = 1000000)

# Run progress: 16.67% complete, ETA 00:00:50
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 56.650 ns/op
# Warmup Iteration   2: 48.843 ns/op
# Warmup Iteration   3: 48.822 ns/op
# Warmup Iteration   4: 60.828 ns/op
# Warmup Iteration   5: 58.007 ns/op
Iteration   1: 51.469 ns/op
Iteration   2: 49.334 ns/op
Iteration   3: 49.321 ns/op
Iteration   4: 49.263 ns/op
Iteration   5: 49.262 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.charArray":
  49.730 ±(99.9%) 3.747 ns/op [Average]
  (min, avg, max) = (49.262, 49.730, 51.469), stdev = 0.973
  CI (99.9%): [45.982, 53.477] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.charArray
# Parameters: (nanos = 100000000)

# Run progress: 33.33% complete, ETA 00:00:40
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 70.181 ns/op
# Warmup Iteration   2: 54.115 ns/op
# Warmup Iteration   3: 54.044 ns/op
# Warmup Iteration   4: 54.100 ns/op
# Warmup Iteration   5: 54.191 ns/op
Iteration   1: 54.369 ns/op
Iteration   2: 54.448 ns/op
Iteration   3: 54.532 ns/op
Iteration   4: 54.218 ns/op
Iteration   5: 54.413 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.charArray":
  54.396 ±(99.9%) 0.448 ns/op [Average]
  (min, avg, max) = (54.218, 54.396, 54.532), stdev = 0.116
  CI (99.9%): [53.948, 54.844] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.insert
# Parameters: (nanos = 1000)

# Run progress: 50.00% complete, ETA 00:00:30
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 33.130 ns/op
# Warmup Iteration   2: 28.668 ns/op
# Warmup Iteration   3: 27.914 ns/op
# Warmup Iteration   4: 27.943 ns/op
# Warmup Iteration   5: 27.926 ns/op
Iteration   1: 27.400 ns/op
Iteration   2: 27.395 ns/op
Iteration   3: 27.408 ns/op
Iteration   4: 27.415 ns/op
Iteration   5: 27.402 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.insert":
  27.404 ±(99.9%) 0.030 ns/op [Average]
  (min, avg, max) = (27.395, 27.404, 27.415), stdev = 0.008
  CI (99.9%): [27.374, 27.434] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.insert
# Parameters: (nanos = 1000000)

# Run progress: 66.67% complete, ETA 00:00:20
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 36.924 ns/op
# Warmup Iteration   2: 36.899 ns/op
# Warmup Iteration   3: 37.189 ns/op
# Warmup Iteration   4: 36.912 ns/op
# Warmup Iteration   5: 36.908 ns/op
Iteration   1: 37.668 ns/op
Iteration   2: 37.211 ns/op
Iteration   3: 37.241 ns/op
Iteration   4: 37.226 ns/op
Iteration   5: 37.215 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.insert":
  37.312 ±(99.9%) 0.768 ns/op [Average]
  (min, avg, max) = (37.211, 37.312, 37.668), stdev = 0.200
  CI (99.9%): [36.544, 38.080] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.insert
# Parameters: (nanos = 100000000)

# Run progress: 83.33% complete, ETA 00:00:10
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 27.138 ns/op
# Warmup Iteration   2: 27.315 ns/op
# Warmup Iteration   3: 27.035 ns/op
# Warmup Iteration   4: 27.025 ns/op
# Warmup Iteration   5: 27.035 ns/op
Iteration   1: 27.142 ns/op
Iteration   2: 27.031 ns/op
Iteration   3: 27.040 ns/op
Iteration   4: 27.032 ns/op
Iteration   5: 27.038 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.insert":
  27.057 ±(99.9%) 0.185 ns/op [Average]
  (min, avg, max) = (27.031, 27.057, 27.142), stdev = 0.048
  CI (99.9%): [26.872, 27.241] (assumes normal distribution)


# Run complete. Total time: 00:01:00

Benchmark                    (nanos)  Mode  Cnt   Score   Error  Units
AddPaddingZeros.charArray       1000  avgt    5  63.884 ± 0.158  ns/op
AddPaddingZeros.charArray    1000000  avgt    5  49.730 ± 3.747  ns/op
AddPaddingZeros.charArray  100000000  avgt    5  54.396 ± 0.448  ns/op
AddPaddingZeros.insert          1000  avgt    5  27.404 ± 0.030  ns/op
AddPaddingZeros.insert       1000000  avgt    5  37.312 ± 0.768  ns/op
AddPaddingZeros.insert     100000000  avgt    5  27.057 ± 0.185  ns/op

Benchmark result is saved to exp-FORK-out/pgdbc_benchmarks_original_postgresql_benchmark_time_AddPaddingZeros_fork_trial7.csv
