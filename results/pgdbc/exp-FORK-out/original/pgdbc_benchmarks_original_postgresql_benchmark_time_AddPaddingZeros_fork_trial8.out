# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.charArray
# Parameters: (nanos = 1000)

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 79.068 ns/op
# Warmup Iteration   2: 68.786 ns/op
# Warmup Iteration   3: 66.315 ns/op
# Warmup Iteration   4: 63.983 ns/op
# Warmup Iteration   5: 70.404 ns/op
Iteration   1: 63.677 ns/op
Iteration   2: 63.801 ns/op
Iteration   3: 63.788 ns/op
Iteration   4: 63.749 ns/op
Iteration   5: 63.793 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.charArray":
  63.762 ±(99.9%) 0.198 ns/op [Average]
  (min, avg, max) = (63.677, 63.762, 63.801), stdev = 0.051
  CI (99.9%): [63.563, 63.960] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.charArray
# Parameters: (nanos = 1000000)

# Run progress: 16.67% complete, ETA 00:00:50
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 55.207 ns/op
# Warmup Iteration   2: 49.146 ns/op
# Warmup Iteration   3: 48.771 ns/op
# Warmup Iteration   4: 48.958 ns/op
# Warmup Iteration   5: 48.875 ns/op
Iteration   1: 48.887 ns/op
Iteration   2: 48.750 ns/op
Iteration   3: 48.984 ns/op
Iteration   4: 48.741 ns/op
Iteration   5: 48.793 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.charArray":
  48.831 ±(99.9%) 0.398 ns/op [Average]
  (min, avg, max) = (48.741, 48.831, 48.984), stdev = 0.103
  CI (99.9%): [48.433, 49.230] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.charArray
# Parameters: (nanos = 100000000)

# Run progress: 33.33% complete, ETA 00:00:40
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 53.816 ns/op
# Warmup Iteration   2: 53.730 ns/op
# Warmup Iteration   3: 53.745 ns/op
# Warmup Iteration   4: 53.813 ns/op
# Warmup Iteration   5: 53.925 ns/op
Iteration   1: 53.965 ns/op
Iteration   2: 53.967 ns/op
Iteration   3: 54.095 ns/op
Iteration   4: 54.140 ns/op
Iteration   5: 54.108 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.charArray":
  54.055 ±(99.9%) 0.319 ns/op [Average]
  (min, avg, max) = (53.965, 54.055, 54.140), stdev = 0.083
  CI (99.9%): [53.736, 54.374] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.insert
# Parameters: (nanos = 1000)

# Run progress: 50.00% complete, ETA 00:00:30
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 33.311 ns/op
# Warmup Iteration   2: 28.473 ns/op
# Warmup Iteration   3: 27.323 ns/op
# Warmup Iteration   4: 27.309 ns/op
# Warmup Iteration   5: 27.315 ns/op
Iteration   1: 27.315 ns/op
Iteration   2: 27.307 ns/op
Iteration   3: 27.312 ns/op
Iteration   4: 27.311 ns/op
Iteration   5: 27.324 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.insert":
  27.314 ±(99.9%) 0.024 ns/op [Average]
  (min, avg, max) = (27.307, 27.314, 27.324), stdev = 0.006
  CI (99.9%): [27.290, 27.338] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.insert
# Parameters: (nanos = 1000000)

# Run progress: 66.67% complete, ETA 00:00:20
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 37.210 ns/op
# Warmup Iteration   2: 37.193 ns/op
# Warmup Iteration   3: 37.181 ns/op
# Warmup Iteration   4: 37.310 ns/op
# Warmup Iteration   5: 37.136 ns/op
Iteration   1: 37.270 ns/op
Iteration   2: 37.530 ns/op
Iteration   3: 37.364 ns/op
Iteration   4: 37.599 ns/op
Iteration   5: 37.546 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.insert":
  37.462 ±(99.9%) 0.534 ns/op [Average]
  (min, avg, max) = (37.270, 37.462, 37.599), stdev = 0.139
  CI (99.9%): [36.927, 37.996] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.insert
# Parameters: (nanos = 100000000)

# Run progress: 83.33% complete, ETA 00:00:10
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 27.182 ns/op
# Warmup Iteration   2: 27.067 ns/op
# Warmup Iteration   3: 27.064 ns/op
# Warmup Iteration   4: 27.069 ns/op
# Warmup Iteration   5: 27.267 ns/op
Iteration   1: 27.064 ns/op
Iteration   2: 27.053 ns/op
Iteration   3: 27.055 ns/op
Iteration   4: 27.058 ns/op
Iteration   5: 27.055 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.insert":
  27.057 ±(99.9%) 0.017 ns/op [Average]
  (min, avg, max) = (27.053, 27.057, 27.064), stdev = 0.004
  CI (99.9%): [27.040, 27.074] (assumes normal distribution)


# Run complete. Total time: 00:01:00

Benchmark                    (nanos)  Mode  Cnt   Score   Error  Units
AddPaddingZeros.charArray       1000  avgt    5  63.762 ± 0.198  ns/op
AddPaddingZeros.charArray    1000000  avgt    5  48.831 ± 0.398  ns/op
AddPaddingZeros.charArray  100000000  avgt    5  54.055 ± 0.319  ns/op
AddPaddingZeros.insert          1000  avgt    5  27.314 ± 0.024  ns/op
AddPaddingZeros.insert       1000000  avgt    5  37.462 ± 0.534  ns/op
AddPaddingZeros.insert     100000000  avgt    5  27.057 ± 0.017  ns/op

Benchmark result is saved to exp-FORK-out/pgdbc_benchmarks_original_postgresql_benchmark_time_AddPaddingZeros_fork_trial8.csv
