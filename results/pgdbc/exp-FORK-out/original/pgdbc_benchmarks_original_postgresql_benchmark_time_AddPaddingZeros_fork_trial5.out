# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.charArray
# Parameters: (nanos = 1000)

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 78.342 ns/op
# Warmup Iteration   2: 65.867 ns/op
# Warmup Iteration   3: 65.615 ns/op
# Warmup Iteration   4: 69.437 ns/op
# Warmup Iteration   5: 76.827 ns/op
Iteration   1: 63.509 ns/op
Iteration   2: 63.604 ns/op
Iteration   3: 63.560 ns/op
Iteration   4: 63.617 ns/op
Iteration   5: 63.443 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.charArray":
  63.547 ±(99.9%) 0.277 ns/op [Average]
  (min, avg, max) = (63.443, 63.547, 63.617), stdev = 0.072
  CI (99.9%): [63.270, 63.824] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.charArray
# Parameters: (nanos = 1000000)

# Run progress: 16.67% complete, ETA 00:00:50
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 55.705 ns/op
# Warmup Iteration   2: 48.753 ns/op
# Warmup Iteration   3: 48.760 ns/op
# Warmup Iteration   4: 48.843 ns/op
# Warmup Iteration   5: 48.757 ns/op
Iteration   1: 48.880 ns/op
Iteration   2: 48.862 ns/op
Iteration   3: 48.856 ns/op
Iteration   4: 48.821 ns/op
Iteration   5: 48.971 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.charArray":
  48.878 ±(99.9%) 0.217 ns/op [Average]
  (min, avg, max) = (48.821, 48.878, 48.971), stdev = 0.056
  CI (99.9%): [48.661, 49.095] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.charArray
# Parameters: (nanos = 100000000)

# Run progress: 33.33% complete, ETA 00:00:40
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 66.203 ns/op
# Warmup Iteration   2: 54.106 ns/op
# Warmup Iteration   3: 53.678 ns/op
# Warmup Iteration   4: 53.781 ns/op
# Warmup Iteration   5: 53.849 ns/op
Iteration   1: 53.822 ns/op
Iteration   2: 53.910 ns/op
Iteration   3: 54.026 ns/op
Iteration   4: 54.053 ns/op
Iteration   5: 54.069 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.charArray":
  53.976 ±(99.9%) 0.409 ns/op [Average]
  (min, avg, max) = (53.822, 53.976, 54.069), stdev = 0.106
  CI (99.9%): [53.567, 54.385] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.insert
# Parameters: (nanos = 1000)

# Run progress: 50.00% complete, ETA 00:00:30
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 33.072 ns/op
# Warmup Iteration   2: 28.593 ns/op
# Warmup Iteration   3: 27.749 ns/op
# Warmup Iteration   4: 27.737 ns/op
# Warmup Iteration   5: 27.771 ns/op
Iteration   1: 27.443 ns/op
Iteration   2: 27.442 ns/op
Iteration   3: 27.449 ns/op
Iteration   4: 27.437 ns/op
Iteration   5: 27.440 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.insert":
  27.442 ±(99.9%) 0.018 ns/op [Average]
  (min, avg, max) = (27.437, 27.442, 27.449), stdev = 0.005
  CI (99.9%): [27.424, 27.460] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.insert
# Parameters: (nanos = 1000000)

# Run progress: 66.67% complete, ETA 00:00:20
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 37.211 ns/op
# Warmup Iteration   2: 37.218 ns/op
# Warmup Iteration   3: 37.440 ns/op
# Warmup Iteration   4: 37.197 ns/op
# Warmup Iteration   5: 37.185 ns/op
Iteration   1: 37.234 ns/op
Iteration   2: 37.637 ns/op
Iteration   3: 37.575 ns/op
Iteration   4: 37.935 ns/op
Iteration   5: 37.949 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.insert":
  37.666 ±(99.9%) 1.137 ns/op [Average]
  (min, avg, max) = (37.234, 37.666, 37.949), stdev = 0.295
  CI (99.9%): [36.529, 38.803] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.insert
# Parameters: (nanos = 100000000)

# Run progress: 83.33% complete, ETA 00:00:10
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 27.432 ns/op
# Warmup Iteration   2: 27.298 ns/op
# Warmup Iteration   3: 27.279 ns/op
# Warmup Iteration   4: 27.348 ns/op
# Warmup Iteration   5: 27.239 ns/op
Iteration   1: 27.260 ns/op
Iteration   2: 27.303 ns/op
Iteration   3: 27.262 ns/op
Iteration   4: 27.414 ns/op
Iteration   5: 27.312 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.insert":
  27.310 ±(99.9%) 0.242 ns/op [Average]
  (min, avg, max) = (27.260, 27.310, 27.414), stdev = 0.063
  CI (99.9%): [27.069, 27.552] (assumes normal distribution)


# Run complete. Total time: 00:01:00

Benchmark                    (nanos)  Mode  Cnt   Score   Error  Units
AddPaddingZeros.charArray       1000  avgt    5  63.547 ± 0.277  ns/op
AddPaddingZeros.charArray    1000000  avgt    5  48.878 ± 0.217  ns/op
AddPaddingZeros.charArray  100000000  avgt    5  53.976 ± 0.409  ns/op
AddPaddingZeros.insert          1000  avgt    5  27.442 ± 0.018  ns/op
AddPaddingZeros.insert       1000000  avgt    5  37.666 ± 1.137  ns/op
AddPaddingZeros.insert     100000000  avgt    5  27.310 ± 0.242  ns/op

Benchmark result is saved to exp-FORK-out/pgdbc_benchmarks_original_postgresql_benchmark_time_AddPaddingZeros_fork_trial5.csv
