# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.charArray
# Parameters: (nanos = 1000)

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 76.414 ns/op
# Warmup Iteration   2: 64.171 ns/op
# Warmup Iteration   3: 65.522 ns/op
# Warmup Iteration   4: 63.027 ns/op
# Warmup Iteration   5: 62.724 ns/op
Iteration   1: 62.954 ns/op
Iteration   2: 62.963 ns/op
Iteration   3: 62.851 ns/op
Iteration   4: 62.858 ns/op
Iteration   5: 62.745 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.charArray":
  62.874 ±(99.9%) 0.343 ns/op [Average]
  (min, avg, max) = (62.745, 62.874, 62.963), stdev = 0.089
  CI (99.9%): [62.531, 63.218] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.charArray
# Parameters: (nanos = 1000000)

# Run progress: 16.67% complete, ETA 00:00:50
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 54.717 ns/op
# Warmup Iteration   2: 50.168 ns/op
# Warmup Iteration   3: 50.079 ns/op
# Warmup Iteration   4: 50.257 ns/op
# Warmup Iteration   5: 50.096 ns/op
Iteration   1: 50.325 ns/op
Iteration   2: 49.509 ns/op
Iteration   3: 49.488 ns/op
Iteration   4: 49.524 ns/op
Iteration   5: 49.544 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.charArray":
  49.678 ±(99.9%) 1.395 ns/op [Average]
  (min, avg, max) = (49.488, 49.678, 50.325), stdev = 0.362
  CI (99.9%): [48.283, 51.073] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.charArray
# Parameters: (nanos = 100000000)

# Run progress: 33.33% complete, ETA 00:00:40
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 54.489 ns/op
# Warmup Iteration   2: 54.275 ns/op
# Warmup Iteration   3: 54.357 ns/op
# Warmup Iteration   4: 54.397 ns/op
# Warmup Iteration   5: 54.193 ns/op
Iteration   1: 54.323 ns/op
Iteration   2: 54.443 ns/op
Iteration   3: 54.340 ns/op
Iteration   4: 54.259 ns/op
Iteration   5: 54.350 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.charArray":
  54.343 ±(99.9%) 0.255 ns/op [Average]
  (min, avg, max) = (54.259, 54.343, 54.443), stdev = 0.066
  CI (99.9%): [54.088, 54.598] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.insert
# Parameters: (nanos = 1000)

# Run progress: 50.00% complete, ETA 00:00:30
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 32.415 ns/op
# Warmup Iteration   2: 28.580 ns/op
# Warmup Iteration   3: 27.776 ns/op
# Warmup Iteration   4: 28.089 ns/op
# Warmup Iteration   5: 27.776 ns/op
Iteration   1: 27.778 ns/op
Iteration   2: 27.765 ns/op
Iteration   3: 27.785 ns/op
Iteration   4: 27.786 ns/op
Iteration   5: 27.785 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.insert":
  27.780 ±(99.9%) 0.034 ns/op [Average]
  (min, avg, max) = (27.765, 27.780, 27.786), stdev = 0.009
  CI (99.9%): [27.746, 27.814] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.insert
# Parameters: (nanos = 1000000)

# Run progress: 66.67% complete, ETA 00:00:20
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 36.546 ns/op
# Warmup Iteration   2: 36.875 ns/op
# Warmup Iteration   3: 36.674 ns/op
# Warmup Iteration   4: 36.800 ns/op
# Warmup Iteration   5: 36.762 ns/op
Iteration   1: 36.620 ns/op
Iteration   2: 37.198 ns/op
Iteration   3: 37.209 ns/op
Iteration   4: 37.207 ns/op
Iteration   5: 37.245 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.insert":
  37.096 ±(99.9%) 1.026 ns/op [Average]
  (min, avg, max) = (36.620, 37.096, 37.245), stdev = 0.266
  CI (99.9%): [36.069, 38.122] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.insert
# Parameters: (nanos = 100000000)

# Run progress: 83.33% complete, ETA 00:00:10
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 27.200 ns/op
# Warmup Iteration   2: 27.052 ns/op
# Warmup Iteration   3: 27.138 ns/op
# Warmup Iteration   4: 27.176 ns/op
# Warmup Iteration   5: 27.143 ns/op
Iteration   1: 27.125 ns/op
Iteration   2: 27.122 ns/op
Iteration   3: 27.126 ns/op
Iteration   4: 27.129 ns/op
Iteration   5: 27.067 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.insert":
  27.114 ±(99.9%) 0.102 ns/op [Average]
  (min, avg, max) = (27.067, 27.114, 27.129), stdev = 0.027
  CI (99.9%): [27.012, 27.216] (assumes normal distribution)


# Run complete. Total time: 00:01:00

Benchmark                    (nanos)  Mode  Cnt   Score   Error  Units
AddPaddingZeros.charArray       1000  avgt    5  62.874 ± 0.343  ns/op
AddPaddingZeros.charArray    1000000  avgt    5  49.678 ± 1.395  ns/op
AddPaddingZeros.charArray  100000000  avgt    5  54.343 ± 0.255  ns/op
AddPaddingZeros.insert          1000  avgt    5  27.780 ± 0.034  ns/op
AddPaddingZeros.insert       1000000  avgt    5  37.096 ± 1.026  ns/op
AddPaddingZeros.insert     100000000  avgt    5  27.114 ± 0.102  ns/op

Benchmark result is saved to exp-FORK-out/pgdbc_benchmarks_original_postgresql_benchmark_time_AddPaddingZeros_fork_trial9.csv
