# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.charArray
# Parameters: (nanos = 1000)

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 79.158 ns/op
# Warmup Iteration   2: 72.486 ns/op
# Warmup Iteration   3: 391.046 ns/op
# Warmup Iteration   4: 99.757 ns/op
# Warmup Iteration   5: 75.533 ns/op
Iteration   1: 281.248 ns/op
Iteration   2: 400.127 ns/op
Iteration   3: 373.296 ns/op
Iteration   4: 459.809 ns/op
Iteration   5: 223.293 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.charArray":
  347.555 ±(99.9%) 364.618 ns/op [Average]
  (min, avg, max) = (223.293, 347.555, 459.809), stdev = 94.690
  CI (99.9%): [≈ 0, 712.173] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.charArray
# Parameters: (nanos = 1000000)

# Run progress: 16.67% complete, ETA 00:00:50
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 52.960 ns/op
# Warmup Iteration   2: 51.998 ns/op
# Warmup Iteration   3: 417.281 ns/op
# Warmup Iteration   4: 438.073 ns/op
# Warmup Iteration   5: 421.936 ns/op
Iteration   1: 436.427 ns/op
Iteration   2: 443.804 ns/op
Iteration   3: 432.982 ns/op
Iteration   4: 435.691 ns/op
Iteration   5: 432.787 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.charArray":
  436.338 ±(99.9%) 17.225 ns/op [Average]
  (min, avg, max) = (432.787, 436.338, 443.804), stdev = 4.473
  CI (99.9%): [419.114, 453.563] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.charArray
# Parameters: (nanos = 100000000)

# Run progress: 33.33% complete, ETA 00:00:40
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 115.754 ns/op
# Warmup Iteration   2: 52.590 ns/op
# Warmup Iteration   3: 61.174 ns/op
# Warmup Iteration   4: 54.513 ns/op
# Warmup Iteration   5: 97.608 ns/op
Iteration   1: 482.871 ns/op
Iteration   2: 496.744 ns/op
Iteration   3: 471.062 ns/op
Iteration   4: 507.060 ns/op
Iteration   5: 628.859 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.charArray":
  517.319 ±(99.9%) 245.779 ns/op [Average]
  (min, avg, max) = (471.062, 517.319, 628.859), stdev = 63.828
  CI (99.9%): [271.540, 763.098] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.insert
# Parameters: (nanos = 1000)

# Run progress: 50.00% complete, ETA 00:00:30
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 40.322 ns/op
# Warmup Iteration   2: 28.386 ns/op
# Warmup Iteration   3: 27.545 ns/op
# Warmup Iteration   4: 27.544 ns/op
# Warmup Iteration   5: 27.535 ns/op
Iteration   1: 27.544 ns/op
Iteration   2: 27.965 ns/op
Iteration   3: 27.717 ns/op
Iteration   4: 27.717 ns/op
Iteration   5: 27.723 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.insert":
  27.733 ±(99.9%) 0.577 ns/op [Average]
  (min, avg, max) = (27.544, 27.733, 27.965), stdev = 0.150
  CI (99.9%): [27.156, 28.311] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.insert
# Parameters: (nanos = 1000000)

# Run progress: 66.67% complete, ETA 00:00:20
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 44.640 ns/op
# Warmup Iteration   2: 36.152 ns/op
# Warmup Iteration   3: 36.229 ns/op
# Warmup Iteration   4: 36.282 ns/op
# Warmup Iteration   5: 36.231 ns/op
Iteration   1: 36.322 ns/op
Iteration   2: 36.328 ns/op
Iteration   3: 36.223 ns/op
Iteration   4: 36.153 ns/op
Iteration   5: 36.082 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.insert":
  36.222 ±(99.9%) 0.412 ns/op [Average]
  (min, avg, max) = (36.082, 36.222, 36.328), stdev = 0.107
  CI (99.9%): [35.810, 36.634] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.insert
# Parameters: (nanos = 100000000)

# Run progress: 83.33% complete, ETA 00:00:10
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 27.082 ns/op
# Warmup Iteration   2: 27.292 ns/op
# Warmup Iteration   3: 26.968 ns/op
# Warmup Iteration   4: 27.261 ns/op
# Warmup Iteration   5: 26.966 ns/op
Iteration   1: 26.959 ns/op
Iteration   2: 27.270 ns/op
Iteration   3: 26.960 ns/op
Iteration   4: 27.269 ns/op
Iteration   5: 26.960 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.insert":
  27.084 ±(99.9%) 0.654 ns/op [Average]
  (min, avg, max) = (26.959, 27.084, 27.270), stdev = 0.170
  CI (99.9%): [26.430, 27.738] (assumes normal distribution)


# Run complete. Total time: 00:01:00

Benchmark                    (nanos)  Mode  Cnt    Score     Error  Units
AddPaddingZeros.charArray       1000  avgt    5  347.555 ± 364.618  ns/op
AddPaddingZeros.charArray    1000000  avgt    5  436.338 ±  17.225  ns/op
AddPaddingZeros.charArray  100000000  avgt    5  517.319 ± 245.779  ns/op
AddPaddingZeros.insert          1000  avgt    5   27.733 ±   0.577  ns/op
AddPaddingZeros.insert       1000000  avgt    5   36.222 ±   0.412  ns/op
AddPaddingZeros.insert     100000000  avgt    5   27.084 ±   0.654  ns/op

Benchmark result is saved to exp-FORK-out/pgdbc_benchmarks_original_postgresql_benchmark_time_AddPaddingZeros_fork_trial1.csv
