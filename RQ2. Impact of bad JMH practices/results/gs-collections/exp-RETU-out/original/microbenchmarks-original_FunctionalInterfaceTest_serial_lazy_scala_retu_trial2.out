# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 2 s each
# Measurement: 10 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gs.collections.impl.jmh.FunctionalInterfaceTest.serial_lazy_scala
# Parameters: (megamorphicWarmupLevel = 0)

# Run progress: 0.00% complete, ETA 00:08:00
# Fork: 1 of 2
# Warmup Iteration   1: 12.361 ops/s
# Warmup Iteration   2: 12.947 ops/s
# Warmup Iteration   3: 11.979 ops/s
# Warmup Iteration   4: 12.621 ops/s
# Warmup Iteration   5: 16.245 ops/s
# Warmup Iteration   6: 16.216 ops/s
# Warmup Iteration   7: 13.481 ops/s
# Warmup Iteration   8: 13.319 ops/s
# Warmup Iteration   9: 16.243 ops/s
# Warmup Iteration  10: 16.090 ops/s
# Warmup Iteration  11: 14.752 ops/s
# Warmup Iteration  12: 15.647 ops/s
# Warmup Iteration  13: 13.689 ops/s
# Warmup Iteration  14: 14.842 ops/s
# Warmup Iteration  15: 16.263 ops/s
# Warmup Iteration  16: 15.047 ops/s
# Warmup Iteration  17: 16.122 ops/s
# Warmup Iteration  18: 16.260 ops/s
# Warmup Iteration  19: 16.189 ops/s
# Warmup Iteration  20: 16.252 ops/s
Iteration   1: 16.265 ops/s
Iteration   2: 16.161 ops/s
Iteration   3: 14.577 ops/s
Iteration   4: 15.476 ops/s
Iteration   5: 15.440 ops/s
Iteration   6: 15.092 ops/s
Iteration   7: 15.141 ops/s
Iteration   8: 15.317 ops/s
Iteration   9: 16.075 ops/s
Iteration  10: 15.184 ops/s

# Run progress: 12.50% complete, ETA 00:07:13
# Fork: 2 of 2
# Warmup Iteration   1: 11.459 ops/s
# Warmup Iteration   2: 13.831 ops/s
# Warmup Iteration   3: 12.771 ops/s
# Warmup Iteration   4: 14.135 ops/s
# Warmup Iteration   5: 13.483 ops/s
# Warmup Iteration   6: 12.296 ops/s
# Warmup Iteration   7: 15.372 ops/s
# Warmup Iteration   8: 15.172 ops/s
# Warmup Iteration   9: 15.366 ops/s
# Warmup Iteration  10: 12.237 ops/s
# Warmup Iteration  11: 15.356 ops/s
# Warmup Iteration  12: 15.202 ops/s
# Warmup Iteration  13: 15.341 ops/s
# Warmup Iteration  14: 15.352 ops/s
# Warmup Iteration  15: 15.204 ops/s
# Warmup Iteration  16: 15.360 ops/s
# Warmup Iteration  17: 15.351 ops/s
# Warmup Iteration  18: 15.358 ops/s
# Warmup Iteration  19: 13.498 ops/s
# Warmup Iteration  20: 14.809 ops/s
Iteration   1: 15.257 ops/s
Iteration   2: 15.385 ops/s
Iteration   3: 15.272 ops/s
Iteration   4: 15.014 ops/s
Iteration   5: 12.765 ops/s
Iteration   6: 15.065 ops/s
Iteration   7: 14.771 ops/s
Iteration   8: 14.720 ops/s
Iteration   9: 15.373 ops/s
Iteration  10: 15.222 ops/s


Result "com.gs.collections.impl.jmh.FunctionalInterfaceTest.serial_lazy_scala":
  15.179 ±(99.9%) 0.625 ops/s [Average]
  (min, avg, max) = (12.765, 15.179, 16.265), stdev = 0.719
  CI (99.9%): [14.554, 15.803] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 2 s each
# Measurement: 10 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gs.collections.impl.jmh.FunctionalInterfaceTest.serial_lazy_scala
# Parameters: (megamorphicWarmupLevel = 1)

# Run progress: 25.00% complete, ETA 00:06:10
# Fork: 1 of 2
# Warmup Iteration   1: 11.288 ops/s
# Warmup Iteration   2: 11.873 ops/s
# Warmup Iteration   3: 12.848 ops/s
# Warmup Iteration   4: 10.601 ops/s
# Warmup Iteration   5: 11.745 ops/s
# Warmup Iteration   6: 12.554 ops/s
# Warmup Iteration   7: 12.956 ops/s
# Warmup Iteration   8: 11.991 ops/s
# Warmup Iteration   9: 10.585 ops/s
# Warmup Iteration  10: 12.672 ops/s
# Warmup Iteration  11: 13.073 ops/s
# Warmup Iteration  12: 13.062 ops/s
# Warmup Iteration  13: 13.137 ops/s
# Warmup Iteration  14: 13.101 ops/s
# Warmup Iteration  15: 12.905 ops/s
# Warmup Iteration  16: 12.828 ops/s
# Warmup Iteration  17: 12.982 ops/s
# Warmup Iteration  18: 13.114 ops/s
# Warmup Iteration  19: 12.988 ops/s
# Warmup Iteration  20: 13.140 ops/s
Iteration   1: 12.374 ops/s
Iteration   2: 12.465 ops/s
Iteration   3: 13.132 ops/s
Iteration   4: 13.081 ops/s
Iteration   5: 13.134 ops/s
Iteration   6: 13.123 ops/s
Iteration   7: 13.054 ops/s
Iteration   8: 13.105 ops/s
Iteration   9: 13.037 ops/s
Iteration  10: 13.126 ops/s

# Run progress: 37.50% complete, ETA 00:05:15
# Fork: 2 of 2
# Warmup Iteration   1: 11.261 ops/s
# Warmup Iteration   2: 12.774 ops/s
# Warmup Iteration   3: 13.087 ops/s
# Warmup Iteration   4: 10.343 ops/s
# Warmup Iteration   5: 12.270 ops/s
# Warmup Iteration   6: 13.258 ops/s
# Warmup Iteration   7: 13.165 ops/s
# Warmup Iteration   8: 13.169 ops/s
# Warmup Iteration   9: 9.410 ops/s
# Warmup Iteration  10: 12.979 ops/s
# Warmup Iteration  11: 11.448 ops/s
# Warmup Iteration  12: 13.214 ops/s
# Warmup Iteration  13: 13.272 ops/s
# Warmup Iteration  14: 13.192 ops/s
# Warmup Iteration  15: 13.279 ops/s
# Warmup Iteration  16: 13.239 ops/s
# Warmup Iteration  17: 11.811 ops/s
# Warmup Iteration  18: 13.275 ops/s
# Warmup Iteration  19: 13.160 ops/s
# Warmup Iteration  20: 13.278 ops/s
Iteration   1: 13.263 ops/s
Iteration   2: 12.608 ops/s
Iteration   3: 13.276 ops/s
Iteration   4: 13.102 ops/s
Iteration   5: 13.262 ops/s
Iteration   6: 13.117 ops/s
Iteration   7: 13.277 ops/s
Iteration   8: 13.272 ops/s
Iteration   9: 13.092 ops/s
Iteration  10: 13.255 ops/s


Result "com.gs.collections.impl.jmh.FunctionalInterfaceTest.serial_lazy_scala":
  13.058 ±(99.9%) 0.228 ops/s [Average]
  (min, avg, max) = (12.374, 13.058, 13.277), stdev = 0.263
  CI (99.9%): [12.829, 13.286] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 2 s each
# Measurement: 10 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gs.collections.impl.jmh.FunctionalInterfaceTest.serial_lazy_scala
# Parameters: (megamorphicWarmupLevel = 2)

# Run progress: 50.00% complete, ETA 00:04:15
# Fork: 1 of 2
# Warmup Iteration   1: 11.214 ops/s
# Warmup Iteration   2: 12.588 ops/s
# Warmup Iteration   3: 12.808 ops/s
# Warmup Iteration   4: 10.263 ops/s
# Warmup Iteration   5: 12.694 ops/s
# Warmup Iteration   6: 12.421 ops/s
# Warmup Iteration   7: 12.943 ops/s
# Warmup Iteration   8: 13.214 ops/s
# Warmup Iteration   9: 11.619 ops/s
# Warmup Iteration  10: 13.418 ops/s
# Warmup Iteration  11: 13.311 ops/s
# Warmup Iteration  12: 11.196 ops/s
# Warmup Iteration  13: 13.418 ops/s
# Warmup Iteration  14: 13.149 ops/s
# Warmup Iteration  15: 11.386 ops/s
# Warmup Iteration  16: 12.940 ops/s
# Warmup Iteration  17: 13.319 ops/s
# Warmup Iteration  18: 13.428 ops/s
# Warmup Iteration  19: 13.310 ops/s
# Warmup Iteration  20: 13.418 ops/s
Iteration   1: 12.663 ops/s
Iteration   2: 13.358 ops/s
Iteration   3: 12.568 ops/s
Iteration   4: 11.972 ops/s
Iteration   5: 12.337 ops/s
Iteration   6: 13.158 ops/s
Iteration   7: 13.428 ops/s
Iteration   8: 13.418 ops/s
Iteration   9: 12.607 ops/s
Iteration  10: 11.911 ops/s

# Run progress: 62.50% complete, ETA 00:03:13
# Fork: 2 of 2
# Warmup Iteration   1: 11.184 ops/s
# Warmup Iteration   2: 13.168 ops/s
# Warmup Iteration   3: 12.753 ops/s
# Warmup Iteration   4: 9.998 ops/s
# Warmup Iteration   5: 12.982 ops/s
# Warmup Iteration   6: 11.292 ops/s
# Warmup Iteration   7: 12.342 ops/s
# Warmup Iteration   8: 13.331 ops/s
# Warmup Iteration   9: 11.214 ops/s
# Warmup Iteration  10: 13.316 ops/s
# Warmup Iteration  11: 13.287 ops/s
# Warmup Iteration  12: 13.134 ops/s
# Warmup Iteration  13: 13.303 ops/s
# Warmup Iteration  14: 13.183 ops/s
# Warmup Iteration  15: 13.078 ops/s
# Warmup Iteration  16: 11.874 ops/s
# Warmup Iteration  17: 12.417 ops/s
# Warmup Iteration  18: 11.290 ops/s
# Warmup Iteration  19: 12.286 ops/s
# Warmup Iteration  20: 12.755 ops/s
Iteration   1: 12.909 ops/s
Iteration   2: 12.687 ops/s
Iteration   3: 13.327 ops/s
Iteration   4: 13.276 ops/s
Iteration   5: 13.298 ops/s
Iteration   6: 13.327 ops/s
Iteration   7: 13.260 ops/s
Iteration   8: 13.322 ops/s
Iteration   9: 13.186 ops/s
Iteration  10: 13.325 ops/s


Result "com.gs.collections.impl.jmh.FunctionalInterfaceTest.serial_lazy_scala":
  12.967 ±(99.9%) 0.419 ops/s [Average]
  (min, avg, max) = (11.911, 12.967, 13.428), stdev = 0.482
  CI (99.9%): [12.548, 13.386] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 20 iterations, 2 s each
# Measurement: 10 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gs.collections.impl.jmh.FunctionalInterfaceTest.serial_lazy_scala
# Parameters: (megamorphicWarmupLevel = 3)

# Run progress: 75.00% complete, ETA 00:02:09
# Fork: 1 of 2
# Warmup Iteration   1: 11.182 ops/s
# Warmup Iteration   2: 13.123 ops/s
# Warmup Iteration   3: 11.356 ops/s
# Warmup Iteration   4: 10.496 ops/s
# Warmup Iteration   5: 13.656 ops/s
# Warmup Iteration   6: 13.449 ops/s
# Warmup Iteration   7: 13.665 ops/s
# Warmup Iteration   8: 12.358 ops/s
# Warmup Iteration   9: 12.715 ops/s
# Warmup Iteration  10: 13.658 ops/s
# Warmup Iteration  11: 13.469 ops/s
# Warmup Iteration  12: 13.671 ops/s
# Warmup Iteration  13: 13.623 ops/s
# Warmup Iteration  14: 13.644 ops/s
# Warmup Iteration  15: 13.632 ops/s
# Warmup Iteration  16: 13.554 ops/s
# Warmup Iteration  17: 13.622 ops/s
# Warmup Iteration  18: 13.522 ops/s
# Warmup Iteration  19: 13.669 ops/s
# Warmup Iteration  20: 13.473 ops/s
Iteration   1: 13.651 ops/s
Iteration   2: 13.658 ops/s
Iteration   3: 13.545 ops/s
Iteration   4: 13.662 ops/s
Iteration   5: 13.554 ops/s
Iteration   6: 13.653 ops/s
Iteration   7: 13.481 ops/s
Iteration   8: 13.666 ops/s
Iteration   9: 12.270 ops/s
Iteration  10: 13.576 ops/s

# Run progress: 87.50% complete, ETA 00:01:05
# Fork: 2 of 2
# Warmup Iteration   1: 9.795 ops/s
# Warmup Iteration   2: 13.017 ops/s
# Warmup Iteration   3: 12.287 ops/s
# Warmup Iteration   4: 10.231 ops/s
# Warmup Iteration   5: 13.199 ops/s
# Warmup Iteration   6: 13.092 ops/s
# Warmup Iteration   7: 11.722 ops/s
# Warmup Iteration   8: 12.151 ops/s
# Warmup Iteration   9: 10.711 ops/s
# Warmup Iteration  10: 12.750 ops/s
# Warmup Iteration  11: 12.360 ops/s
# Warmup Iteration  12: 12.359 ops/s
# Warmup Iteration  13: 11.971 ops/s
# Warmup Iteration  14: 12.896 ops/s
# Warmup Iteration  15: 13.217 ops/s
# Warmup Iteration  16: 12.262 ops/s
# Warmup Iteration  17: 12.270 ops/s
# Warmup Iteration  18: 13.217 ops/s
# Warmup Iteration  19: 13.100 ops/s
# Warmup Iteration  20: 13.218 ops/s
Iteration   1: 13.212 ops/s
Iteration   2: 13.065 ops/s
Iteration   3: 13.212 ops/s
Iteration   4: 13.136 ops/s
Iteration   5: 13.170 ops/s
Iteration   6: 11.979 ops/s
Iteration   7: 11.448 ops/s
Iteration   8: 11.837 ops/s
Iteration   9: 12.493 ops/s
Iteration  10: 13.205 ops/s


Result "com.gs.collections.impl.jmh.FunctionalInterfaceTest.serial_lazy_scala":
  13.074 ±(99.9%) 0.598 ops/s [Average]
  (min, avg, max) = (11.448, 13.074, 13.666), stdev = 0.688
  CI (99.9%): [12.476, 13.671] (assumes normal distribution)


# Run complete. Total time: 00:08:42

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                  (megamorphicWarmupLevel)   Mode  Cnt   Score   Error  Units
FunctionalInterfaceTest.serial_lazy_scala                         0  thrpt   20  15.179 ± 0.625  ops/s
FunctionalInterfaceTest.serial_lazy_scala                         1  thrpt   20  13.058 ± 0.228  ops/s
FunctionalInterfaceTest.serial_lazy_scala                         2  thrpt   20  12.967 ± 0.419  ops/s
FunctionalInterfaceTest.serial_lazy_scala                         3  thrpt   20  13.074 ± 0.598  ops/s

Benchmark result is saved to gs-collections/exp-RETU-STATIC-out/microbenchmarks-original_FunctionalInterfaceTest_serial_lazy_scala_retu_trial2.csv
