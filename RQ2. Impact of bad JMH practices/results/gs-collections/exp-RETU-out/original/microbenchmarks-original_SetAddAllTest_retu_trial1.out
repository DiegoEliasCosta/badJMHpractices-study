# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gs.collections.impl.jmh.SetAddAllTest.gsc

# Run progress: 0.00% complete, ETA 00:16:40
# Fork: 1 of 5
# Warmup Iteration   1: 144.348 ops/s
# Warmup Iteration   2: 139.007 ops/s
# Warmup Iteration   3: 129.812 ops/s
# Warmup Iteration   4: 144.011 ops/s
# Warmup Iteration   5: 138.462 ops/s
Iteration   1: 142.653 ops/s
Iteration   2: 145.262 ops/s
Iteration   3: 140.486 ops/s
Iteration   4: 134.909 ops/s
Iteration   5: 139.090 ops/s

# Run progress: 10.00% complete, ETA 00:15:04
# Fork: 2 of 5
# Warmup Iteration   1: 132.608 ops/s
# Warmup Iteration   2: 129.010 ops/s
# Warmup Iteration   3: 126.196 ops/s
# Warmup Iteration   4: 133.030 ops/s
# Warmup Iteration   5: 129.414 ops/s
Iteration   1: 133.025 ops/s
Iteration   2: 133.778 ops/s
Iteration   3: 130.056 ops/s
Iteration   4: 138.544 ops/s
Iteration   5: 135.500 ops/s

# Run progress: 20.00% complete, ETA 00:13:23
# Fork: 3 of 5
# Warmup Iteration   1: 145.174 ops/s
# Warmup Iteration   2: 143.955 ops/s
# Warmup Iteration   3: 140.444 ops/s
# Warmup Iteration   4: 132.032 ops/s
# Warmup Iteration   5: 138.059 ops/s
Iteration   1: 139.150 ops/s
Iteration   2: 133.189 ops/s
Iteration   3: 140.856 ops/s
Iteration   4: 143.722 ops/s
Iteration   5: 133.902 ops/s

# Run progress: 30.00% complete, ETA 00:11:42
# Fork: 4 of 5
# Warmup Iteration   1: 139.322 ops/s
# Warmup Iteration   2: 131.353 ops/s
# Warmup Iteration   3: 128.620 ops/s
# Warmup Iteration   4: 132.626 ops/s
# Warmup Iteration   5: 132.773 ops/s
Iteration   1: 133.693 ops/s
Iteration   2: 134.902 ops/s
Iteration   3: 129.929 ops/s
Iteration   4: 129.390 ops/s
Iteration   5: 136.317 ops/s

# Run progress: 40.00% complete, ETA 00:10:02
# Fork: 5 of 5
# Warmup Iteration   1: 130.815 ops/s
# Warmup Iteration   2: 133.360 ops/s
# Warmup Iteration   3: 135.476 ops/s
# Warmup Iteration   4: 131.989 ops/s
# Warmup Iteration   5: 131.841 ops/s
Iteration   1: 135.624 ops/s
Iteration   2: 135.494 ops/s
Iteration   3: 135.652 ops/s
Iteration   4: 135.442 ops/s
Iteration   5: 135.488 ops/s


Result "com.gs.collections.impl.jmh.SetAddAllTest.gsc":
  136.242 ±(99.9%) 3.092 ops/s [Average]
  (min, avg, max) = (129.390, 136.242, 145.262), stdev = 4.128
  CI (99.9%): [133.150, 139.334] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gs.collections.impl.jmh.SetAddAllTest.jdk

# Run progress: 50.00% complete, ETA 00:08:21
# Fork: 1 of 5
# Warmup Iteration   1: 68.002 ops/s
# Warmup Iteration   2: 71.381 ops/s
# Warmup Iteration   3: 71.678 ops/s
# Warmup Iteration   4: 71.926 ops/s
# Warmup Iteration   5: 72.013 ops/s
Iteration   1: 73.211 ops/s
Iteration   2: 72.485 ops/s
Iteration   3: 72.371 ops/s
Iteration   4: 72.443 ops/s
Iteration   5: 67.516 ops/s

# Run progress: 60.00% complete, ETA 00:06:41
# Fork: 2 of 5
# Warmup Iteration   1: 73.034 ops/s
# Warmup Iteration   2: 71.705 ops/s
# Warmup Iteration   3: 71.742 ops/s
# Warmup Iteration   4: 69.393 ops/s
# Warmup Iteration   5: 70.038 ops/s
Iteration   1: 70.069 ops/s
Iteration   2: 71.675 ops/s
Iteration   3: 69.667 ops/s
Iteration   4: 69.166 ops/s
Iteration   5: 69.069 ops/s

# Run progress: 70.00% complete, ETA 00:05:01
# Fork: 3 of 5
# Warmup Iteration   1: 70.003 ops/s
# Warmup Iteration   2: 68.467 ops/s
# Warmup Iteration   3: 69.835 ops/s
# Warmup Iteration   4: 72.147 ops/s
# Warmup Iteration   5: 73.415 ops/s
Iteration   1: 70.954 ops/s
Iteration   2: 72.998 ops/s
Iteration   3: 67.496 ops/s
Iteration   4: 71.784 ops/s
Iteration   5: 72.825 ops/s

# Run progress: 80.00% complete, ETA 00:03:20
# Fork: 4 of 5
# Warmup Iteration   1: 68.338 ops/s
# Warmup Iteration   2: 73.829 ops/s
# Warmup Iteration   3: 73.366 ops/s
# Warmup Iteration   4: 67.739 ops/s
# Warmup Iteration   5: 70.399 ops/s
Iteration   1: 67.333 ops/s
Iteration   2: 69.643 ops/s
Iteration   3: 68.407 ops/s
Iteration   4: 63.075 ops/s
Iteration   5: 66.468 ops/s

# Run progress: 90.00% complete, ETA 00:01:40
# Fork: 5 of 5
# Warmup Iteration   1: 72.514 ops/s
# Warmup Iteration   2: 73.670 ops/s
# Warmup Iteration   3: 73.793 ops/s
# Warmup Iteration   4: 73.844 ops/s
# Warmup Iteration   5: 73.832 ops/s
Iteration   1: 72.558 ops/s
Iteration   2: 73.469 ops/s
Iteration   3: 70.449 ops/s
Iteration   4: 69.106 ops/s
Iteration   5: 72.673 ops/s


Result "com.gs.collections.impl.jmh.SetAddAllTest.jdk":
  70.276 ±(99.9%) 1.941 ops/s [Average]
  (min, avg, max) = (63.075, 70.276, 73.469), stdev = 2.591
  CI (99.9%): [68.336, 72.217] (assumes normal distribution)


# Run complete. Total time: 00:16:43

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark           Mode  Cnt    Score   Error  Units
SetAddAllTest.gsc  thrpt   25  136.242 ± 3.092  ops/s
SetAddAllTest.jdk  thrpt   25   70.276 ± 1.941  ops/s

Benchmark result is saved to gs-collections/exp-RETU-out-jdk8/microbenchmarks-original_SetAddAllTest_retu_trial1.csv
