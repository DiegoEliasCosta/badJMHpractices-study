# JMH version: 1.21
# VM version: JDK 10.0.1, Java HotSpot(TM) 64-Bit Server VM, 10.0.1+10
# VM invoker: /usr/lib/jvm/java-10-oracle/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gs.collections.impl.jmh.RejectTest.serial_eager_gsc

# Run progress: 0.00% complete, ETA 00:58:20
# Fork: 1 of 5
# Warmup Iteration   1: 65.867 ops/s
# Warmup Iteration   2: 68.156 ops/s
# Warmup Iteration   3: 67.081 ops/s
# Warmup Iteration   4: 66.640 ops/s
# Warmup Iteration   5: 69.050 ops/s
Iteration   1: 68.920 ops/s
Iteration   2: 68.931 ops/s
Iteration   3: 68.813 ops/s
Iteration   4: 67.739 ops/s
Iteration   5: 68.335 ops/s

# Run progress: 2.86% complete, ETA 00:57:02
# Fork: 2 of 5
# Warmup Iteration   1: 65.522 ops/s
# Warmup Iteration   2: 68.172 ops/s
# Warmup Iteration   3: 67.620 ops/s
# Warmup Iteration   4: 65.904 ops/s
# Warmup Iteration   5: 68.632 ops/s
Iteration   1: 68.750 ops/s
Iteration   2: 68.926 ops/s
Iteration   3: 71.372 ops/s
Iteration   4: 69.264 ops/s
Iteration   5: 68.347 ops/s

# Run progress: 5.71% complete, ETA 00:55:21
# Fork: 3 of 5
# Warmup Iteration   1: 66.940 ops/s
# Warmup Iteration   2: 69.818 ops/s
# Warmup Iteration   3: 68.870 ops/s
# Warmup Iteration   4: 68.317 ops/s
# Warmup Iteration   5: 70.817 ops/s
Iteration   1: 70.863 ops/s
Iteration   2: 71.010 ops/s
Iteration   3: 71.037 ops/s
Iteration   4: 70.740 ops/s
Iteration   5: 70.768 ops/s

# Run progress: 8.57% complete, ETA 00:53:40
# Fork: 4 of 5
# Warmup Iteration   1: 67.983 ops/s
# Warmup Iteration   2: 70.718 ops/s
# Warmup Iteration   3: 69.488 ops/s
# Warmup Iteration   4: 66.735 ops/s
# Warmup Iteration   5: 74.086 ops/s
Iteration   1: 72.231 ops/s
Iteration   2: 72.017 ops/s
Iteration   3: 71.832 ops/s
Iteration   4: 71.755 ops/s
Iteration   5: 71.795 ops/s

# Run progress: 11.43% complete, ETA 00:51:59
# Fork: 5 of 5
# Warmup Iteration   1: 65.509 ops/s
# Warmup Iteration   2: 66.740 ops/s
# Warmup Iteration   3: 66.885 ops/s
# Warmup Iteration   4: 66.380 ops/s
# Warmup Iteration   5: 68.913 ops/s
Iteration   1: 69.087 ops/s
Iteration   2: 68.072 ops/s
Iteration   3: 69.178 ops/s
Iteration   4: 68.836 ops/s
Iteration   5: 68.871 ops/s


Result "com.gs.collections.impl.jmh.RejectTest.serial_eager_gsc":
  69.900 ±(99.9%) 1.079 ops/s [Average]
  (min, avg, max) = (67.739, 69.900, 72.231), stdev = 1.440
  CI (99.9%): [68.821, 70.978] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 10.0.1, Java HotSpot(TM) 64-Bit Server VM, 10.0.1+10
# VM invoker: /usr/lib/jvm/java-10-oracle/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gs.collections.impl.jmh.RejectTest.serial_eager_gsc_select_predicates_not

# Run progress: 14.29% complete, ETA 00:50:19
# Fork: 1 of 5
# Warmup Iteration   1: 57.341 ops/s
# Warmup Iteration   2: 58.382 ops/s
# Warmup Iteration   3: 59.651 ops/s
# Warmup Iteration   4: 57.954 ops/s
# Warmup Iteration   5: 60.191 ops/s
Iteration   1: 63.089 ops/s
Iteration   2: 63.095 ops/s
Iteration   3: 61.533 ops/s
Iteration   4: 62.730 ops/s
Iteration   5: 59.746 ops/s

# Run progress: 17.14% complete, ETA 00:48:38
# Fork: 2 of 5
# Warmup Iteration   1: 59.863 ops/s
# Warmup Iteration   2: 62.525 ops/s
# Warmup Iteration   3: 62.085 ops/s
# Warmup Iteration   4: 59.419 ops/s
# Warmup Iteration   5: 63.442 ops/s
Iteration   1: 65.828 ops/s
Iteration   2: 65.662 ops/s
Iteration   3: 65.731 ops/s
Iteration   4: 64.489 ops/s
Iteration   5: 61.777 ops/s

# Run progress: 20.00% complete, ETA 00:46:57
# Fork: 3 of 5
# Warmup Iteration   1: 58.516 ops/s
# Warmup Iteration   2: 60.251 ops/s
# Warmup Iteration   3: 60.963 ops/s
# Warmup Iteration   4: 59.544 ops/s
# Warmup Iteration   5: 60.552 ops/s
Iteration   1: 64.497 ops/s
Iteration   2: 65.202 ops/s
Iteration   3: 64.355 ops/s
Iteration   4: 64.156 ops/s
Iteration   5: 61.702 ops/s

# Run progress: 22.86% complete, ETA 00:45:17
# Fork: 4 of 5
# Warmup Iteration   1: 55.575 ops/s
# Warmup Iteration   2: 56.464 ops/s
# Warmup Iteration   3: 57.460 ops/s
# Warmup Iteration   4: 55.885 ops/s
# Warmup Iteration   5: 57.410 ops/s
Iteration   1: 60.667 ops/s
Iteration   2: 60.277 ops/s
Iteration   3: 60.822 ops/s
Iteration   4: 60.681 ops/s
Iteration   5: 57.963 ops/s

# Run progress: 25.71% complete, ETA 00:43:36
# Fork: 5 of 5
# Warmup Iteration   1: 55.513 ops/s
# Warmup Iteration   2: 58.412 ops/s
# Warmup Iteration   3: 58.186 ops/s
# Warmup Iteration   4: 56.750 ops/s
# Warmup Iteration   5: 58.190 ops/s
Iteration   1: 63.020 ops/s
Iteration   2: 61.222 ops/s
Iteration   3: 61.146 ops/s
Iteration   4: 61.303 ops/s
Iteration   5: 57.461 ops/s


Result "com.gs.collections.impl.jmh.RejectTest.serial_eager_gsc_select_predicates_not":
  62.326 ±(99.9%) 1.731 ops/s [Average]
  (min, avg, max) = (57.461, 62.326, 65.828), stdev = 2.311
  CI (99.9%): [60.595, 64.057] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 10.0.1, Java HotSpot(TM) 64-Bit Server VM, 10.0.1+10
# VM invoker: /usr/lib/jvm/java-10-oracle/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gs.collections.impl.jmh.RejectTest.serial_lazy_gsc

# Run progress: 28.57% complete, ETA 00:41:56
# Fork: 1 of 5
# Warmup Iteration   1: 51.042 ops/s
# Warmup Iteration   2: 54.581 ops/s
# Warmup Iteration   3: 54.393 ops/s
# Warmup Iteration   4: 53.061 ops/s
# Warmup Iteration   5: 53.806 ops/s
Iteration   1: 59.367 ops/s
Iteration   2: 58.423 ops/s
Iteration   3: 60.281 ops/s
Iteration   4: 60.327 ops/s
Iteration   5: 59.746 ops/s

# Run progress: 31.43% complete, ETA 00:40:15
# Fork: 2 of 5
# Warmup Iteration   1: 52.130 ops/s
# Warmup Iteration   2: 54.617 ops/s
# Warmup Iteration   3: 54.616 ops/s
# Warmup Iteration   4: 52.991 ops/s
# Warmup Iteration   5: 53.324 ops/s
Iteration   1: 54.217 ops/s
Iteration   2: 59.134 ops/s
Iteration   3: 59.619 ops/s
Iteration   4: 59.750 ops/s
Iteration   5: 59.725 ops/s

# Run progress: 34.29% complete, ETA 00:38:34
# Fork: 3 of 5
# Warmup Iteration   1: 51.882 ops/s
# Warmup Iteration   2: 52.672 ops/s
# Warmup Iteration   3: 53.822 ops/s
# Warmup Iteration   4: 51.766 ops/s
# Warmup Iteration   5: 53.338 ops/s
Iteration   1: 53.486 ops/s
Iteration   2: 58.462 ops/s
Iteration   3: 59.890 ops/s
Iteration   4: 59.583 ops/s
Iteration   5: 59.409 ops/s

# Run progress: 37.14% complete, ETA 00:36:54
# Fork: 4 of 5
# Warmup Iteration   1: 52.501 ops/s
# Warmup Iteration   2: 54.692 ops/s
# Warmup Iteration   3: 53.696 ops/s
# Warmup Iteration   4: 52.887 ops/s
# Warmup Iteration   5: 51.854 ops/s
Iteration   1: 54.066 ops/s
Iteration   2: 59.496 ops/s
Iteration   3: 60.458 ops/s
Iteration   4: 59.434 ops/s
Iteration   5: 59.339 ops/s

# Run progress: 40.00% complete, ETA 00:35:13
# Fork: 5 of 5
# Warmup Iteration   1: 51.358 ops/s
# Warmup Iteration   2: 53.688 ops/s
# Warmup Iteration   3: 53.509 ops/s
# Warmup Iteration   4: 52.441 ops/s
# Warmup Iteration   5: 52.567 ops/s
Iteration   1: 57.953 ops/s
Iteration   2: 59.316 ops/s
Iteration   3: 59.346 ops/s
Iteration   4: 58.724 ops/s
Iteration   5: 58.719 ops/s


Result "com.gs.collections.impl.jmh.RejectTest.serial_lazy_gsc":
  58.731 ±(99.9%) 1.430 ops/s [Average]
  (min, avg, max) = (53.486, 58.731, 60.458), stdev = 1.909
  CI (99.9%): [57.301, 60.161] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 10.0.1, Java HotSpot(TM) 64-Bit Server VM, 10.0.1+10
# VM invoker: /usr/lib/jvm/java-10-oracle/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gs.collections.impl.jmh.RejectTest.serial_lazy_jdk_lambda_negate

# Run progress: 42.86% complete, ETA 00:33:32
# Fork: 1 of 5
# Warmup Iteration   1: 46.122 ops/s
# Warmup Iteration   2: 48.379 ops/s
# Warmup Iteration   3: 46.885 ops/s
# Warmup Iteration   4: 48.218 ops/s
# Warmup Iteration   5: 48.141 ops/s
Iteration   1: 47.750 ops/s
Iteration   2: 47.336 ops/s
Iteration   3: 47.760 ops/s
Iteration   4: 47.892 ops/s
Iteration   5: 47.764 ops/s

# Run progress: 45.71% complete, ETA 00:31:52
# Fork: 2 of 5
# Warmup Iteration   1: 46.715 ops/s
# Warmup Iteration   2: 49.051 ops/s
# Warmup Iteration   3: 48.958 ops/s
# Warmup Iteration   4: 48.736 ops/s
# Warmup Iteration   5: 47.845 ops/s
Iteration   1: 47.398 ops/s
Iteration   2: 48.007 ops/s
Iteration   3: 48.386 ops/s
Iteration   4: 48.327 ops/s
Iteration   5: 47.623 ops/s

# Run progress: 48.57% complete, ETA 00:30:11
# Fork: 3 of 5
# Warmup Iteration   1: 45.435 ops/s
# Warmup Iteration   2: 46.399 ops/s
# Warmup Iteration   3: 47.921 ops/s
# Warmup Iteration   4: 47.998 ops/s
# Warmup Iteration   5: 45.693 ops/s
Iteration   1: 47.713 ops/s
Iteration   2: 44.995 ops/s
Iteration   3: 46.953 ops/s
Iteration   4: 47.376 ops/s
Iteration   5: 47.368 ops/s

# Run progress: 51.43% complete, ETA 00:28:30
# Fork: 4 of 5
# Warmup Iteration   1: 46.849 ops/s
# Warmup Iteration   2: 47.937 ops/s
# Warmup Iteration   3: 47.155 ops/s
# Warmup Iteration   4: 49.098 ops/s
# Warmup Iteration   5: 48.895 ops/s
Iteration   1: 48.715 ops/s
Iteration   2: 48.138 ops/s
Iteration   3: 48.527 ops/s
Iteration   4: 47.369 ops/s
Iteration   5: 48.534 ops/s

# Run progress: 54.29% complete, ETA 00:26:50
# Fork: 5 of 5
# Warmup Iteration   1: 46.013 ops/s
# Warmup Iteration   2: 48.233 ops/s
# Warmup Iteration   3: 48.125 ops/s
# Warmup Iteration   4: 48.065 ops/s
# Warmup Iteration   5: 48.105 ops/s
Iteration   1: 47.757 ops/s
Iteration   2: 47.199 ops/s
Iteration   3: 47.567 ops/s
Iteration   4: 47.682 ops/s
Iteration   5: 47.676 ops/s


Result "com.gs.collections.impl.jmh.RejectTest.serial_lazy_jdk_lambda_negate":
  47.672 ±(99.9%) 0.536 ops/s [Average]
  (min, avg, max) = (44.995, 47.672, 48.715), stdev = 0.716
  CI (99.9%): [47.136, 48.209] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 10.0.1, Java HotSpot(TM) 64-Bit Server VM, 10.0.1+10
# VM invoker: /usr/lib/jvm/java-10-oracle/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gs.collections.impl.jmh.RejectTest.serial_lazy_jdk_lambda_not

# Run progress: 57.14% complete, ETA 00:25:09
# Fork: 1 of 5
# Warmup Iteration   1: 66.942 ops/s
# Warmup Iteration   2: 69.880 ops/s
# Warmup Iteration   3: 68.849 ops/s
# Warmup Iteration   4: 69.008 ops/s
# Warmup Iteration   5: 69.321 ops/s
Iteration   1: 69.653 ops/s
Iteration   2: 67.718 ops/s
Iteration   3: 68.990 ops/s
Iteration   4: 69.520 ops/s
Iteration   5: 69.797 ops/s

# Run progress: 60.00% complete, ETA 00:23:29
# Fork: 2 of 5
# Warmup Iteration   1: 66.669 ops/s
# Warmup Iteration   2: 69.912 ops/s
# Warmup Iteration   3: 69.789 ops/s
# Warmup Iteration   4: 68.698 ops/s
# Warmup Iteration   5: 69.297 ops/s
Iteration   1: 69.323 ops/s
Iteration   2: 69.148 ops/s
Iteration   3: 68.717 ops/s
Iteration   4: 68.592 ops/s
Iteration   5: 69.498 ops/s

# Run progress: 62.86% complete, ETA 00:21:48
# Fork: 3 of 5
# Warmup Iteration   1: 65.993 ops/s
# Warmup Iteration   2: 69.061 ops/s
# Warmup Iteration   3: 68.817 ops/s
# Warmup Iteration   4: 68.022 ops/s
# Warmup Iteration   5: 68.334 ops/s
Iteration   1: 67.860 ops/s
Iteration   2: 66.935 ops/s
Iteration   3: 68.434 ops/s
Iteration   4: 68.398 ops/s
Iteration   5: 68.683 ops/s

# Run progress: 65.71% complete, ETA 00:20:07
# Fork: 4 of 5
# Warmup Iteration   1: 65.804 ops/s
# Warmup Iteration   2: 69.363 ops/s
# Warmup Iteration   3: 68.520 ops/s
# Warmup Iteration   4: 68.151 ops/s
# Warmup Iteration   5: 67.287 ops/s
Iteration   1: 68.993 ops/s
Iteration   2: 68.120 ops/s
Iteration   3: 69.098 ops/s
Iteration   4: 68.845 ops/s
Iteration   5: 67.169 ops/s

# Run progress: 68.57% complete, ETA 00:18:27
# Fork: 5 of 5
# Warmup Iteration   1: 66.334 ops/s
# Warmup Iteration   2: 69.060 ops/s
# Warmup Iteration   3: 68.885 ops/s
# Warmup Iteration   4: 66.830 ops/s
# Warmup Iteration   5: 69.091 ops/s
Iteration   1: 68.446 ops/s
Iteration   2: 68.552 ops/s
Iteration   3: 68.885 ops/s
Iteration   4: 69.281 ops/s
Iteration   5: 66.288 ops/s


Result "com.gs.collections.impl.jmh.RejectTest.serial_lazy_jdk_lambda_not":
  68.598 ±(99.9%) 0.649 ops/s [Average]
  (min, avg, max) = (66.288, 68.598, 69.797), stdev = 0.866
  CI (99.9%): [67.949, 69.247] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 10.0.1, Java HotSpot(TM) 64-Bit Server VM, 10.0.1+10
# VM invoker: /usr/lib/jvm/java-10-oracle/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gs.collections.impl.jmh.RejectTest.serial_lazy_streams_gsc_lambda_negate

# Run progress: 71.43% complete, ETA 00:16:46
# Fork: 1 of 5
# Warmup Iteration   1: 46.454 ops/s
# Warmup Iteration   2: 48.431 ops/s
# Warmup Iteration   3: 48.387 ops/s
# Warmup Iteration   4: 48.338 ops/s
# Warmup Iteration   5: 48.240 ops/s
Iteration   1: 47.693 ops/s
Iteration   2: 48.283 ops/s
Iteration   3: 48.280 ops/s
Iteration   4: 48.124 ops/s
Iteration   5: 48.255 ops/s

# Run progress: 74.29% complete, ETA 00:15:05
# Fork: 2 of 5
# Warmup Iteration   1: 44.120 ops/s
# Warmup Iteration   2: 47.245 ops/s
# Warmup Iteration   3: 48.934 ops/s
# Warmup Iteration   4: 48.657 ops/s
# Warmup Iteration   5: 48.892 ops/s
Iteration   1: 48.306 ops/s
Iteration   2: 48.780 ops/s
Iteration   3: 45.015 ops/s
Iteration   4: 48.666 ops/s
Iteration   5: 48.416 ops/s

# Run progress: 77.14% complete, ETA 00:13:25
# Fork: 3 of 5
# Warmup Iteration   1: 48.038 ops/s
# Warmup Iteration   2: 50.162 ops/s
# Warmup Iteration   3: 47.771 ops/s
# Warmup Iteration   4: 50.125 ops/s
# Warmup Iteration   5: 49.881 ops/s
Iteration   1: 49.522 ops/s
Iteration   2: 49.813 ops/s
Iteration   3: 49.971 ops/s
Iteration   4: 49.979 ops/s
Iteration   5: 49.808 ops/s

# Run progress: 80.00% complete, ETA 00:11:44
# Fork: 4 of 5
# Warmup Iteration   1: 47.745 ops/s
# Warmup Iteration   2: 50.166 ops/s
# Warmup Iteration   3: 49.846 ops/s
# Warmup Iteration   4: 49.996 ops/s
# Warmup Iteration   5: 48.708 ops/s
Iteration   1: 49.292 ops/s
Iteration   2: 48.508 ops/s
Iteration   3: 46.580 ops/s
Iteration   4: 49.882 ops/s
Iteration   5: 48.558 ops/s

# Run progress: 82.86% complete, ETA 00:10:03
# Fork: 5 of 5
# Warmup Iteration   1: 45.557 ops/s
# Warmup Iteration   2: 49.318 ops/s
# Warmup Iteration   3: 49.318 ops/s
# Warmup Iteration   4: 48.296 ops/s
# Warmup Iteration   5: 49.070 ops/s
Iteration   1: 48.628 ops/s
Iteration   2: 46.678 ops/s
Iteration   3: 49.136 ops/s
Iteration   4: 49.032 ops/s
Iteration   5: 49.069 ops/s


Result "com.gs.collections.impl.jmh.RejectTest.serial_lazy_streams_gsc_lambda_negate":
  48.571 ±(99.9%) 0.872 ops/s [Average]
  (min, avg, max) = (45.015, 48.571, 49.979), stdev = 1.164
  CI (99.9%): [47.699, 49.443] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 10.0.1, Java HotSpot(TM) 64-Bit Server VM, 10.0.1+10
# VM invoker: /usr/lib/jvm/java-10-oracle/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gs.collections.impl.jmh.RejectTest.serial_lazy_streams_gsc_lambda_not

# Run progress: 85.71% complete, ETA 00:08:23
# Fork: 1 of 5
# Warmup Iteration   1: 52.716 ops/s
# Warmup Iteration   2: 54.977 ops/s
# Warmup Iteration   3: 54.945 ops/s
# Warmup Iteration   4: 52.037 ops/s
# Warmup Iteration   5: 54.516 ops/s
Iteration   1: 54.261 ops/s
Iteration   2: 54.550 ops/s
Iteration   3: 51.345 ops/s
Iteration   4: 52.874 ops/s
Iteration   5: 54.595 ops/s

# Run progress: 88.57% complete, ETA 00:06:42
# Fork: 2 of 5
# Warmup Iteration   1: 51.725 ops/s
# Warmup Iteration   2: 53.932 ops/s
# Warmup Iteration   3: 53.796 ops/s
# Warmup Iteration   4: 53.728 ops/s
# Warmup Iteration   5: 51.457 ops/s
Iteration   1: 53.584 ops/s
Iteration   2: 53.598 ops/s
Iteration   3: 53.754 ops/s
Iteration   4: 53.608 ops/s
Iteration   5: 53.589 ops/s

# Run progress: 91.43% complete, ETA 00:05:01
# Fork: 3 of 5
# Warmup Iteration   1: 51.045 ops/s
# Warmup Iteration   2: 53.418 ops/s
# Warmup Iteration   3: 53.185 ops/s
# Warmup Iteration   4: 53.192 ops/s
# Warmup Iteration   5: 52.707 ops/s
Iteration   1: 52.760 ops/s
Iteration   2: 52.896 ops/s
Iteration   3: 53.105 ops/s
Iteration   4: 52.055 ops/s
Iteration   5: 53.018 ops/s

# Run progress: 94.29% complete, ETA 00:03:21
# Fork: 4 of 5
# Warmup Iteration   1: 52.326 ops/s
# Warmup Iteration   2: 54.592 ops/s
# Warmup Iteration   3: 54.419 ops/s
# Warmup Iteration   4: 53.397 ops/s
# Warmup Iteration   5: 53.686 ops/s
Iteration   1: 54.102 ops/s
Iteration   2: 50.698 ops/s
Iteration   3: 53.511 ops/s
Iteration   4: 53.837 ops/s
Iteration   5: 51.676 ops/s

# Run progress: 97.14% complete, ETA 00:01:40
# Fork: 5 of 5
# Warmup Iteration   1: 51.703 ops/s
# Warmup Iteration   2: 53.909 ops/s
# Warmup Iteration   3: 53.732 ops/s
# Warmup Iteration   4: 52.889 ops/s
# Warmup Iteration   5: 53.073 ops/s
Iteration   1: 53.464 ops/s
Iteration   2: 53.518 ops/s
Iteration   3: 53.569 ops/s
Iteration   4: 53.564 ops/s
Iteration   5: 50.657 ops/s


Result "com.gs.collections.impl.jmh.RejectTest.serial_lazy_streams_gsc_lambda_not":
  53.127 ±(99.9%) 0.805 ops/s [Average]
  (min, avg, max) = (50.657, 53.127, 54.595), stdev = 1.074
  CI (99.9%): [52.323, 53.932] (assumes normal distribution)


# Run complete. Total time: 00:58:42

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                           Mode  Cnt   Score   Error  Units
RejectTest.serial_eager_gsc                        thrpt   25  69.900 ± 1.079  ops/s
RejectTest.serial_eager_gsc_select_predicates_not  thrpt   25  62.326 ± 1.731  ops/s
RejectTest.serial_lazy_gsc                         thrpt   25  58.731 ± 1.430  ops/s
RejectTest.serial_lazy_jdk_lambda_negate           thrpt   25  47.672 ± 0.536  ops/s
RejectTest.serial_lazy_jdk_lambda_not              thrpt   25  68.598 ± 0.649  ops/s
RejectTest.serial_lazy_streams_gsc_lambda_negate   thrpt   25  48.571 ± 0.872  ops/s
RejectTest.serial_lazy_streams_gsc_lambda_not      thrpt   25  53.127 ± 0.805  ops/s

Benchmark result is saved to gs-collections/exp-RETU-DEAD-out/microbenchmarks-original_RejectTest_retu_trial1.csv
