# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gs.collections.impl.jmh.SetAddAllTest.gsc

# Run progress: 0.00% complete, ETA 00:16:40
# Fork: 1 of 5
# Warmup Iteration   1: 136.183 ops/s
# Warmup Iteration   2: 132.880 ops/s
# Warmup Iteration   3: 130.859 ops/s
# Warmup Iteration   4: 125.658 ops/s
# Warmup Iteration   5: 129.831 ops/s
Iteration   1: 128.122 ops/s
Iteration   2: 135.508 ops/s
Iteration   3: 134.406 ops/s
Iteration   4: 135.493 ops/s
Iteration   5: 135.508 ops/s

# Run progress: 10.00% complete, ETA 00:15:03
# Fork: 2 of 5
# Warmup Iteration   1: 146.769 ops/s
# Warmup Iteration   2: 143.797 ops/s
# Warmup Iteration   3: 139.943 ops/s
# Warmup Iteration   4: 141.882 ops/s
# Warmup Iteration   5: 141.587 ops/s
Iteration   1: 145.001 ops/s
Iteration   2: 140.063 ops/s
Iteration   3: 145.350 ops/s
Iteration   4: 134.394 ops/s
Iteration   5: 145.399 ops/s

# Run progress: 20.00% complete, ETA 00:13:23
# Fork: 3 of 5
# Warmup Iteration   1: 135.641 ops/s
# Warmup Iteration   2: 134.324 ops/s
# Warmup Iteration   3: 124.090 ops/s
# Warmup Iteration   4: 132.306 ops/s
# Warmup Iteration   5: 129.034 ops/s
Iteration   1: 135.945 ops/s
Iteration   2: 133.681 ops/s
Iteration   3: 130.521 ops/s
Iteration   4: 131.265 ops/s
Iteration   5: 138.853 ops/s

# Run progress: 30.00% complete, ETA 00:11:42
# Fork: 4 of 5
# Warmup Iteration   1: 138.187 ops/s
# Warmup Iteration   2: 135.760 ops/s
# Warmup Iteration   3: 140.369 ops/s
# Warmup Iteration   4: 133.409 ops/s
# Warmup Iteration   5: 125.021 ops/s
Iteration   1: 132.285 ops/s
Iteration   2: 126.608 ops/s
Iteration   3: 127.668 ops/s
Iteration   4: 134.114 ops/s
Iteration   5: 130.409 ops/s

# Run progress: 40.00% complete, ETA 00:10:02
# Fork: 5 of 5
# Warmup Iteration   1: 137.396 ops/s
# Warmup Iteration   2: 134.519 ops/s
# Warmup Iteration   3: 133.618 ops/s
# Warmup Iteration   4: 132.986 ops/s
# Warmup Iteration   5: 135.983 ops/s
Iteration   1: 135.689 ops/s
Iteration   2: 132.501 ops/s
Iteration   3: 135.747 ops/s
Iteration   4: 132.915 ops/s
Iteration   5: 120.118 ops/s


Result "com.gs.collections.impl.jmh.SetAddAllTest.gsc":
  134.303 ±(99.9%) 4.367 ops/s [Average]
  (min, avg, max) = (120.118, 134.303, 145.399), stdev = 5.829
  CI (99.9%): [129.936, 138.669] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gs.collections.impl.jmh.SetAddAllTest.jdk

# Run progress: 50.00% complete, ETA 00:08:21
# Fork: 1 of 5
# Warmup Iteration   1: 65.655 ops/s
# Warmup Iteration   2: 73.844 ops/s
# Warmup Iteration   3: 72.051 ops/s
# Warmup Iteration   4: 68.398 ops/s
# Warmup Iteration   5: 71.930 ops/s
Iteration   1: 68.613 ops/s
Iteration   2: 68.930 ops/s
Iteration   3: 70.771 ops/s
Iteration   4: 70.827 ops/s
Iteration   5: 71.082 ops/s

# Run progress: 60.00% complete, ETA 00:06:41
# Fork: 2 of 5
# Warmup Iteration   1: 60.490 ops/s
# Warmup Iteration   2: 73.774 ops/s
# Warmup Iteration   3: 73.290 ops/s
# Warmup Iteration   4: 72.240 ops/s
# Warmup Iteration   5: 73.888 ops/s
Iteration   1: 70.820 ops/s
Iteration   2: 72.321 ops/s
Iteration   3: 71.659 ops/s
Iteration   4: 72.650 ops/s
Iteration   5: 73.022 ops/s

# Run progress: 70.00% complete, ETA 00:05:01
# Fork: 3 of 5
# Warmup Iteration   1: 71.212 ops/s
# Warmup Iteration   2: 71.873 ops/s
# Warmup Iteration   3: 69.663 ops/s
# Warmup Iteration   4: 71.352 ops/s
# Warmup Iteration   5: 73.760 ops/s
Iteration   1: 73.154 ops/s
Iteration   2: 68.822 ops/s
Iteration   3: 69.747 ops/s
Iteration   4: 67.917 ops/s
Iteration   5: 66.881 ops/s

# Run progress: 80.00% complete, ETA 00:03:20
# Fork: 4 of 5
# Warmup Iteration   1: 65.344 ops/s
# Warmup Iteration   2: 68.293 ops/s
# Warmup Iteration   3: 71.870 ops/s
# Warmup Iteration   4: 73.183 ops/s
# Warmup Iteration   5: 73.715 ops/s
Iteration   1: 73.712 ops/s
Iteration   2: 71.581 ops/s
Iteration   3: 72.627 ops/s
Iteration   4: 73.131 ops/s
Iteration   5: 71.257 ops/s

# Run progress: 90.00% complete, ETA 00:01:40
# Fork: 5 of 5
# Warmup Iteration   1: 73.481 ops/s
# Warmup Iteration   2: 73.792 ops/s
# Warmup Iteration   3: 73.774 ops/s
# Warmup Iteration   4: 73.816 ops/s
# Warmup Iteration   5: 72.713 ops/s
Iteration   1: 72.426 ops/s
Iteration   2: 68.931 ops/s
Iteration   3: 70.478 ops/s
Iteration   4: 72.158 ops/s
Iteration   5: 67.062 ops/s


Result "com.gs.collections.impl.jmh.SetAddAllTest.jdk":
  70.823 ±(99.9%) 1.483 ops/s [Average]
  (min, avg, max) = (66.881, 70.823, 73.712), stdev = 1.980
  CI (99.9%): [69.340, 72.307] (assumes normal distribution)


# Run complete. Total time: 00:16:43

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark           Mode  Cnt    Score   Error  Units
SetAddAllTest.gsc  thrpt   25  134.303 ± 4.367  ops/s
SetAddAllTest.jdk  thrpt   25   70.823 ± 1.483  ops/s

Benchmark result is saved to gs-collections/exp-RETU-out-jdk8/gs-collections-RETU-DEAD_SetAddAllTest_retu_trial1.csv
