# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.charArray
# Parameters: (nanos = 1000)

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 79.056 ns/op
# Warmup Iteration   2: 64.479 ns/op
# Warmup Iteration   3: 63.360 ns/op
# Warmup Iteration   4: 65.285 ns/op
# Warmup Iteration   5: 65.249 ns/op
Iteration   1: 61.851 ns/op
Iteration   2: 61.786 ns/op
Iteration   3: 61.876 ns/op
Iteration   4: 61.904 ns/op
Iteration   5: 61.833 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.charArray":
  61.850 ±(99.9%) 0.171 ns/op [Average]
  (min, avg, max) = (61.786, 61.850, 61.904), stdev = 0.045
  CI (99.9%): [61.679, 62.021] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.charArray
# Parameters: (nanos = 1000000)

# Run progress: 16.67% complete, ETA 00:00:50
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 54.816 ns/op
# Warmup Iteration   2: 48.678 ns/op
# Warmup Iteration   3: 48.976 ns/op
# Warmup Iteration   4: 48.988 ns/op
# Warmup Iteration   5: 49.242 ns/op
Iteration   1: 48.960 ns/op
Iteration   2: 48.727 ns/op
Iteration   3: 48.928 ns/op
Iteration   4: 49.036 ns/op
Iteration   5: 48.818 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.charArray":
  48.894 ±(99.9%) 0.468 ns/op [Average]
  (min, avg, max) = (48.727, 48.894, 49.036), stdev = 0.122
  CI (99.9%): [48.425, 49.362] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.charArray
# Parameters: (nanos = 100000000)

# Run progress: 33.33% complete, ETA 00:00:40
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 53.773 ns/op
# Warmup Iteration   2: 53.755 ns/op
# Warmup Iteration   3: 61.554 ns/op
# Warmup Iteration   4: 57.669 ns/op
# Warmup Iteration   5: 53.839 ns/op
Iteration   1: 60.910 ns/op
Iteration   2: 66.554 ns/op
Iteration   3: 66.328 ns/op
Iteration   4: 54.215 ns/op
Iteration   5: 53.943 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.charArray":
  60.390 ±(99.9%) 23.832 ns/op [Average]
  (min, avg, max) = (53.943, 60.390, 66.554), stdev = 6.189
  CI (99.9%): [36.558, 84.222] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.insert
# Parameters: (nanos = 1000)

# Run progress: 50.00% complete, ETA 00:00:30
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 43.590 ns/op
# Warmup Iteration   2: 28.609 ns/op
# Warmup Iteration   3: 27.774 ns/op
# Warmup Iteration   4: 27.762 ns/op
# Warmup Iteration   5: 27.766 ns/op
Iteration   1: 27.942 ns/op
Iteration   2: 27.766 ns/op
Iteration   3: 27.775 ns/op
Iteration   4: 27.772 ns/op
Iteration   5: 27.781 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.insert":
  27.807 ±(99.9%) 0.292 ns/op [Average]
  (min, avg, max) = (27.766, 27.807, 27.942), stdev = 0.076
  CI (99.9%): [27.516, 28.099] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.insert
# Parameters: (nanos = 1000000)

# Run progress: 66.67% complete, ETA 00:00:20
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 35.723 ns/op
# Warmup Iteration   2: 36.194 ns/op
# Warmup Iteration   3: 35.982 ns/op
# Warmup Iteration   4: 35.880 ns/op
# Warmup Iteration   5: 35.655 ns/op
Iteration   1: 36.075 ns/op
Iteration   2: 36.181 ns/op
Iteration   3: 35.892 ns/op
Iteration   4: 36.384 ns/op
Iteration   5: 35.601 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.insert":
  36.027 ±(99.9%) 1.144 ns/op [Average]
  (min, avg, max) = (35.601, 36.027, 36.384), stdev = 0.297
  CI (99.9%): [34.882, 37.171] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.insert
# Parameters: (nanos = 100000000)

# Run progress: 83.33% complete, ETA 00:00:10
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 27.002 ns/op
# Warmup Iteration   2: 26.954 ns/op
# Warmup Iteration   3: 26.809 ns/op
# Warmup Iteration   4: 26.933 ns/op
# Warmup Iteration   5: 26.915 ns/op
Iteration   1: 26.923 ns/op
Iteration   2: 26.803 ns/op
Iteration   3: 26.931 ns/op
Iteration   4: 26.809 ns/op
Iteration   5: 26.777 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.insert":
  26.849 ±(99.9%) 0.280 ns/op [Average]
  (min, avg, max) = (26.777, 26.849, 26.931), stdev = 0.073
  CI (99.9%): [26.568, 27.129] (assumes normal distribution)


# Run complete. Total time: 00:01:00

Benchmark                    (nanos)  Mode  Cnt   Score    Error  Units
AddPaddingZeros.charArray       1000  avgt    5  61.850 ±  0.171  ns/op
AddPaddingZeros.charArray    1000000  avgt    5  48.894 ±  0.468  ns/op
AddPaddingZeros.charArray  100000000  avgt    5  60.390 ± 23.832  ns/op
AddPaddingZeros.insert          1000  avgt    5  27.807 ±  0.292  ns/op
AddPaddingZeros.insert       1000000  avgt    5  36.027 ±  1.144  ns/op
AddPaddingZeros.insert     100000000  avgt    5  26.849 ±  0.280  ns/op

Benchmark result is saved to exp-FORK-out/pgdbc_benchmarks_original_postgresql_benchmark_time_AddPaddingZeros_fork_trial6.csv
