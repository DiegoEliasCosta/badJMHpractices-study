# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.charArray
# Parameters: (nanos = 1000)

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 75.780 ns/op
# Warmup Iteration   2: 65.395 ns/op
# Warmup Iteration   3: 99.439 ns/op
# Warmup Iteration   4: 619.941 ns/op
# Warmup Iteration   5: 69.654 ns/op
Iteration   1: 63.598 ns/op
Iteration   2: 63.549 ns/op
Iteration   3: 63.497 ns/op
Iteration   4: 63.525 ns/op
Iteration   5: 63.531 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.charArray":
  63.540 ±(99.9%) 0.143 ns/op [Average]
  (min, avg, max) = (63.497, 63.540, 63.598), stdev = 0.037
  CI (99.9%): [63.397, 63.683] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.charArray
# Parameters: (nanos = 1000000)

# Run progress: 16.67% complete, ETA 00:00:50
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 54.398 ns/op
# Warmup Iteration   2: 48.816 ns/op
# Warmup Iteration   3: 49.014 ns/op
# Warmup Iteration   4: 49.155 ns/op
# Warmup Iteration   5: 49.054 ns/op
Iteration   1: 49.238 ns/op
Iteration   2: 55.355 ns/op
Iteration   3: 54.504 ns/op
Iteration   4: 61.066 ns/op
Iteration   5: 49.226 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.charArray":
  53.878 ±(99.9%) 19.002 ns/op [Average]
  (min, avg, max) = (49.226, 53.878, 61.066), stdev = 4.935
  CI (99.9%): [34.876, 72.880] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.charArray
# Parameters: (nanos = 100000000)

# Run progress: 33.33% complete, ETA 00:00:40
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 66.110 ns/op
# Warmup Iteration   2: 53.200 ns/op
# Warmup Iteration   3: 53.416 ns/op
# Warmup Iteration   4: 53.216 ns/op
# Warmup Iteration   5: 53.223 ns/op
Iteration   1: 53.382 ns/op
Iteration   2: 53.279 ns/op
Iteration   3: 53.383 ns/op
Iteration   4: 53.281 ns/op
Iteration   5: 53.289 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.charArray":
  53.323 ±(99.9%) 0.210 ns/op [Average]
  (min, avg, max) = (53.279, 53.323, 53.383), stdev = 0.055
  CI (99.9%): [53.113, 53.533] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.insert
# Parameters: (nanos = 1000)

# Run progress: 50.00% complete, ETA 00:00:30
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 35.877 ns/op
# Warmup Iteration   2: 28.656 ns/op
# Warmup Iteration   3: 27.513 ns/op
# Warmup Iteration   4: 27.543 ns/op
# Warmup Iteration   5: 27.513 ns/op
Iteration   1: 27.524 ns/op
Iteration   2: 27.513 ns/op
Iteration   3: 27.518 ns/op
Iteration   4: 27.874 ns/op
Iteration   5: 27.543 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.insert":
  27.595 ±(99.9%) 0.603 ns/op [Average]
  (min, avg, max) = (27.513, 27.595, 27.874), stdev = 0.157
  CI (99.9%): [26.992, 28.197] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.insert
# Parameters: (nanos = 1000000)

# Run progress: 66.67% complete, ETA 00:00:20
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 37.001 ns/op
# Warmup Iteration   2: 37.039 ns/op
# Warmup Iteration   3: 36.978 ns/op
# Warmup Iteration   4: 37.107 ns/op
# Warmup Iteration   5: 37.000 ns/op
Iteration   1: 37.058 ns/op
Iteration   2: 37.661 ns/op
Iteration   3: 37.502 ns/op
Iteration   4: 37.580 ns/op
Iteration   5: 37.707 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.insert":
  37.502 ±(99.9%) 1.001 ns/op [Average]
  (min, avg, max) = (37.058, 37.502, 37.707), stdev = 0.260
  CI (99.9%): [36.500, 38.503] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.insert
# Parameters: (nanos = 100000000)

# Run progress: 83.33% complete, ETA 00:00:10
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 26.670 ns/op
# Warmup Iteration   2: 26.594 ns/op
# Warmup Iteration   3: 26.605 ns/op
# Warmup Iteration   4: 26.596 ns/op
# Warmup Iteration   5: 26.586 ns/op
Iteration   1: 26.601 ns/op
Iteration   2: 26.436 ns/op
Iteration   3: 26.602 ns/op
Iteration   4: 26.592 ns/op
Iteration   5: 26.612 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.insert":
  26.569 ±(99.9%) 0.286 ns/op [Average]
  (min, avg, max) = (26.436, 26.569, 26.612), stdev = 0.074
  CI (99.9%): [26.283, 26.855] (assumes normal distribution)


# Run complete. Total time: 00:01:00

Benchmark                    (nanos)  Mode  Cnt   Score    Error  Units
AddPaddingZeros.charArray       1000  avgt    5  63.540 ±  0.143  ns/op
AddPaddingZeros.charArray    1000000  avgt    5  53.878 ± 19.002  ns/op
AddPaddingZeros.charArray  100000000  avgt    5  53.323 ±  0.210  ns/op
AddPaddingZeros.insert          1000  avgt    5  27.595 ±  0.603  ns/op
AddPaddingZeros.insert       1000000  avgt    5  37.502 ±  1.001  ns/op
AddPaddingZeros.insert     100000000  avgt    5  26.569 ±  0.286  ns/op

Benchmark result is saved to exp-FORK-out/pgdbc_benchmarks_original_postgresql_benchmark_time_AddPaddingZeros_fork_trial3.csv
