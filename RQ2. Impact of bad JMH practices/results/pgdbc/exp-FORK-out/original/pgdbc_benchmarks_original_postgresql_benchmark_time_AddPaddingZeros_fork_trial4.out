# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.charArray
# Parameters: (nanos = 1000)

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 85.580 ns/op
# Warmup Iteration   2: 79.627 ns/op
# Warmup Iteration   3: 82.777 ns/op
# Warmup Iteration   4: 65.611 ns/op
# Warmup Iteration   5: 65.491 ns/op
Iteration   1: 63.984 ns/op
Iteration   2: 63.964 ns/op
Iteration   3: 63.795 ns/op
Iteration   4: 63.974 ns/op
Iteration   5: 74.687 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.charArray":
  66.081 ±(99.9%) 18.528 ns/op [Average]
  (min, avg, max) = (63.795, 66.081, 74.687), stdev = 4.812
  CI (99.9%): [47.553, 84.609] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.charArray
# Parameters: (nanos = 1000000)

# Run progress: 16.67% complete, ETA 00:00:50
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 56.084 ns/op
# Warmup Iteration   2: 49.329 ns/op
# Warmup Iteration   3: 49.258 ns/op
# Warmup Iteration   4: 49.343 ns/op
# Warmup Iteration   5: 49.282 ns/op
Iteration   1: 49.188 ns/op
Iteration   2: 49.446 ns/op
Iteration   3: 49.334 ns/op
Iteration   4: 49.454 ns/op
Iteration   5: 49.343 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.charArray":
  49.353 ±(99.9%) 0.416 ns/op [Average]
  (min, avg, max) = (49.188, 49.353, 49.454), stdev = 0.108
  CI (99.9%): [48.937, 49.769] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.charArray
# Parameters: (nanos = 100000000)

# Run progress: 33.33% complete, ETA 00:00:40
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 66.618 ns/op
# Warmup Iteration   2: 53.017 ns/op
# Warmup Iteration   3: 52.965 ns/op
# Warmup Iteration   4: 53.078 ns/op
# Warmup Iteration   5: 53.061 ns/op
Iteration   1: 53.091 ns/op
Iteration   2: 53.011 ns/op
Iteration   3: 53.064 ns/op
Iteration   4: 53.077 ns/op
Iteration   5: 59.591 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.charArray":
  54.367 ±(99.9%) 11.246 ns/op [Average]
  (min, avg, max) = (53.011, 54.367, 59.591), stdev = 2.920
  CI (99.9%): [43.121, 65.612] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.insert
# Parameters: (nanos = 1000)

# Run progress: 50.00% complete, ETA 00:00:30
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 36.242 ns/op
# Warmup Iteration   2: 28.551 ns/op
# Warmup Iteration   3: 27.486 ns/op
# Warmup Iteration   4: 27.469 ns/op
# Warmup Iteration   5: 27.466 ns/op
Iteration   1: 27.527 ns/op
Iteration   2: 27.466 ns/op
Iteration   3: 27.510 ns/op
Iteration   4: 27.935 ns/op
Iteration   5: 27.500 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.insert":
  27.588 ±(99.9%) 0.752 ns/op [Average]
  (min, avg, max) = (27.466, 27.588, 27.935), stdev = 0.195
  CI (99.9%): [26.836, 28.340] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.insert
# Parameters: (nanos = 1000000)

# Run progress: 66.67% complete, ETA 00:00:20
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 35.835 ns/op
# Warmup Iteration   2: 36.338 ns/op
# Warmup Iteration   3: 36.737 ns/op
# Warmup Iteration   4: 36.314 ns/op
# Warmup Iteration   5: 36.269 ns/op
Iteration   1: 36.524 ns/op
Iteration   2: 36.456 ns/op
Iteration   3: 36.877 ns/op
Iteration   4: 36.437 ns/op
Iteration   5: 36.077 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.insert":
  36.474 ±(99.9%) 1.096 ns/op [Average]
  (min, avg, max) = (36.077, 36.474, 36.877), stdev = 0.285
  CI (99.9%): [35.378, 37.570] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.insert
# Parameters: (nanos = 100000000)

# Run progress: 83.33% complete, ETA 00:00:10
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 28.452 ns/op
# Warmup Iteration   2: 28.404 ns/op
# Warmup Iteration   3: 28.444 ns/op
# Warmup Iteration   4: 28.310 ns/op
# Warmup Iteration   5: 28.446 ns/op
Iteration   1: 28.493 ns/op
Iteration   2: 28.467 ns/op
Iteration   3: 28.451 ns/op
Iteration   4: 28.347 ns/op
Iteration   5: 28.397 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.insert":
  28.431 ±(99.9%) 0.226 ns/op [Average]
  (min, avg, max) = (28.347, 28.431, 28.493), stdev = 0.059
  CI (99.9%): [28.205, 28.657] (assumes normal distribution)


# Run complete. Total time: 00:01:00

Benchmark                    (nanos)  Mode  Cnt   Score    Error  Units
AddPaddingZeros.charArray       1000  avgt    5  66.081 ± 18.528  ns/op
AddPaddingZeros.charArray    1000000  avgt    5  49.353 ±  0.416  ns/op
AddPaddingZeros.charArray  100000000  avgt    5  54.367 ± 11.246  ns/op
AddPaddingZeros.insert          1000  avgt    5  27.588 ±  0.752  ns/op
AddPaddingZeros.insert       1000000  avgt    5  36.474 ±  1.096  ns/op
AddPaddingZeros.insert     100000000  avgt    5  28.431 ±  0.226  ns/op

Benchmark result is saved to exp-FORK-out/pgdbc_benchmarks_original_postgresql_benchmark_time_AddPaddingZeros_fork_trial4.csv
