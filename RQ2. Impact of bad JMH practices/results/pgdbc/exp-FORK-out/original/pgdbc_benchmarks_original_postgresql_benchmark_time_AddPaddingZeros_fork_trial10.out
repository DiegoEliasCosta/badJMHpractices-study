# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.charArray
# Parameters: (nanos = 1000)

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 76.060 ns/op
# Warmup Iteration   2: 65.841 ns/op
# Warmup Iteration   3: 66.865 ns/op
# Warmup Iteration   4: 63.692 ns/op
# Warmup Iteration   5: 63.657 ns/op
Iteration   1: 63.752 ns/op
Iteration   2: 63.748 ns/op
Iteration   3: 63.640 ns/op
Iteration   4: 63.804 ns/op
Iteration   5: 63.754 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.charArray":
  63.740 ±(99.9%) 0.231 ns/op [Average]
  (min, avg, max) = (63.640, 63.740, 63.804), stdev = 0.060
  CI (99.9%): [63.508, 63.971] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.charArray
# Parameters: (nanos = 1000000)

# Run progress: 16.67% complete, ETA 00:00:50
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 55.835 ns/op
# Warmup Iteration   2: 49.215 ns/op
# Warmup Iteration   3: 48.768 ns/op
# Warmup Iteration   4: 48.779 ns/op
# Warmup Iteration   5: 60.660 ns/op
Iteration   1: 48.815 ns/op
Iteration   2: 48.755 ns/op
Iteration   3: 48.838 ns/op
Iteration   4: 48.957 ns/op
Iteration   5: 49.112 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.charArray":
  48.895 ±(99.9%) 0.546 ns/op [Average]
  (min, avg, max) = (48.755, 48.895, 49.112), stdev = 0.142
  CI (99.9%): [48.349, 49.441] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.charArray
# Parameters: (nanos = 100000000)

# Run progress: 33.33% complete, ETA 00:00:40
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 68.015 ns/op
# Warmup Iteration   2: 53.011 ns/op
# Warmup Iteration   3: 53.020 ns/op
# Warmup Iteration   4: 53.138 ns/op
# Warmup Iteration   5: 53.203 ns/op
Iteration   1: 53.358 ns/op
Iteration   2: 53.327 ns/op
Iteration   3: 53.291 ns/op
Iteration   4: 53.241 ns/op
Iteration   5: 53.331 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.charArray":
  53.309 ±(99.9%) 0.173 ns/op [Average]
  (min, avg, max) = (53.241, 53.309, 53.358), stdev = 0.045
  CI (99.9%): [53.137, 53.482] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.insert
# Parameters: (nanos = 1000)

# Run progress: 50.00% complete, ETA 00:00:30
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 32.499 ns/op
# Warmup Iteration   2: 28.665 ns/op
# Warmup Iteration   3: 27.630 ns/op
# Warmup Iteration   4: 27.478 ns/op
# Warmup Iteration   5: 27.476 ns/op
Iteration   1: 27.474 ns/op
Iteration   2: 27.483 ns/op
Iteration   3: 27.482 ns/op
Iteration   4: 27.482 ns/op
Iteration   5: 27.475 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.insert":
  27.479 ±(99.9%) 0.017 ns/op [Average]
  (min, avg, max) = (27.474, 27.479, 27.483), stdev = 0.004
  CI (99.9%): [27.462, 27.497] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.insert
# Parameters: (nanos = 1000000)

# Run progress: 66.67% complete, ETA 00:00:20
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 36.911 ns/op
# Warmup Iteration   2: 36.911 ns/op
# Warmup Iteration   3: 36.784 ns/op
# Warmup Iteration   4: 36.733 ns/op
# Warmup Iteration   5: 36.724 ns/op
Iteration   1: 36.756 ns/op
Iteration   2: 36.920 ns/op
Iteration   3: 36.997 ns/op
Iteration   4: 37.074 ns/op
Iteration   5: 36.945 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.insert":
  36.938 ±(99.9%) 0.453 ns/op [Average]
  (min, avg, max) = (36.756, 36.938, 37.074), stdev = 0.118
  CI (99.9%): [36.486, 37.391] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.insert
# Parameters: (nanos = 100000000)

# Run progress: 83.33% complete, ETA 00:00:10
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 28.141 ns/op
# Warmup Iteration   2: 28.032 ns/op
# Warmup Iteration   3: 28.030 ns/op
# Warmup Iteration   4: 28.054 ns/op
# Warmup Iteration   5: 27.956 ns/op
Iteration   1: 28.041 ns/op
Iteration   2: 28.042 ns/op
Iteration   3: 28.037 ns/op
Iteration   4: 28.051 ns/op
Iteration   5: 28.035 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.insert":
  28.041 ±(99.9%) 0.023 ns/op [Average]
  (min, avg, max) = (28.035, 28.041, 28.051), stdev = 0.006
  CI (99.9%): [28.018, 28.065] (assumes normal distribution)


# Run complete. Total time: 00:01:00

Benchmark                    (nanos)  Mode  Cnt   Score   Error  Units
AddPaddingZeros.charArray       1000  avgt    5  63.740 ± 0.231  ns/op
AddPaddingZeros.charArray    1000000  avgt    5  48.895 ± 0.546  ns/op
AddPaddingZeros.charArray  100000000  avgt    5  53.309 ± 0.173  ns/op
AddPaddingZeros.insert          1000  avgt    5  27.479 ± 0.017  ns/op
AddPaddingZeros.insert       1000000  avgt    5  36.938 ± 0.453  ns/op
AddPaddingZeros.insert     100000000  avgt    5  28.041 ± 0.023  ns/op

Benchmark result is saved to exp-FORK-out/pgdbc_benchmarks_original_postgresql_benchmark_time_AddPaddingZeros_fork_trial10.csv
