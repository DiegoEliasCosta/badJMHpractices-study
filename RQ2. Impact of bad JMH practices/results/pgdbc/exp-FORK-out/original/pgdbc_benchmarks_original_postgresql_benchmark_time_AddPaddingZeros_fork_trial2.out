# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.charArray
# Parameters: (nanos = 1000)

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 75.040 ns/op
# Warmup Iteration   2: 87.005 ns/op
# Warmup Iteration   3: 65.747 ns/op
# Warmup Iteration   4: 64.014 ns/op
# Warmup Iteration   5: 63.976 ns/op
Iteration   1: 64.030 ns/op
Iteration   2: 64.115 ns/op
Iteration   3: 64.089 ns/op
Iteration   4: 64.074 ns/op
Iteration   5: 64.114 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.charArray":
  64.085 ±(99.9%) 0.134 ns/op [Average]
  (min, avg, max) = (64.030, 64.085, 64.115), stdev = 0.035
  CI (99.9%): [63.950, 64.219] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.charArray
# Parameters: (nanos = 1000000)

# Run progress: 16.67% complete, ETA 00:00:50
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 57.381 ns/op
# Warmup Iteration   2: 49.476 ns/op
# Warmup Iteration   3: 49.203 ns/op
# Warmup Iteration   4: 49.238 ns/op
# Warmup Iteration   5: 49.305 ns/op
Iteration   1: 49.153 ns/op
Iteration   2: 49.104 ns/op
Iteration   3: 49.166 ns/op
Iteration   4: 49.219 ns/op
Iteration   5: 49.064 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.charArray":
  49.141 ±(99.9%) 0.230 ns/op [Average]
  (min, avg, max) = (49.064, 49.141, 49.219), stdev = 0.060
  CI (99.9%): [48.911, 49.371] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.charArray
# Parameters: (nanos = 100000000)

# Run progress: 33.33% complete, ETA 00:00:40
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 54.283 ns/op
# Warmup Iteration   2: 54.320 ns/op
# Warmup Iteration   3: 54.350 ns/op
# Warmup Iteration   4: 54.352 ns/op
# Warmup Iteration   5: 54.258 ns/op
Iteration   1: 54.460 ns/op
Iteration   2: 54.371 ns/op
Iteration   3: 54.417 ns/op
Iteration   4: 54.228 ns/op
Iteration   5: 54.332 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.charArray":
  54.362 ±(99.9%) 0.343 ns/op [Average]
  (min, avg, max) = (54.228, 54.362, 54.460), stdev = 0.089
  CI (99.9%): [54.019, 54.704] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.insert
# Parameters: (nanos = 1000)

# Run progress: 50.00% complete, ETA 00:00:30
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 44.752 ns/op
# Warmup Iteration   2: 28.720 ns/op
# Warmup Iteration   3: 27.949 ns/op
# Warmup Iteration   4: 27.956 ns/op
# Warmup Iteration   5: 27.950 ns/op
Iteration   1: 28.102 ns/op
Iteration   2: 27.908 ns/op
Iteration   3: 27.946 ns/op
Iteration   4: 27.999 ns/op
Iteration   5: 27.978 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.insert":
  27.987 ±(99.9%) 0.281 ns/op [Average]
  (min, avg, max) = (27.908, 27.987, 28.102), stdev = 0.073
  CI (99.9%): [27.706, 28.267] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.insert
# Parameters: (nanos = 1000000)

# Run progress: 66.67% complete, ETA 00:00:20
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 45.838 ns/op
# Warmup Iteration   2: 36.723 ns/op
# Warmup Iteration   3: 36.783 ns/op
# Warmup Iteration   4: 36.801 ns/op
# Warmup Iteration   5: 36.775 ns/op
Iteration   1: 36.741 ns/op
Iteration   2: 36.922 ns/op
Iteration   3: 36.926 ns/op
Iteration   4: 37.090 ns/op
Iteration   5: 37.072 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.insert":
  36.950 ±(99.9%) 0.543 ns/op [Average]
  (min, avg, max) = (36.741, 36.950, 37.090), stdev = 0.141
  CI (99.9%): [36.407, 37.494] (assumes normal distribution)


# JMH 1.17.4 (released 441 days ago, please consider updating!)
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.postgresql.benchmark.time.AddPaddingZeros.insert
# Parameters: (nanos = 100000000)

# Run progress: 83.33% complete, ETA 00:00:10
# Fork: N/A, test runs in the host VM
# *** WARNING: Non-forked runs may silently omit JVM options, mess up profilers, disable compiler hints, etc. ***
# *** WARNING: Use non-forked runs only for debugging purposes, not for actual performance runs. ***
# Warmup Iteration   1: 32.974 ns/op
# Warmup Iteration   2: 26.584 ns/op
# Warmup Iteration   3: 26.641 ns/op
# Warmup Iteration   4: 26.584 ns/op
# Warmup Iteration   5: 26.587 ns/op
Iteration   1: 26.627 ns/op
Iteration   2: 26.579 ns/op
Iteration   3: 26.578 ns/op
Iteration   4: 26.589 ns/op
Iteration   5: 26.688 ns/op

Result "org.postgresql.benchmark.time.AddPaddingZeros.insert":
  26.612 ±(99.9%) 0.181 ns/op [Average]
  (min, avg, max) = (26.578, 26.612, 26.688), stdev = 0.047
  CI (99.9%): [26.432, 26.793] (assumes normal distribution)


# Run complete. Total time: 00:01:00

Benchmark                    (nanos)  Mode  Cnt   Score   Error  Units
AddPaddingZeros.charArray       1000  avgt    5  64.085 ± 0.134  ns/op
AddPaddingZeros.charArray    1000000  avgt    5  49.141 ± 0.230  ns/op
AddPaddingZeros.charArray  100000000  avgt    5  54.362 ± 0.343  ns/op
AddPaddingZeros.insert          1000  avgt    5  27.987 ± 0.281  ns/op
AddPaddingZeros.insert       1000000  avgt    5  36.950 ± 0.543  ns/op
AddPaddingZeros.insert     100000000  avgt    5  26.612 ± 0.181  ns/op

Benchmark result is saved to exp-FORK-out/pgdbc_benchmarks_original_postgresql_benchmark_time_AddPaddingZeros_fork_trial2.csv
