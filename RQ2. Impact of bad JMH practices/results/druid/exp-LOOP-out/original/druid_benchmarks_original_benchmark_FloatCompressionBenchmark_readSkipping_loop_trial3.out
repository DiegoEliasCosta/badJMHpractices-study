# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FilterPartitionBenchmark.timeFilterNone
# Parameters: (rowsPerSegment = 750000, schema = basic)

# Run progress: 0.00% complete, ETA 00:06:25
# Fork: 1 of 1
# Warmup Iteration   1: 123178.050 us/op
# Warmup Iteration   2: 115817.822 us/op
# Warmup Iteration   3: 138179.527 us/op
# Warmup Iteration   4: 115803.979 us/op
# Warmup Iteration   5: 115671.734 us/op
# Warmup Iteration   6: 163504.194 us/op
# Warmup Iteration   7: 118609.144 us/op
# Warmup Iteration   8: 115291.638 us/op
# Warmup Iteration   9: 115313.362 us/op
# Warmup Iteration  10: 133568.727 us/op
Iteration   1: 131838.913 us/op
Iteration   2: 115396.543 us/op
Iteration   3: 115504.804 us/op
Iteration   4: 162360.250 us/op
Iteration   5: 118361.938 us/op
Iteration   6: 115329.356 us/op
Iteration   7: 115720.320 us/op
Iteration   8: 115801.961 us/op
Iteration   9: 146677.508 us/op
Iteration  10: 130223.077 us/op
Iteration  11: 115492.492 us/op
Iteration  12: 115418.313 us/op
Iteration  13: 115610.571 us/op
Iteration  14: 173595.726 us/op
Iteration  15: 121105.617 us/op
Iteration  16: 115475.679 us/op
Iteration  17: 115649.603 us/op
Iteration  18: 121438.398 us/op
Iteration  19: 122879.460 us/op
Iteration  20: 156153.482 us/op
Iteration  21: 127513.768 us/op
Iteration  22: 115336.251 us/op
Iteration  23: 115296.510 us/op
Iteration  24: 115384.992 us/op
Iteration  25: 115403.789 us/op


Result "io.druid.benchmark.FilterPartitionBenchmark.timeFilterNone":
  125158.773 ±(99.9%) 12441.968 us/op [Average]
  (min, avg, max) = (115296.510, 125158.773, 173595.726), stdev = 16609.671
  CI (99.9%): [112716.805, 137600.741] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readSkipping
# Parameters: (dirPath = floatCompress/, file = enumerate, strategy = lz4)

# Run progress: 9.09% complete, ETA 00:09:33
# Fork: 1 of 1
# Warmup Iteration   1: 5.042 ms/op
# Warmup Iteration   2: 3.263 ms/op
# Warmup Iteration   3: 3.097 ms/op
# Warmup Iteration   4: 3.098 ms/op
# Warmup Iteration   5: 3.097 ms/op
# Warmup Iteration   6: 3.097 ms/op
# Warmup Iteration   7: 3.097 ms/op
# Warmup Iteration   8: 3.097 ms/op
# Warmup Iteration   9: 3.097 ms/op
# Warmup Iteration  10: 3.097 ms/op
Iteration   1: 3.098 ms/op
Iteration   2: 3.096 ms/op
Iteration   3: 3.097 ms/op
Iteration   4: 3.097 ms/op
Iteration   5: 3.097 ms/op
Iteration   6: 3.131 ms/op
Iteration   7: 3.094 ms/op
Iteration   8: 3.095 ms/op
Iteration   9: 3.093 ms/op
Iteration  10: 3.092 ms/op
Iteration  11: 3.093 ms/op
Iteration  12: 3.093 ms/op
Iteration  13: 3.092 ms/op
Iteration  14: 3.094 ms/op
Iteration  15: 3.093 ms/op
Iteration  16: 3.092 ms/op
Iteration  17: 3.126 ms/op
Iteration  18: 3.331 ms/op
Iteration  19: 3.093 ms/op
Iteration  20: 3.092 ms/op
Iteration  21: 3.093 ms/op
Iteration  22: 3.093 ms/op
Iteration  23: 3.126 ms/op
Iteration  24: 3.092 ms/op
Iteration  25: 3.094 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readSkipping":
  3.107 ±(99.9%) 0.036 ms/op [Average]
  (min, avg, max) = (3.092, 3.107, 3.331), stdev = 0.048
  CI (99.9%): [3.072, 3.143] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readSkipping
# Parameters: (dirPath = floatCompress/, file = enumerate, strategy = none)

# Run progress: 18.18% complete, ETA 00:06:58
# Fork: 1 of 1
# Warmup Iteration   1: 0.176 ms/op
# Warmup Iteration   2: 0.154 ms/op
# Warmup Iteration   3: 0.154 ms/op
# Warmup Iteration   4: 0.154 ms/op
# Warmup Iteration   5: 0.154 ms/op
# Warmup Iteration   6: 0.154 ms/op
# Warmup Iteration   7: 0.154 ms/op
# Warmup Iteration   8: 0.154 ms/op
# Warmup Iteration   9: 0.154 ms/op
# Warmup Iteration  10: 0.154 ms/op
Iteration   1: 0.153 ms/op
Iteration   2: 0.154 ms/op
Iteration   3: 0.153 ms/op
Iteration   4: 0.153 ms/op
Iteration   5: 0.153 ms/op
Iteration   6: 0.155 ms/op
Iteration   7: 0.155 ms/op
Iteration   8: 0.153 ms/op
Iteration   9: 0.153 ms/op
Iteration  10: 0.154 ms/op
Iteration  11: 0.153 ms/op
Iteration  12: 0.153 ms/op
Iteration  13: 0.153 ms/op
Iteration  14: 0.154 ms/op
Iteration  15: 0.153 ms/op
Iteration  16: 0.154 ms/op
Iteration  17: 0.154 ms/op
Iteration  18: 0.153 ms/op
Iteration  19: 0.153 ms/op
Iteration  20: 0.153 ms/op
Iteration  21: 0.153 ms/op
Iteration  22: 0.154 ms/op
Iteration  23: 0.153 ms/op
Iteration  24: 0.154 ms/op
Iteration  25: 0.153 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readSkipping":
  0.154 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.153, 0.154, 0.155), stdev = 0.001
  CI (99.9%): [0.153, 0.154] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readSkipping
# Parameters: (dirPath = floatCompress/, file = zipfLow, strategy = lz4)

# Run progress: 27.27% complete, ETA 00:05:42
# Fork: 1 of 1
# Warmup Iteration   1: 15.286 ms/op
# Warmup Iteration   2: 9.837 ms/op
# Warmup Iteration   3: 9.834 ms/op
# Warmup Iteration   4: 9.846 ms/op
# Warmup Iteration   5: 9.831 ms/op
# Warmup Iteration   6: 9.831 ms/op
# Warmup Iteration   7: 9.834 ms/op
# Warmup Iteration   8: 9.837 ms/op
# Warmup Iteration   9: 9.832 ms/op
# Warmup Iteration  10: 9.832 ms/op
Iteration   1: 9.829 ms/op
Iteration   2: 9.830 ms/op
Iteration   3: 9.829 ms/op
Iteration   4: 9.832 ms/op
Iteration   5: 9.829 ms/op
Iteration   6: 9.831 ms/op
Iteration   7: 9.840 ms/op
Iteration   8: 9.838 ms/op
Iteration   9: 9.836 ms/op
Iteration  10: 9.836 ms/op
Iteration  11: 9.839 ms/op
Iteration  12: 9.838 ms/op
Iteration  13: 9.837 ms/op
Iteration  14: 9.837 ms/op
Iteration  15: 9.835 ms/op
Iteration  16: 9.839 ms/op
Iteration  17: 9.834 ms/op
Iteration  18: 9.834 ms/op
Iteration  19: 9.839 ms/op
Iteration  20: 9.840 ms/op
Iteration  21: 9.834 ms/op
Iteration  22: 9.835 ms/op
Iteration  23: 9.836 ms/op
Iteration  24: 9.835 ms/op
Iteration  25: 9.834 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readSkipping":
  9.835 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (9.829, 9.835, 9.840), stdev = 0.003
  CI (99.9%): [9.832, 9.838] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readSkipping
# Parameters: (dirPath = floatCompress/, file = zipfLow, strategy = none)

# Run progress: 36.36% complete, ETA 00:04:46
# Fork: 1 of 1
# Warmup Iteration   1: 0.172 ms/op
# Warmup Iteration   2: 0.171 ms/op
# Warmup Iteration   3: 0.153 ms/op
# Warmup Iteration   4: 0.153 ms/op
# Warmup Iteration   5: 0.154 ms/op
# Warmup Iteration   6: 0.153 ms/op
# Warmup Iteration   7: 0.153 ms/op
# Warmup Iteration   8: 0.154 ms/op
# Warmup Iteration   9: 0.153 ms/op
# Warmup Iteration  10: 0.153 ms/op
Iteration   1: 0.152 ms/op
Iteration   2: 0.153 ms/op
Iteration   3: 0.153 ms/op
Iteration   4: 0.153 ms/op
Iteration   5: 0.153 ms/op
Iteration   6: 0.154 ms/op
Iteration   7: 0.153 ms/op
Iteration   8: 0.153 ms/op
Iteration   9: 0.153 ms/op
Iteration  10: 0.153 ms/op
Iteration  11: 0.153 ms/op
Iteration  12: 0.154 ms/op
Iteration  13: 0.153 ms/op
Iteration  14: 0.153 ms/op
Iteration  15: 0.153 ms/op
Iteration  16: 0.153 ms/op
Iteration  17: 0.153 ms/op
Iteration  18: 0.153 ms/op
Iteration  19: 0.153 ms/op
Iteration  20: 0.153 ms/op
Iteration  21: 0.153 ms/op
Iteration  22: 0.153 ms/op
Iteration  23: 0.153 ms/op
Iteration  24: 0.153 ms/op
Iteration  25: 0.153 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readSkipping":
  0.153 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.152, 0.153, 0.154), stdev = 0.001
  CI (99.9%): [0.153, 0.153] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readSkipping
# Parameters: (dirPath = floatCompress/, file = zipfHigh, strategy = lz4)

# Run progress: 45.45% complete, ETA 00:03:59
# Fork: 1 of 1
# Warmup Iteration   1: 8.090 ms/op
# Warmup Iteration   2: 5.346 ms/op
# Warmup Iteration   3: 5.346 ms/op
# Warmup Iteration   4: 5.344 ms/op
# Warmup Iteration   5: 5.342 ms/op
# Warmup Iteration   6: 5.344 ms/op
# Warmup Iteration   7: 5.343 ms/op
# Warmup Iteration   8: 5.341 ms/op
# Warmup Iteration   9: 5.343 ms/op
# Warmup Iteration  10: 5.343 ms/op
Iteration   1: 5.343 ms/op
Iteration   2: 5.343 ms/op
Iteration   3: 5.343 ms/op
Iteration   4: 5.344 ms/op
Iteration   5: 5.342 ms/op
Iteration   6: 5.341 ms/op
Iteration   7: 5.345 ms/op
Iteration   8: 5.344 ms/op
Iteration   9: 5.343 ms/op
Iteration  10: 5.343 ms/op
Iteration  11: 5.344 ms/op
Iteration  12: 5.342 ms/op
Iteration  13: 5.343 ms/op
Iteration  14: 5.344 ms/op
Iteration  15: 5.343 ms/op
Iteration  16: 5.345 ms/op
Iteration  17: 5.384 ms/op
Iteration  18: 5.329 ms/op
Iteration  19: 5.342 ms/op
Iteration  20: 5.350 ms/op
Iteration  21: 5.341 ms/op
Iteration  22: 5.340 ms/op
Iteration  23: 5.341 ms/op
Iteration  24: 5.342 ms/op
Iteration  25: 5.341 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readSkipping":
  5.344 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (5.329, 5.344, 5.384), stdev = 0.009
  CI (99.9%): [5.337, 5.351] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readSkipping
# Parameters: (dirPath = floatCompress/, file = zipfHigh, strategy = none)

# Run progress: 54.55% complete, ETA 00:03:15
# Fork: 1 of 1
# Warmup Iteration   1: 0.172 ms/op
# Warmup Iteration   2: 0.154 ms/op
# Warmup Iteration   3: 0.153 ms/op
# Warmup Iteration   4: 0.153 ms/op
# Warmup Iteration   5: 0.153 ms/op
# Warmup Iteration   6: 0.153 ms/op
# Warmup Iteration   7: 0.153 ms/op
# Warmup Iteration   8: 0.153 ms/op
# Warmup Iteration   9: 0.153 ms/op
# Warmup Iteration  10: 0.153 ms/op
Iteration   1: 0.154 ms/op
Iteration   2: 0.153 ms/op
Iteration   3: 0.153 ms/op
Iteration   4: 0.153 ms/op
Iteration   5: 0.153 ms/op
Iteration   6: 0.154 ms/op
Iteration   7: 0.154 ms/op
Iteration   8: 0.153 ms/op
Iteration   9: 0.154 ms/op
Iteration  10: 0.153 ms/op
Iteration  11: 0.153 ms/op
Iteration  12: 0.153 ms/op
Iteration  13: 0.153 ms/op
Iteration  14: 0.153 ms/op
Iteration  15: 0.153 ms/op
Iteration  16: 0.153 ms/op
Iteration  17: 0.153 ms/op
Iteration  18: 0.153 ms/op
Iteration  19: 0.153 ms/op
Iteration  20: 0.153 ms/op
Iteration  21: 0.153 ms/op
Iteration  22: 0.153 ms/op
Iteration  23: 0.153 ms/op
Iteration  24: 0.153 ms/op
Iteration  25: 0.168 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readSkipping":
  0.154 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.153, 0.154, 0.168), stdev = 0.003
  CI (99.9%): [0.151, 0.156] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readSkipping
# Parameters: (dirPath = floatCompress/, file = sequential, strategy = lz4)

# Run progress: 63.64% complete, ETA 00:02:34
# Fork: 1 of 1
# Warmup Iteration   1: 6.140 ms/op
# Warmup Iteration   2: 3.975 ms/op
# Warmup Iteration   3: 3.970 ms/op
# Warmup Iteration   4: 3.972 ms/op
# Warmup Iteration   5: 3.970 ms/op
# Warmup Iteration   6: 3.969 ms/op
# Warmup Iteration   7: 3.970 ms/op
# Warmup Iteration   8: 3.970 ms/op
# Warmup Iteration   9: 3.969 ms/op
# Warmup Iteration  10: 3.970 ms/op
Iteration   1: 3.969 ms/op
Iteration   2: 3.969 ms/op
Iteration   3: 3.969 ms/op
Iteration   4: 3.969 ms/op
Iteration   5: 3.971 ms/op
Iteration   6: 3.969 ms/op
Iteration   7: 3.969 ms/op
Iteration   8: 3.969 ms/op
Iteration   9: 3.969 ms/op
Iteration  10: 4.003 ms/op
Iteration  11: 3.964 ms/op
Iteration  12: 3.966 ms/op
Iteration  13: 3.967 ms/op
Iteration  14: 3.963 ms/op
Iteration  15: 3.963 ms/op
Iteration  16: 3.965 ms/op
Iteration  17: 3.963 ms/op
Iteration  18: 3.966 ms/op
Iteration  19: 3.962 ms/op
Iteration  20: 3.963 ms/op
Iteration  21: 3.963 ms/op
Iteration  22: 3.963 ms/op
Iteration  23: 3.963 ms/op
Iteration  24: 3.964 ms/op
Iteration  25: 3.968 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readSkipping":
  3.968 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (3.962, 3.968, 4.003), stdev = 0.008
  CI (99.9%): [3.962, 3.973] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readSkipping
# Parameters: (dirPath = floatCompress/, file = sequential, strategy = none)

# Run progress: 72.73% complete, ETA 00:01:54
# Fork: 1 of 1
# Warmup Iteration   1: 0.171 ms/op
# Warmup Iteration   2: 0.152 ms/op
# Warmup Iteration   3: 0.152 ms/op
# Warmup Iteration   4: 0.153 ms/op
# Warmup Iteration   5: 0.152 ms/op
# Warmup Iteration   6: 0.152 ms/op
# Warmup Iteration   7: 0.152 ms/op
# Warmup Iteration   8: 0.152 ms/op
# Warmup Iteration   9: 0.152 ms/op
# Warmup Iteration  10: 0.152 ms/op
Iteration   1: 0.152 ms/op
Iteration   2: 0.152 ms/op
Iteration   3: 0.152 ms/op
Iteration   4: 0.152 ms/op
Iteration   5: 0.152 ms/op
Iteration   6: 0.153 ms/op
Iteration   7: 0.153 ms/op
Iteration   8: 0.152 ms/op
Iteration   9: 0.152 ms/op
Iteration  10: 0.152 ms/op
Iteration  11: 0.152 ms/op
Iteration  12: 0.152 ms/op
Iteration  13: 0.152 ms/op
Iteration  14: 0.152 ms/op
Iteration  15: 0.152 ms/op
Iteration  16: 0.152 ms/op
Iteration  17: 0.152 ms/op
Iteration  18: 0.152 ms/op
Iteration  19: 0.153 ms/op
Iteration  20: 0.152 ms/op
Iteration  21: 0.152 ms/op
Iteration  22: 0.152 ms/op
Iteration  23: 0.152 ms/op
Iteration  24: 0.152 ms/op
Iteration  25: 0.152 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readSkipping":
  0.152 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.152, 0.152, 0.153), stdev = 0.001
  CI (99.9%): [0.152, 0.152] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readSkipping
# Parameters: (dirPath = floatCompress/, file = uniform, strategy = lz4)

# Run progress: 81.82% complete, ETA 00:01:15
# Fork: 1 of 1
# Warmup Iteration   1: 3.292 ms/op
# Warmup Iteration   2: 2.148 ms/op
# Warmup Iteration   3: 2.142 ms/op
# Warmup Iteration   4: 2.145 ms/op
# Warmup Iteration   5: 2.143 ms/op
# Warmup Iteration   6: 2.142 ms/op
# Warmup Iteration   7: 2.143 ms/op
# Warmup Iteration   8: 2.145 ms/op
# Warmup Iteration   9: 2.143 ms/op
# Warmup Iteration  10: 2.143 ms/op
Iteration   1: 2.172 ms/op
Iteration   2: 2.135 ms/op
Iteration   3: 2.133 ms/op
Iteration   4: 2.131 ms/op
Iteration   5: 2.131 ms/op
Iteration   6: 2.131 ms/op
Iteration   7: 2.131 ms/op
Iteration   8: 2.131 ms/op
Iteration   9: 2.131 ms/op
Iteration  10: 2.131 ms/op
Iteration  11: 2.131 ms/op
Iteration  12: 2.132 ms/op
Iteration  13: 2.146 ms/op
Iteration  14: 2.134 ms/op
Iteration  15: 2.132 ms/op
Iteration  16: 2.132 ms/op
Iteration  17: 2.132 ms/op
Iteration  18: 2.132 ms/op
Iteration  19: 2.132 ms/op
Iteration  20: 2.132 ms/op
Iteration  21: 2.132 ms/op
Iteration  22: 2.132 ms/op
Iteration  23: 2.132 ms/op
Iteration  24: 2.132 ms/op
Iteration  25: 2.143 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readSkipping":
  2.135 ±(99.9%) 0.006 ms/op [Average]
  (min, avg, max) = (2.131, 2.135, 2.172), stdev = 0.009
  CI (99.9%): [2.128, 2.141] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readSkipping
# Parameters: (dirPath = floatCompress/, file = uniform, strategy = none)

# Run progress: 90.91% complete, ETA 00:00:37
# Fork: 1 of 1
# Warmup Iteration   1: 0.171 ms/op
# Warmup Iteration   2: 0.153 ms/op
# Warmup Iteration   3: 0.153 ms/op
# Warmup Iteration   4: 0.153 ms/op
# Warmup Iteration   5: 0.153 ms/op
# Warmup Iteration   6: 0.153 ms/op
# Warmup Iteration   7: 0.153 ms/op
# Warmup Iteration   8: 0.153 ms/op
# Warmup Iteration   9: 0.153 ms/op
# Warmup Iteration  10: 0.153 ms/op
Iteration   1: 0.153 ms/op
Iteration   2: 0.153 ms/op
Iteration   3: 0.153 ms/op
Iteration   4: 0.153 ms/op
Iteration   5: 0.153 ms/op
Iteration   6: 0.154 ms/op
Iteration   7: 0.153 ms/op
Iteration   8: 0.153 ms/op
Iteration   9: 0.153 ms/op
Iteration  10: 0.153 ms/op
Iteration  11: 0.153 ms/op
Iteration  12: 0.153 ms/op
Iteration  13: 0.153 ms/op
Iteration  14: 0.153 ms/op
Iteration  15: 0.153 ms/op
Iteration  16: 0.153 ms/op
Iteration  17: 0.153 ms/op
Iteration  18: 0.153 ms/op
Iteration  19: 0.153 ms/op
Iteration  20: 0.153 ms/op
Iteration  21: 0.153 ms/op
Iteration  22: 0.153 ms/op
Iteration  23: 0.153 ms/op
Iteration  24: 0.153 ms/op
Iteration  25: 0.153 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readSkipping":
  0.153 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.153, 0.153, 0.154), stdev = 0.001
  CI (99.9%): [0.153, 0.153] (assumes normal distribution)


# Run complete. Total time: 00:06:51

Benchmark                                     (dirPath)      (file)  (rowsPerSegment)  (schema)  (strategy)  Mode  Cnt       Score       Error  Units
FilterPartitionBenchmark.timeFilterNone             N/A         N/A            750000     basic         N/A  avgt   25  125158.773 ± 12441.968  us/op
FloatCompressionBenchmark.readSkipping   floatCompress/   enumerate               N/A       N/A         lz4  avgt   25       3.107 ±     0.036  ms/op
FloatCompressionBenchmark.readSkipping   floatCompress/   enumerate               N/A       N/A        none  avgt   25       0.154 ±     0.001  ms/op
FloatCompressionBenchmark.readSkipping   floatCompress/     zipfLow               N/A       N/A         lz4  avgt   25       9.835 ±     0.003  ms/op
FloatCompressionBenchmark.readSkipping   floatCompress/     zipfLow               N/A       N/A        none  avgt   25       0.153 ±     0.001  ms/op
FloatCompressionBenchmark.readSkipping   floatCompress/    zipfHigh               N/A       N/A         lz4  avgt   25       5.344 ±     0.007  ms/op
FloatCompressionBenchmark.readSkipping   floatCompress/    zipfHigh               N/A       N/A        none  avgt   25       0.154 ±     0.002  ms/op
FloatCompressionBenchmark.readSkipping   floatCompress/  sequential               N/A       N/A         lz4  avgt   25       3.968 ±     0.006  ms/op
FloatCompressionBenchmark.readSkipping   floatCompress/  sequential               N/A       N/A        none  avgt   25       0.152 ±     0.001  ms/op
FloatCompressionBenchmark.readSkipping   floatCompress/     uniform               N/A       N/A         lz4  avgt   25       2.135 ±     0.006  ms/op
FloatCompressionBenchmark.readSkipping   floatCompress/     uniform               N/A       N/A        none  avgt   25       0.153 ±     0.001  ms/op

Benchmark result is saved to exp-LOOP-out/druid_benchmarks_original_benchmark_FloatCompressionBenchmark_readSkipping_loop_trial3.csv
