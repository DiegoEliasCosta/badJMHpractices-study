# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FilterPartitionBenchmark.timeFilterNone
# Parameters: (rowsPerSegment = 750000, schema = basic)

# Run progress: 0.00% complete, ETA 00:06:25
# Fork: 1 of 1
# Warmup Iteration   1: 122158.552 us/op
# Warmup Iteration   2: 116065.106 us/op
# Warmup Iteration   3: 139108.575 us/op
# Warmup Iteration   4: 116110.358 us/op
# Warmup Iteration   5: 116008.232 us/op
# Warmup Iteration   6: 115952.645 us/op
# Warmup Iteration   7: 180217.938 us/op
# Warmup Iteration   8: 115803.190 us/op
# Warmup Iteration   9: 115861.006 us/op
# Warmup Iteration  10: 116005.297 us/op
Iteration   1: 148554.794 us/op
Iteration   2: 127833.186 us/op
Iteration   3: 115872.670 us/op
Iteration   4: 115876.947 us/op
Iteration   5: 115820.616 us/op
Iteration   6: 222871.770 us/op
Iteration   7: 120034.521 us/op
Iteration   8: 116019.564 us/op
Iteration   9: 116023.676 us/op
Iteration  10: 115990.480 us/op
Iteration  11: 132729.951 us/op
Iteration  12: 115800.482 us/op
Iteration  13: 116056.337 us/op
Iteration  14: 115846.164 us/op
Iteration  15: 115851.421 us/op
Iteration  16: 170653.278 us/op
Iteration  17: 115864.223 us/op
Iteration  18: 115912.349 us/op
Iteration  19: 115995.808 us/op
Iteration  20: 115925.894 us/op
Iteration  21: 115752.426 us/op
Iteration  22: 139353.739 us/op
Iteration  23: 132509.588 us/op
Iteration  24: 115793.206 us/op
Iteration  25: 115771.439 us/op


Result "io.druid.benchmark.FilterPartitionBenchmark.timeFilterNone":
  126588.581 ±(99.9%) 18040.175 us/op [Average]
  (min, avg, max) = (115752.426, 126588.581, 222871.770), stdev = 24083.118
  CI (99.9%): [108548.406, 144628.756] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readSkipping
# Parameters: (dirPath = floatCompress/, file = enumerate, strategy = lz4)

# Run progress: 9.09% complete, ETA 00:09:27
# Fork: 1 of 1
# Warmup Iteration   1: 5.167 ms/op
# Warmup Iteration   2: 3.109 ms/op
# Warmup Iteration   3: 3.103 ms/op
# Warmup Iteration   4: 3.105 ms/op
# Warmup Iteration   5: 3.103 ms/op
# Warmup Iteration   6: 3.102 ms/op
# Warmup Iteration   7: 3.103 ms/op
# Warmup Iteration   8: 3.103 ms/op
# Warmup Iteration   9: 3.102 ms/op
# Warmup Iteration  10: 3.103 ms/op
Iteration   1: 3.102 ms/op
Iteration   2: 3.105 ms/op
Iteration   3: 3.103 ms/op
Iteration   4: 3.102 ms/op
Iteration   5: 3.103 ms/op
Iteration   6: 3.136 ms/op
Iteration   7: 3.098 ms/op
Iteration   8: 3.102 ms/op
Iteration   9: 3.097 ms/op
Iteration  10: 3.097 ms/op
Iteration  11: 3.099 ms/op
Iteration  12: 3.097 ms/op
Iteration  13: 3.098 ms/op
Iteration  14: 3.097 ms/op
Iteration  15: 3.097 ms/op
Iteration  16: 3.097 ms/op
Iteration  17: 3.097 ms/op
Iteration  18: 3.097 ms/op
Iteration  19: 3.097 ms/op
Iteration  20: 3.097 ms/op
Iteration  21: 3.097 ms/op
Iteration  22: 3.099 ms/op
Iteration  23: 3.130 ms/op
Iteration  24: 3.098 ms/op
Iteration  25: 3.098 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readSkipping":
  3.102 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (3.097, 3.102, 3.136), stdev = 0.010
  CI (99.9%): [3.094, 3.109] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readSkipping
# Parameters: (dirPath = floatCompress/, file = enumerate, strategy = none)

# Run progress: 18.18% complete, ETA 00:06:55
# Fork: 1 of 1
# Warmup Iteration   1: 0.161 ms/op
# Warmup Iteration   2: 0.164 ms/op
# Warmup Iteration   3: 0.181 ms/op
# Warmup Iteration   4: 0.158 ms/op
# Warmup Iteration   5: 0.157 ms/op
# Warmup Iteration   6: 0.158 ms/op
# Warmup Iteration   7: 0.158 ms/op
# Warmup Iteration   8: 0.159 ms/op
# Warmup Iteration   9: 0.189 ms/op
# Warmup Iteration  10: 0.160 ms/op
Iteration   1: 0.158 ms/op
Iteration   2: 0.158 ms/op
Iteration   3: 0.158 ms/op
Iteration   4: 0.158 ms/op
Iteration   5: 0.187 ms/op
Iteration   6: 0.158 ms/op
Iteration   7: 0.159 ms/op
Iteration   8: 0.158 ms/op
Iteration   9: 0.158 ms/op
Iteration  10: 0.157 ms/op
Iteration  11: 0.157 ms/op
Iteration  12: 0.157 ms/op
Iteration  13: 0.158 ms/op
Iteration  14: 0.158 ms/op
Iteration  15: 0.158 ms/op
Iteration  16: 0.158 ms/op
Iteration  17: 0.158 ms/op
Iteration  18: 0.158 ms/op
Iteration  19: 0.158 ms/op
Iteration  20: 0.157 ms/op
Iteration  21: 0.157 ms/op
Iteration  22: 0.158 ms/op
Iteration  23: 0.158 ms/op
Iteration  24: 0.158 ms/op
Iteration  25: 0.157 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readSkipping":
  0.159 ±(99.9%) 0.004 ms/op [Average]
  (min, avg, max) = (0.157, 0.159, 0.187), stdev = 0.006
  CI (99.9%): [0.155, 0.163] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readSkipping
# Parameters: (dirPath = floatCompress/, file = zipfLow, strategy = lz4)

# Run progress: 27.27% complete, ETA 00:05:40
# Fork: 1 of 1
# Warmup Iteration   1: 17.063 ms/op
# Warmup Iteration   2: 9.841 ms/op
# Warmup Iteration   3: 9.842 ms/op
# Warmup Iteration   4: 9.839 ms/op
# Warmup Iteration   5: 9.837 ms/op
# Warmup Iteration   6: 9.832 ms/op
# Warmup Iteration   7: 9.834 ms/op
# Warmup Iteration   8: 9.839 ms/op
# Warmup Iteration   9: 9.833 ms/op
# Warmup Iteration  10: 9.833 ms/op
Iteration   1: 9.836 ms/op
Iteration   2: 9.836 ms/op
Iteration   3: 9.833 ms/op
Iteration   4: 9.836 ms/op
Iteration   5: 9.835 ms/op
Iteration   6: 9.834 ms/op
Iteration   7: 9.837 ms/op
Iteration   8: 9.838 ms/op
Iteration   9: 9.833 ms/op
Iteration  10: 9.837 ms/op
Iteration  11: 9.840 ms/op
Iteration  12: 9.842 ms/op
Iteration  13: 9.835 ms/op
Iteration  14: 9.832 ms/op
Iteration  15: 9.834 ms/op
Iteration  16: 9.846 ms/op
Iteration  17: 9.835 ms/op
Iteration  18: 9.832 ms/op
Iteration  19: 9.838 ms/op
Iteration  20: 9.838 ms/op
Iteration  21: 9.835 ms/op
Iteration  22: 9.831 ms/op
Iteration  23: 9.835 ms/op
Iteration  24: 9.831 ms/op
Iteration  25: 9.833 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readSkipping":
  9.836 ±(99.9%) 0.003 ms/op [Average]
  (min, avg, max) = (9.831, 9.836, 9.846), stdev = 0.003
  CI (99.9%): [9.833, 9.838] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readSkipping
# Parameters: (dirPath = floatCompress/, file = zipfLow, strategy = none)

# Run progress: 36.36% complete, ETA 00:04:45
# Fork: 1 of 1
# Warmup Iteration   1: 0.176 ms/op
# Warmup Iteration   2: 0.158 ms/op
# Warmup Iteration   3: 0.158 ms/op
# Warmup Iteration   4: 0.158 ms/op
# Warmup Iteration   5: 0.157 ms/op
# Warmup Iteration   6: 0.158 ms/op
# Warmup Iteration   7: 0.157 ms/op
# Warmup Iteration   8: 0.188 ms/op
# Warmup Iteration   9: 0.157 ms/op
# Warmup Iteration  10: 0.158 ms/op
Iteration   1: 0.157 ms/op
Iteration   2: 0.158 ms/op
Iteration   3: 0.157 ms/op
Iteration   4: 0.157 ms/op
Iteration   5: 0.157 ms/op
Iteration   6: 0.189 ms/op
Iteration   7: 0.159 ms/op
Iteration   8: 0.159 ms/op
Iteration   9: 0.158 ms/op
Iteration  10: 0.158 ms/op
Iteration  11: 0.158 ms/op
Iteration  12: 0.158 ms/op
Iteration  13: 0.158 ms/op
Iteration  14: 0.158 ms/op
Iteration  15: 0.158 ms/op
Iteration  16: 0.159 ms/op
Iteration  17: 0.158 ms/op
Iteration  18: 0.158 ms/op
Iteration  19: 0.158 ms/op
Iteration  20: 0.158 ms/op
Iteration  21: 0.158 ms/op
Iteration  22: 0.158 ms/op
Iteration  23: 0.158 ms/op
Iteration  24: 0.158 ms/op
Iteration  25: 0.158 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readSkipping":
  0.159 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (0.157, 0.159, 0.189), stdev = 0.006
  CI (99.9%): [0.154, 0.164] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readSkipping
# Parameters: (dirPath = floatCompress/, file = zipfHigh, strategy = lz4)

# Run progress: 45.45% complete, ETA 00:03:58
# Fork: 1 of 1
# Warmup Iteration   1: 8.141 ms/op
# Warmup Iteration   2: 5.353 ms/op
# Warmup Iteration   3: 5.356 ms/op
# Warmup Iteration   4: 5.352 ms/op
# Warmup Iteration   5: 5.351 ms/op
# Warmup Iteration   6: 5.352 ms/op
# Warmup Iteration   7: 5.351 ms/op
# Warmup Iteration   8: 5.351 ms/op
# Warmup Iteration   9: 5.350 ms/op
# Warmup Iteration  10: 5.354 ms/op
Iteration   1: 5.355 ms/op
Iteration   2: 5.351 ms/op
Iteration   3: 5.351 ms/op
Iteration   4: 5.352 ms/op
Iteration   5: 5.350 ms/op
Iteration   6: 5.351 ms/op
Iteration   7: 5.352 ms/op
Iteration   8: 5.350 ms/op
Iteration   9: 5.350 ms/op
Iteration  10: 5.350 ms/op
Iteration  11: 5.353 ms/op
Iteration  12: 5.352 ms/op
Iteration  13: 5.351 ms/op
Iteration  14: 5.350 ms/op
Iteration  15: 5.349 ms/op
Iteration  16: 5.351 ms/op
Iteration  17: 5.399 ms/op
Iteration  18: 5.347 ms/op
Iteration  19: 5.346 ms/op
Iteration  20: 5.350 ms/op
Iteration  21: 5.349 ms/op
Iteration  22: 5.347 ms/op
Iteration  23: 5.346 ms/op
Iteration  24: 5.346 ms/op
Iteration  25: 5.346 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readSkipping":
  5.352 ±(99.9%) 0.008 ms/op [Average]
  (min, avg, max) = (5.346, 5.352, 5.399), stdev = 0.010
  CI (99.9%): [5.344, 5.359] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readSkipping
# Parameters: (dirPath = floatCompress/, file = zipfHigh, strategy = none)

# Run progress: 54.55% complete, ETA 00:03:15
# Fork: 1 of 1
# Warmup Iteration   1: 0.181 ms/op
# Warmup Iteration   2: 0.159 ms/op
# Warmup Iteration   3: 0.159 ms/op
# Warmup Iteration   4: 0.159 ms/op
# Warmup Iteration   5: 0.159 ms/op
# Warmup Iteration   6: 0.159 ms/op
# Warmup Iteration   7: 0.159 ms/op
# Warmup Iteration   8: 0.159 ms/op
# Warmup Iteration   9: 0.159 ms/op
# Warmup Iteration  10: 0.160 ms/op
Iteration   1: 0.159 ms/op
Iteration   2: 0.159 ms/op
Iteration   3: 0.159 ms/op
Iteration   4: 0.158 ms/op
Iteration   5: 0.159 ms/op
Iteration   6: 0.159 ms/op
Iteration   7: 0.159 ms/op
Iteration   8: 0.159 ms/op
Iteration   9: 0.159 ms/op
Iteration  10: 0.158 ms/op
Iteration  11: 0.158 ms/op
Iteration  12: 0.159 ms/op
Iteration  13: 0.159 ms/op
Iteration  14: 0.159 ms/op
Iteration  15: 0.159 ms/op
Iteration  16: 0.159 ms/op
Iteration  17: 0.159 ms/op
Iteration  18: 0.159 ms/op
Iteration  19: 0.158 ms/op
Iteration  20: 0.159 ms/op
Iteration  21: 0.159 ms/op
Iteration  22: 0.159 ms/op
Iteration  23: 0.159 ms/op
Iteration  24: 0.159 ms/op
Iteration  25: 0.160 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readSkipping":
  0.159 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.158, 0.159, 0.160), stdev = 0.001
  CI (99.9%): [0.159, 0.159] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readSkipping
# Parameters: (dirPath = floatCompress/, file = sequential, strategy = lz4)

# Run progress: 63.64% complete, ETA 00:02:33
# Fork: 1 of 1
# Warmup Iteration   1: 6.107 ms/op
# Warmup Iteration   2: 3.982 ms/op
# Warmup Iteration   3: 3.976 ms/op
# Warmup Iteration   4: 3.976 ms/op
# Warmup Iteration   5: 3.979 ms/op
# Warmup Iteration   6: 3.975 ms/op
# Warmup Iteration   7: 3.979 ms/op
# Warmup Iteration   8: 3.976 ms/op
# Warmup Iteration   9: 3.974 ms/op
# Warmup Iteration  10: 3.976 ms/op
Iteration   1: 3.975 ms/op
Iteration   2: 3.976 ms/op
Iteration   3: 3.975 ms/op
Iteration   4: 3.975 ms/op
Iteration   5: 3.975 ms/op
Iteration   6: 3.975 ms/op
Iteration   7: 3.979 ms/op
Iteration   8: 3.980 ms/op
Iteration   9: 3.978 ms/op
Iteration  10: 4.019 ms/op
Iteration  11: 3.982 ms/op
Iteration  12: 3.976 ms/op
Iteration  13: 3.981 ms/op
Iteration  14: 3.975 ms/op
Iteration  15: 3.973 ms/op
Iteration  16: 3.974 ms/op
Iteration  17: 3.974 ms/op
Iteration  18: 3.973 ms/op
Iteration  19: 3.973 ms/op
Iteration  20: 3.975 ms/op
Iteration  21: 3.976 ms/op
Iteration  22: 3.973 ms/op
Iteration  23: 3.973 ms/op
Iteration  24: 3.973 ms/op
Iteration  25: 3.974 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readSkipping":
  3.977 ±(99.9%) 0.007 ms/op [Average]
  (min, avg, max) = (3.973, 3.977, 4.019), stdev = 0.009
  CI (99.9%): [3.971, 3.984] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readSkipping
# Parameters: (dirPath = floatCompress/, file = sequential, strategy = none)

# Run progress: 72.73% complete, ETA 00:01:54
# Fork: 1 of 1
# Warmup Iteration   1: 0.174 ms/op
# Warmup Iteration   2: 0.158 ms/op
# Warmup Iteration   3: 0.157 ms/op
# Warmup Iteration   4: 0.158 ms/op
# Warmup Iteration   5: 0.157 ms/op
# Warmup Iteration   6: 0.157 ms/op
# Warmup Iteration   7: 0.157 ms/op
# Warmup Iteration   8: 0.157 ms/op
# Warmup Iteration   9: 0.157 ms/op
# Warmup Iteration  10: 0.158 ms/op
Iteration   1: 0.157 ms/op
Iteration   2: 0.157 ms/op
Iteration   3: 0.157 ms/op
Iteration   4: 0.157 ms/op
Iteration   5: 0.157 ms/op
Iteration   6: 0.157 ms/op
Iteration   7: 0.158 ms/op
Iteration   8: 0.158 ms/op
Iteration   9: 0.157 ms/op
Iteration  10: 0.157 ms/op
Iteration  11: 0.157 ms/op
Iteration  12: 0.157 ms/op
Iteration  13: 0.157 ms/op
Iteration  14: 0.158 ms/op
Iteration  15: 0.158 ms/op
Iteration  16: 0.157 ms/op
Iteration  17: 0.157 ms/op
Iteration  18: 0.157 ms/op
Iteration  19: 0.157 ms/op
Iteration  20: 0.157 ms/op
Iteration  21: 0.157 ms/op
Iteration  22: 0.157 ms/op
Iteration  23: 0.157 ms/op
Iteration  24: 0.157 ms/op
Iteration  25: 0.157 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readSkipping":
  0.157 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.157, 0.157, 0.158), stdev = 0.001
  CI (99.9%): [0.157, 0.157] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readSkipping
# Parameters: (dirPath = floatCompress/, file = uniform, strategy = lz4)

# Run progress: 81.82% complete, ETA 00:01:15
# Fork: 1 of 1
# Warmup Iteration   1: 3.487 ms/op
# Warmup Iteration   2: 2.155 ms/op
# Warmup Iteration   3: 2.150 ms/op
# Warmup Iteration   4: 2.149 ms/op
# Warmup Iteration   5: 2.149 ms/op
# Warmup Iteration   6: 2.148 ms/op
# Warmup Iteration   7: 2.148 ms/op
# Warmup Iteration   8: 2.149 ms/op
# Warmup Iteration   9: 2.150 ms/op
# Warmup Iteration  10: 2.148 ms/op
Iteration   1: 2.164 ms/op
Iteration   2: 2.143 ms/op
Iteration   3: 2.140 ms/op
Iteration   4: 2.139 ms/op
Iteration   5: 2.139 ms/op
Iteration   6: 2.138 ms/op
Iteration   7: 2.138 ms/op
Iteration   8: 2.137 ms/op
Iteration   9: 2.138 ms/op
Iteration  10: 2.138 ms/op
Iteration  11: 2.138 ms/op
Iteration  12: 2.138 ms/op
Iteration  13: 2.156 ms/op
Iteration  14: 2.137 ms/op
Iteration  15: 2.136 ms/op
Iteration  16: 2.136 ms/op
Iteration  17: 2.136 ms/op
Iteration  18: 2.136 ms/op
Iteration  19: 2.139 ms/op
Iteration  20: 2.136 ms/op
Iteration  21: 2.136 ms/op
Iteration  22: 2.136 ms/op
Iteration  23: 2.136 ms/op
Iteration  24: 2.136 ms/op
Iteration  25: 2.144 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readSkipping":
  2.140 ±(99.9%) 0.005 ms/op [Average]
  (min, avg, max) = (2.136, 2.140, 2.164), stdev = 0.007
  CI (99.9%): [2.135, 2.145] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readSkipping
# Parameters: (dirPath = floatCompress/, file = uniform, strategy = none)

# Run progress: 90.91% complete, ETA 00:00:37
# Fork: 1 of 1
# Warmup Iteration   1: 0.177 ms/op
# Warmup Iteration   2: 0.158 ms/op
# Warmup Iteration   3: 0.158 ms/op
# Warmup Iteration   4: 0.158 ms/op
# Warmup Iteration   5: 0.158 ms/op
# Warmup Iteration   6: 0.157 ms/op
# Warmup Iteration   7: 0.157 ms/op
# Warmup Iteration   8: 0.157 ms/op
# Warmup Iteration   9: 0.157 ms/op
# Warmup Iteration  10: 0.161 ms/op
Iteration   1: 0.158 ms/op
Iteration   2: 0.157 ms/op
Iteration   3: 0.158 ms/op
Iteration   4: 0.158 ms/op
Iteration   5: 0.158 ms/op
Iteration   6: 0.158 ms/op
Iteration   7: 0.158 ms/op
Iteration   8: 0.158 ms/op
Iteration   9: 0.157 ms/op
Iteration  10: 0.157 ms/op
Iteration  11: 0.157 ms/op
Iteration  12: 0.157 ms/op
Iteration  13: 0.158 ms/op
Iteration  14: 0.157 ms/op
Iteration  15: 0.158 ms/op
Iteration  16: 0.157 ms/op
Iteration  17: 0.157 ms/op
Iteration  18: 0.157 ms/op
Iteration  19: 0.172 ms/op
Iteration  20: 0.164 ms/op
Iteration  21: 0.157 ms/op
Iteration  22: 0.157 ms/op
Iteration  23: 0.158 ms/op
Iteration  24: 0.158 ms/op
Iteration  25: 0.157 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readSkipping":
  0.158 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.157, 0.158, 0.172), stdev = 0.003
  CI (99.9%): [0.156, 0.161] (assumes normal distribution)


# Run complete. Total time: 00:06:51

Benchmark                                     (dirPath)      (file)  (rowsPerSegment)  (schema)  (strategy)  Mode  Cnt       Score       Error  Units
FilterPartitionBenchmark.timeFilterNone             N/A         N/A            750000     basic         N/A  avgt   25  126588.581 ± 18040.175  us/op
FloatCompressionBenchmark.readSkipping   floatCompress/   enumerate               N/A       N/A         lz4  avgt   25       3.102 ±     0.007  ms/op
FloatCompressionBenchmark.readSkipping   floatCompress/   enumerate               N/A       N/A        none  avgt   25       0.159 ±     0.004  ms/op
FloatCompressionBenchmark.readSkipping   floatCompress/     zipfLow               N/A       N/A         lz4  avgt   25       9.836 ±     0.003  ms/op
FloatCompressionBenchmark.readSkipping   floatCompress/     zipfLow               N/A       N/A        none  avgt   25       0.159 ±     0.005  ms/op
FloatCompressionBenchmark.readSkipping   floatCompress/    zipfHigh               N/A       N/A         lz4  avgt   25       5.352 ±     0.008  ms/op
FloatCompressionBenchmark.readSkipping   floatCompress/    zipfHigh               N/A       N/A        none  avgt   25       0.159 ±     0.001  ms/op
FloatCompressionBenchmark.readSkipping   floatCompress/  sequential               N/A       N/A         lz4  avgt   25       3.977 ±     0.007  ms/op
FloatCompressionBenchmark.readSkipping   floatCompress/  sequential               N/A       N/A        none  avgt   25       0.157 ±     0.001  ms/op
FloatCompressionBenchmark.readSkipping   floatCompress/     uniform               N/A       N/A         lz4  avgt   25       2.140 ±     0.005  ms/op
FloatCompressionBenchmark.readSkipping   floatCompress/     uniform               N/A       N/A        none  avgt   25       0.158 ±     0.002  ms/op

Benchmark result is saved to exp-LOOP-out/druid_benchmarks_fixed_full_benchmark_FloatCompressionBenchmark_readSkipping_loop_trial5.csv
