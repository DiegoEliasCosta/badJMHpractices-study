# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FilterPartitionBenchmark.timeFilterNone
# Parameters: (rowsPerSegment = 750000, schema = basic)

# Run progress: 0.00% complete, ETA 00:06:25
# Fork: 1 of 1
# Warmup Iteration   1: 121895.843 us/op
# Warmup Iteration   2: 116435.293 us/op
# Warmup Iteration   3: 140093.716 us/op
# Warmup Iteration   4: 122753.637 us/op
# Warmup Iteration   5: 116221.898 us/op
# Warmup Iteration   6: 116176.095 us/op
# Warmup Iteration   7: 180739.712 us/op
# Warmup Iteration   8: 116025.575 us/op
# Warmup Iteration   9: 116020.096 us/op
# Warmup Iteration  10: 116028.503 us/op
Iteration   1: 135957.665 us/op
Iteration   2: 116055.090 us/op
Iteration   3: 116000.071 us/op
Iteration   4: 115990.301 us/op
Iteration   5: 170317.299 us/op
Iteration   6: 114761.775 us/op
Iteration   7: 116024.763 us/op
Iteration   8: 116033.887 us/op
Iteration   9: 116043.698 us/op
Iteration  10: 125048.506 us/op
Iteration  11: 134382.944 us/op
Iteration  12: 115939.294 us/op
Iteration  13: 136298.444 us/op
Iteration  14: 115893.920 us/op
Iteration  15: 115908.531 us/op
Iteration  16: 179104.781 us/op
Iteration  17: 116009.672 us/op
Iteration  18: 116009.528 us/op
Iteration  19: 116090.148 us/op
Iteration  20: 115927.462 us/op
Iteration  21: 115960.726 us/op
Iteration  22: 143115.631 us/op
Iteration  23: 115961.657 us/op
Iteration  24: 115939.551 us/op
Iteration  25: 115835.365 us/op


Result "io.druid.benchmark.FilterPartitionBenchmark.timeFilterNone":
  124424.428 ±(99.9%) 12906.978 us/op [Average]
  (min, avg, max) = (114761.775, 124424.428, 179104.781), stdev = 17230.447
  CI (99.9%): [111517.450, 137331.406] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = enumerate, strategy = lz4)

# Run progress: 9.09% complete, ETA 00:09:27
# Fork: 1 of 1
# Warmup Iteration   1: 37.815 ms/op
# Warmup Iteration   2: 24.692 ms/op
# Warmup Iteration   3: 24.832 ms/op
# Warmup Iteration   4: 24.688 ms/op
# Warmup Iteration   5: 25.397 ms/op
# Warmup Iteration   6: 24.772 ms/op
# Warmup Iteration   7: 24.779 ms/op
# Warmup Iteration   8: 24.751 ms/op
# Warmup Iteration   9: 24.680 ms/op
# Warmup Iteration  10: 24.690 ms/op
Iteration   1: 24.742 ms/op
Iteration   2: 24.860 ms/op
Iteration   3: 24.777 ms/op
Iteration   4: 24.694 ms/op
Iteration   5: 24.679 ms/op
Iteration   6: 24.835 ms/op
Iteration   7: 24.726 ms/op
Iteration   8: 24.708 ms/op
Iteration   9: 24.679 ms/op
Iteration  10: 24.668 ms/op
Iteration  11: 24.684 ms/op
Iteration  12: 24.880 ms/op
Iteration  13: 24.875 ms/op
Iteration  14: 24.714 ms/op
Iteration  15: 25.346 ms/op
Iteration  16: 24.720 ms/op
Iteration  17: 24.705 ms/op
Iteration  18: 24.675 ms/op
Iteration  19: 24.673 ms/op
Iteration  20: 25.451 ms/op
Iteration  21: 24.672 ms/op
Iteration  22: 24.720 ms/op
Iteration  23: 24.775 ms/op
Iteration  24: 24.673 ms/op
Iteration  25: 24.719 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  24.786 ±(99.9%) 0.147 ms/op [Average]
  (min, avg, max) = (24.668, 24.786, 25.451), stdev = 0.196
  CI (99.9%): [24.639, 24.933] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = enumerate, strategy = none)

# Run progress: 18.18% complete, ETA 00:06:57
# Fork: 1 of 1
# Warmup Iteration   1: 23.297 ms/op
# Warmup Iteration   2: 26.360 ms/op
# Warmup Iteration   3: 21.250 ms/op
# Warmup Iteration   4: 21.255 ms/op
# Warmup Iteration   5: 21.248 ms/op
# Warmup Iteration   6: 21.251 ms/op
# Warmup Iteration   7: 21.250 ms/op
# Warmup Iteration   8: 21.245 ms/op
# Warmup Iteration   9: 21.361 ms/op
# Warmup Iteration  10: 21.245 ms/op
Iteration   1: 21.244 ms/op
Iteration   2: 21.342 ms/op
Iteration   3: 21.243 ms/op
Iteration   4: 21.241 ms/op
Iteration   5: 21.243 ms/op
Iteration   6: 21.242 ms/op
Iteration   7: 21.223 ms/op
Iteration   8: 21.215 ms/op
Iteration   9: 21.220 ms/op
Iteration  10: 21.308 ms/op
Iteration  11: 21.218 ms/op
Iteration  12: 21.217 ms/op
Iteration  13: 21.221 ms/op
Iteration  14: 21.221 ms/op
Iteration  15: 21.219 ms/op
Iteration  16: 21.216 ms/op
Iteration  17: 21.318 ms/op
Iteration  18: 21.218 ms/op
Iteration  19: 21.230 ms/op
Iteration  20: 21.326 ms/op
Iteration  21: 21.220 ms/op
Iteration  22: 21.218 ms/op
Iteration  23: 21.221 ms/op
Iteration  24: 21.221 ms/op
Iteration  25: 21.220 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  21.241 ±(99.9%) 0.029 ms/op [Average]
  (min, avg, max) = (21.215, 21.241, 21.342), stdev = 0.038
  CI (99.9%): [21.212, 21.270] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = zipfLow, strategy = lz4)

# Run progress: 27.27% complete, ETA 00:05:43
# Fork: 1 of 1
# Warmup Iteration   1: 47.846 ms/op
# Warmup Iteration   2: 31.630 ms/op
# Warmup Iteration   3: 31.566 ms/op
# Warmup Iteration   4: 31.590 ms/op
# Warmup Iteration   5: 31.437 ms/op
# Warmup Iteration   6: 31.597 ms/op
# Warmup Iteration   7: 31.420 ms/op
# Warmup Iteration   8: 31.714 ms/op
# Warmup Iteration   9: 31.460 ms/op
# Warmup Iteration  10: 31.451 ms/op
Iteration   1: 31.540 ms/op
Iteration   2: 31.461 ms/op
Iteration   3: 31.472 ms/op
Iteration   4: 31.475 ms/op
Iteration   5: 31.554 ms/op
Iteration   6: 31.400 ms/op
Iteration   7: 31.409 ms/op
Iteration   8: 31.468 ms/op
Iteration   9: 31.479 ms/op
Iteration  10: 31.437 ms/op
Iteration  11: 31.393 ms/op
Iteration  12: 31.396 ms/op
Iteration  13: 31.481 ms/op
Iteration  14: 31.696 ms/op
Iteration  15: 31.461 ms/op
Iteration  16: 32.166 ms/op
Iteration  17: 31.390 ms/op
Iteration  18: 31.611 ms/op
Iteration  19: 31.488 ms/op
Iteration  20: 31.391 ms/op
Iteration  21: 31.455 ms/op
Iteration  22: 31.652 ms/op
Iteration  23: 31.670 ms/op
Iteration  24: 31.456 ms/op
Iteration  25: 31.415 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  31.513 ±(99.9%) 0.122 ms/op [Average]
  (min, avg, max) = (31.390, 31.513, 32.166), stdev = 0.162
  CI (99.9%): [31.391, 31.634] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = zipfLow, strategy = none)

# Run progress: 36.36% complete, ETA 00:04:47
# Fork: 1 of 1
# Warmup Iteration   1: 21.657 ms/op
# Warmup Iteration   2: 21.186 ms/op
# Warmup Iteration   3: 21.218 ms/op
# Warmup Iteration   4: 21.196 ms/op
# Warmup Iteration   5: 21.282 ms/op
# Warmup Iteration   6: 21.218 ms/op
# Warmup Iteration   7: 21.178 ms/op
# Warmup Iteration   8: 21.185 ms/op
# Warmup Iteration   9: 21.178 ms/op
# Warmup Iteration  10: 21.178 ms/op
Iteration   1: 21.177 ms/op
Iteration   2: 21.262 ms/op
Iteration   3: 21.212 ms/op
Iteration   4: 21.178 ms/op
Iteration   5: 21.261 ms/op
Iteration   6: 21.214 ms/op
Iteration   7: 21.666 ms/op
Iteration   8: 21.681 ms/op
Iteration   9: 21.660 ms/op
Iteration  10: 21.737 ms/op
Iteration  11: 21.659 ms/op
Iteration  12: 21.675 ms/op
Iteration  13: 21.774 ms/op
Iteration  14: 21.661 ms/op
Iteration  15: 21.659 ms/op
Iteration  16: 21.663 ms/op
Iteration  17: 21.756 ms/op
Iteration  18: 21.665 ms/op
Iteration  19: 21.658 ms/op
Iteration  20: 21.771 ms/op
Iteration  21: 21.660 ms/op
Iteration  22: 21.662 ms/op
Iteration  23: 21.712 ms/op
Iteration  24: 21.665 ms/op
Iteration  25: 21.660 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  21.574 ±(99.9%) 0.156 ms/op [Average]
  (min, avg, max) = (21.177, 21.574, 21.774), stdev = 0.208
  CI (99.9%): [21.418, 21.730] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = zipfHigh, strategy = lz4)

# Run progress: 45.45% complete, ETA 00:04:00
# Fork: 1 of 1
# Warmup Iteration   1: 44.698 ms/op
# Warmup Iteration   2: 33.339 ms/op
# Warmup Iteration   3: 28.830 ms/op
# Warmup Iteration   4: 28.304 ms/op
# Warmup Iteration   5: 28.134 ms/op
# Warmup Iteration   6: 28.152 ms/op
# Warmup Iteration   7: 28.115 ms/op
# Warmup Iteration   8: 28.015 ms/op
# Warmup Iteration   9: 28.103 ms/op
# Warmup Iteration  10: 28.153 ms/op
Iteration   1: 28.140 ms/op
Iteration   2: 28.114 ms/op
Iteration   3: 28.040 ms/op
Iteration   4: 28.019 ms/op
Iteration   5: 28.139 ms/op
Iteration   6: 28.487 ms/op
Iteration   7: 28.307 ms/op
Iteration   8: 28.226 ms/op
Iteration   9: 28.143 ms/op
Iteration  10: 28.258 ms/op
Iteration  11: 28.591 ms/op
Iteration  12: 28.105 ms/op
Iteration  13: 28.141 ms/op
Iteration  14: 28.239 ms/op
Iteration  15: 28.152 ms/op
Iteration  16: 28.129 ms/op
Iteration  17: 28.254 ms/op
Iteration  18: 28.063 ms/op
Iteration  19: 28.158 ms/op
Iteration  20: 28.177 ms/op
Iteration  21: 28.122 ms/op
Iteration  22: 28.087 ms/op
Iteration  23: 28.160 ms/op
Iteration  24: 28.100 ms/op
Iteration  25: 28.101 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  28.178 ±(99.9%) 0.097 ms/op [Average]
  (min, avg, max) = (28.019, 28.178, 28.591), stdev = 0.129
  CI (99.9%): [28.081, 28.275] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = zipfHigh, strategy = none)

# Run progress: 54.55% complete, ETA 00:03:16
# Fork: 1 of 1
# Warmup Iteration   1: 23.663 ms/op
# Warmup Iteration   2: 21.324 ms/op
# Warmup Iteration   3: 21.231 ms/op
# Warmup Iteration   4: 21.238 ms/op
# Warmup Iteration   5: 21.315 ms/op
# Warmup Iteration   6: 21.274 ms/op
# Warmup Iteration   7: 21.240 ms/op
# Warmup Iteration   8: 21.238 ms/op
# Warmup Iteration   9: 21.314 ms/op
# Warmup Iteration  10: 21.232 ms/op
Iteration   1: 21.226 ms/op
Iteration   2: 21.311 ms/op
Iteration   3: 21.257 ms/op
Iteration   4: 21.229 ms/op
Iteration   5: 21.226 ms/op
Iteration   6: 21.256 ms/op
Iteration   7: 21.686 ms/op
Iteration   8: 21.686 ms/op
Iteration   9: 21.690 ms/op
Iteration  10: 21.775 ms/op
Iteration  11: 21.684 ms/op
Iteration  12: 21.685 ms/op
Iteration  13: 21.717 ms/op
Iteration  14: 21.688 ms/op
Iteration  15: 21.682 ms/op
Iteration  16: 21.726 ms/op
Iteration  17: 21.767 ms/op
Iteration  18: 21.687 ms/op
Iteration  19: 21.687 ms/op
Iteration  20: 21.718 ms/op
Iteration  21: 21.686 ms/op
Iteration  22: 21.686 ms/op
Iteration  23: 21.718 ms/op
Iteration  24: 21.770 ms/op
Iteration  25: 21.686 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  21.597 ±(99.9%) 0.151 ms/op [Average]
  (min, avg, max) = (21.226, 21.597, 21.775), stdev = 0.201
  CI (99.9%): [21.447, 21.748] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = sequential, strategy = lz4)

# Run progress: 63.64% complete, ETA 00:02:35
# Fork: 1 of 1
# Warmup Iteration   1: 44.366 ms/op
# Warmup Iteration   2: 26.843 ms/op
# Warmup Iteration   3: 26.947 ms/op
# Warmup Iteration   4: 26.906 ms/op
# Warmup Iteration   5: 26.812 ms/op
# Warmup Iteration   6: 26.880 ms/op
# Warmup Iteration   7: 26.895 ms/op
# Warmup Iteration   8: 27.329 ms/op
# Warmup Iteration   9: 26.850 ms/op
# Warmup Iteration  10: 26.919 ms/op
Iteration   1: 26.981 ms/op
Iteration   2: 26.872 ms/op
Iteration   3: 26.989 ms/op
Iteration   4: 27.225 ms/op
Iteration   5: 26.912 ms/op
Iteration   6: 26.971 ms/op
Iteration   7: 26.819 ms/op
Iteration   8: 26.876 ms/op
Iteration   9: 26.850 ms/op
Iteration  10: 26.862 ms/op
Iteration  11: 26.826 ms/op
Iteration  12: 26.831 ms/op
Iteration  13: 27.008 ms/op
Iteration  14: 26.895 ms/op
Iteration  15: 26.920 ms/op
Iteration  16: 27.181 ms/op
Iteration  17: 26.845 ms/op
Iteration  18: 26.885 ms/op
Iteration  19: 26.958 ms/op
Iteration  20: 26.875 ms/op
Iteration  21: 26.974 ms/op
Iteration  22: 27.141 ms/op
Iteration  23: 26.868 ms/op
Iteration  24: 26.858 ms/op
Iteration  25: 26.875 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  26.932 ±(99.9%) 0.082 ms/op [Average]
  (min, avg, max) = (26.819, 26.932, 27.225), stdev = 0.109
  CI (99.9%): [26.850, 27.014] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = sequential, strategy = none)

# Run progress: 72.73% complete, ETA 00:01:55
# Fork: 1 of 1
# Warmup Iteration   1: 21.708 ms/op
# Warmup Iteration   2: 21.191 ms/op
# Warmup Iteration   3: 21.187 ms/op
# Warmup Iteration   4: 21.191 ms/op
# Warmup Iteration   5: 21.190 ms/op
# Warmup Iteration   6: 21.222 ms/op
# Warmup Iteration   7: 21.183 ms/op
# Warmup Iteration   8: 21.271 ms/op
# Warmup Iteration   9: 21.216 ms/op
# Warmup Iteration  10: 21.185 ms/op
Iteration   1: 21.183 ms/op
Iteration   2: 21.184 ms/op
Iteration   3: 21.218 ms/op
Iteration   4: 21.195 ms/op
Iteration   5: 21.268 ms/op
Iteration   6: 21.216 ms/op
Iteration   7: 21.178 ms/op
Iteration   8: 21.189 ms/op
Iteration   9: 21.301 ms/op
Iteration  10: 21.183 ms/op
Iteration  11: 21.178 ms/op
Iteration  12: 21.182 ms/op
Iteration  13: 21.180 ms/op
Iteration  14: 21.180 ms/op
Iteration  15: 21.179 ms/op
Iteration  16: 21.302 ms/op
Iteration  17: 21.193 ms/op
Iteration  18: 21.179 ms/op
Iteration  19: 21.181 ms/op
Iteration  20: 21.182 ms/op
Iteration  21: 21.180 ms/op
Iteration  22: 21.179 ms/op
Iteration  23: 21.312 ms/op
Iteration  24: 21.183 ms/op
Iteration  25: 21.183 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  21.203 ±(99.9%) 0.032 ms/op [Average]
  (min, avg, max) = (21.178, 21.203, 21.312), stdev = 0.043
  CI (99.9%): [21.171, 21.236] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = uniform, strategy = lz4)

# Run progress: 81.82% complete, ETA 00:01:16
# Fork: 1 of 1
# Warmup Iteration   1: 37.130 ms/op
# Warmup Iteration   2: 24.205 ms/op
# Warmup Iteration   3: 24.036 ms/op
# Warmup Iteration   4: 24.124 ms/op
# Warmup Iteration   5: 24.041 ms/op
# Warmup Iteration   6: 24.183 ms/op
# Warmup Iteration   7: 24.066 ms/op
# Warmup Iteration   8: 24.121 ms/op
# Warmup Iteration   9: 24.256 ms/op
# Warmup Iteration  10: 24.046 ms/op
Iteration   1: 24.641 ms/op
Iteration   2: 24.157 ms/op
Iteration   3: 24.027 ms/op
Iteration   4: 24.633 ms/op
Iteration   5: 24.052 ms/op
Iteration   6: 29.930 ms/op
Iteration   7: 24.036 ms/op
Iteration   8: 24.088 ms/op
Iteration   9: 24.042 ms/op
Iteration  10: 24.039 ms/op
Iteration  11: 24.061 ms/op
Iteration  12: 24.248 ms/op
Iteration  13: 24.093 ms/op
Iteration  14: 24.027 ms/op
Iteration  15: 24.075 ms/op
Iteration  16: 24.021 ms/op
Iteration  17: 24.032 ms/op
Iteration  18: 24.198 ms/op
Iteration  19: 24.068 ms/op
Iteration  20: 24.226 ms/op
Iteration  21: 24.125 ms/op
Iteration  22: 24.601 ms/op
Iteration  23: 24.030 ms/op
Iteration  24: 24.049 ms/op
Iteration  25: 24.232 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  24.389 ±(99.9%) 0.876 ms/op [Average]
  (min, avg, max) = (24.021, 24.389, 29.930), stdev = 1.170
  CI (99.9%): [23.513, 25.265] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FloatCompressionBenchmark.readContinuous
# Parameters: (dirPath = floatCompress/, file = uniform, strategy = none)

# Run progress: 90.91% complete, ETA 00:00:37
# Fork: 1 of 1
# Warmup Iteration   1: 23.525 ms/op
# Warmup Iteration   2: 21.279 ms/op
# Warmup Iteration   3: 21.196 ms/op
# Warmup Iteration   4: 21.192 ms/op
# Warmup Iteration   5: 21.189 ms/op
# Warmup Iteration   6: 21.224 ms/op
# Warmup Iteration   7: 21.183 ms/op
# Warmup Iteration   8: 21.185 ms/op
# Warmup Iteration   9: 21.270 ms/op
# Warmup Iteration  10: 21.212 ms/op
Iteration   1: 21.186 ms/op
Iteration   2: 21.267 ms/op
Iteration   3: 21.216 ms/op
Iteration   4: 21.183 ms/op
Iteration   5: 21.181 ms/op
Iteration   6: 21.217 ms/op
Iteration   7: 21.664 ms/op
Iteration   8: 21.663 ms/op
Iteration   9: 21.662 ms/op
Iteration  10: 21.739 ms/op
Iteration  11: 23.201 ms/op
Iteration  12: 23.727 ms/op
Iteration  13: 21.695 ms/op
Iteration  14: 21.664 ms/op
Iteration  15: 21.662 ms/op
Iteration  16: 21.667 ms/op
Iteration  17: 21.744 ms/op
Iteration  18: 21.663 ms/op
Iteration  19: 21.664 ms/op
Iteration  20: 21.693 ms/op
Iteration  21: 21.665 ms/op
Iteration  22: 21.663 ms/op
Iteration  23: 21.692 ms/op
Iteration  24: 21.745 ms/op
Iteration  25: 21.663 ms/op


Result "io.druid.benchmark.FloatCompressionBenchmark.readContinuous":
  21.711 ±(99.9%) 0.428 ms/op [Average]
  (min, avg, max) = (21.181, 21.711, 23.727), stdev = 0.571
  CI (99.9%): [21.283, 22.139] (assumes normal distribution)


# Run complete. Total time: 00:06:55

Benchmark                                      (dirPath)      (file)  (rowsPerSegment)  (schema)  (strategy)  Mode  Cnt       Score       Error  Units
FilterPartitionBenchmark.timeFilterNone              N/A         N/A            750000     basic         N/A  avgt   25  124424.428 ± 12906.978  us/op
FloatCompressionBenchmark.readContinuous  floatCompress/   enumerate               N/A       N/A         lz4  avgt   25      24.786 ±     0.147  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/   enumerate               N/A       N/A        none  avgt   25      21.241 ±     0.029  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/     zipfLow               N/A       N/A         lz4  avgt   25      31.513 ±     0.122  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/     zipfLow               N/A       N/A        none  avgt   25      21.574 ±     0.156  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/    zipfHigh               N/A       N/A         lz4  avgt   25      28.178 ±     0.097  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/    zipfHigh               N/A       N/A        none  avgt   25      21.597 ±     0.151  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/  sequential               N/A       N/A         lz4  avgt   25      26.932 ±     0.082  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/  sequential               N/A       N/A        none  avgt   25      21.203 ±     0.032  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/     uniform               N/A       N/A         lz4  avgt   25      24.389 ±     0.876  ms/op
FloatCompressionBenchmark.readContinuous  floatCompress/     uniform               N/A       N/A        none  avgt   25      21.711 ±     0.428  ms/op

Benchmark result is saved to exp-LOOP-out/druid_benchmarks_fixed_full_benchmark_FloatCompressionBenchmark_readContinuous_loop_trial5.csv
