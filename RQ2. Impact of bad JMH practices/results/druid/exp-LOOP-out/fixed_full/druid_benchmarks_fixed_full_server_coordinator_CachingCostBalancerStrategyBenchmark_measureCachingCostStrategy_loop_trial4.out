# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 10 iterations, 1 s each
# Measurement: 25 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.benchmark.FilterPartitionBenchmark.timeFilterNone
# Parameters: (rowsPerSegment = 750000, schema = basic)

# Run progress: 0.00% complete, ETA 00:00:50
# Fork: 1 of 1
# Warmup Iteration   1: 121153.843 us/op
# Warmup Iteration   2: 114641.411 us/op
# Warmup Iteration   3: 138122.702 us/op
# Warmup Iteration   4: 114665.925 us/op
# Warmup Iteration   5: 114794.407 us/op
# Warmup Iteration   6: 114812.752 us/op
# Warmup Iteration   7: 179810.791 us/op
# Warmup Iteration   8: 115312.390 us/op
# Warmup Iteration   9: 115373.578 us/op
# Warmup Iteration  10: 115329.537 us/op
Iteration   1: 132888.295 us/op
Iteration   2: 114708.329 us/op
Iteration   3: 114740.723 us/op
Iteration   4: 114716.547 us/op
Iteration   5: 207077.794 us/op
Iteration   6: 129602.379 us/op
Iteration   7: 115395.935 us/op
Iteration   8: 115344.210 us/op
Iteration   9: 115297.293 us/op
Iteration  10: 142840.710 us/op
Iteration  11: 132149.772 us/op
Iteration  12: 115307.671 us/op
Iteration  13: 115587.581 us/op
Iteration  14: 115311.419 us/op
Iteration  15: 165750.988 us/op
Iteration  16: 129965.467 us/op
Iteration  17: 115352.716 us/op
Iteration  18: 115393.307 us/op
Iteration  19: 115314.963 us/op
Iteration  20: 115669.784 us/op
Iteration  21: 136080.398 us/op
Iteration  22: 130078.016 us/op
Iteration  23: 114775.645 us/op
Iteration  24: 114841.844 us/op
Iteration  25: 114776.167 us/op


Result "io.druid.benchmark.FilterPartitionBenchmark.timeFilterNone":
  125958.718 ±(99.9%) 15706.776 us/op [Average]
  (min, avg, max) = (114708.329, 125958.718, 207077.794), stdev = 20968.097
  CI (99.9%): [110251.942, 141665.494] (assumes normal distribution)


# JMH version: 1.19
# VM version: JDK 1.8.0_144, VM 25.144-b01
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.druid.server.coordinator.CachingCostBalancerStrategyBenchmark.measureCachingCostStrategy

# Run progress: 70.00% complete, ETA 00:00:23
# Fork: 1 of 1
# Warmup Iteration   1: 2.884 us/op
# Warmup Iteration   2: 2.728 us/op
# Warmup Iteration   3: 2.666 us/op
# Warmup Iteration   4: 2.667 us/op
# Warmup Iteration   5: 2.666 us/op
Iteration   1: 2.665 us/op
Iteration   2: 2.659 us/op
Iteration   3: 2.674 us/op
Iteration   4: 2.648 us/op
Iteration   5: 2.663 us/op
Iteration   6: 2.664 us/op
Iteration   7: 2.660 us/op
Iteration   8: 2.673 us/op
Iteration   9: 2.662 us/op
Iteration  10: 2.673 us/op


Result "io.druid.server.coordinator.CachingCostBalancerStrategyBenchmark.measureCachingCostStrategy":
  2.664 ±(99.9%) 0.012 us/op [Average]
  (min, avg, max) = (2.648, 2.664, 2.674), stdev = 0.008
  CI (99.9%): [2.652, 2.676] (assumes normal distribution)


# Run complete. Total time: 00:01:12

Benchmark                                                                               (rowsPerSegment)  (schema)  Mode  Cnt       Score       Error  Units
i.d.benchmark.FilterPartitionBenchmark.timeFilterNone                                             750000     basic  avgt   25  125958.718 ± 15706.776  us/op
i.d.server.coordinator.CachingCostBalancerStrategyBenchmark.measureCachingCostStrategy               N/A       N/A  avgt   10       2.664 ±     0.012  us/op

Benchmark result is saved to exp-LOOP-out/druid_benchmarks_fixed_full_server_coordinator_CachingCostBalancerStrategyBenchmark_measureCachingCostStrategy_loop_trial4.csv
